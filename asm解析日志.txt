Last login: Tue Oct 19 11:58:58 on ttys001
liuhangdeMacBook-Pro:~ liuhang$ python /Users/liuhang/Downloads/parse_stack.py /Users/liuhang/xcrash.asm /Users/liuhang/Documents/xcrashLog.txt
parseasm start====================
sohead so: libxcrash.so
funchead startaddr: 0000000000002410,funcname: eventfd@plt-0x20
funcline addr: 9232
funcline addr: 9236
funcline addr: 9240
funcline addr: 9244
funcline addr: 9248
funcline addr: 9252
funcline addr: 9256
funcline addr: 9260
['eventfd@plt-0x20', 9232, 9232, 9260, []]
restartcode
['eventfd@plt-0x20', 9232, 9260, 9260, ['']]
code
funchead startaddr: 0000000000002430,funcname: eventfd@plt
funcline addr: 9264
funcline addr: 9268
funcline addr: 9272
funcline addr: 9276
['eventfd@plt', 9264, 9264, 9276, []]
restartcode
['eventfd@plt', 9264, 9276, 9276, ['']]
code
funchead startaddr: 0000000000002440,funcname: popen@plt
funcline addr: 9280
funcline addr: 9284
funcline addr: 9288
funcline addr: 9292
['popen@plt', 9280, 9280, 9292, []]
restartcode
['popen@plt', 9280, 9292, 9292, ['']]
code
funchead startaddr: 0000000000002450,funcname: pthread_detach@plt
funcline addr: 9296
funcline addr: 9300
funcline addr: 9304
funcline addr: 9308
['pthread_detach@plt', 9296, 9296, 9308, []]
restartcode
['pthread_detach@plt', 9296, 9308, 9308, ['']]
code
funchead startaddr: 0000000000002460,funcname: sigemptyset@plt
funcline addr: 9312
funcline addr: 9316
funcline addr: 9320
funcline addr: 9324
['sigemptyset@plt', 9312, 9312, 9324, []]
restartcode
['sigemptyset@plt', 9312, 9324, 9324, ['']]
code
funchead startaddr: 0000000000002470,funcname: pthread_create@plt
funcline addr: 9328
funcline addr: 9332
funcline addr: 9336
funcline addr: 9340
['pthread_create@plt', 9328, 9328, 9340, []]
restartcode
['pthread_create@plt', 9328, 9340, 9340, ['']]
code
funchead startaddr: 0000000000002480,funcname: pthread_join@plt
funcline addr: 9344
funcline addr: 9348
funcline addr: 9352
funcline addr: 9356
['pthread_join@plt', 9344, 9344, 9356, []]
restartcode
['pthread_join@plt', 9344, 9356, 9356, ['']]
code
funchead startaddr: 0000000000002490,funcname: gettid@plt
funcline addr: 9360
funcline addr: 9364
funcline addr: 9368
funcline addr: 9372
['gettid@plt', 9360, 9360, 9372, []]
restartcode
['gettid@plt', 9360, 9372, 9372, ['']]
code
funchead startaddr: 00000000000024a0,funcname: open@plt
funcline addr: 9376
funcline addr: 9380
funcline addr: 9384
funcline addr: 9388
['open@plt', 9376, 9376, 9388, []]
restartcode
['open@plt', 9376, 9388, 9388, ['']]
code
funchead startaddr: 00000000000024b0,funcname: __vsnprintf_chk@plt
funcline addr: 9392
funcline addr: 9396
funcline addr: 9400
funcline addr: 9404
['__vsnprintf_chk@plt', 9392, 9392, 9404, []]
restartcode
['__vsnprintf_chk@plt', 9392, 9404, 9404, ['']]
code
funchead startaddr: 00000000000024c0,funcname: pthread_once@plt
funcline addr: 9408
funcline addr: 9412
funcline addr: 9416
funcline addr: 9420
['pthread_once@plt', 9408, 9408, 9420, []]
restartcode
['pthread_once@plt', 9408, 9420, 9420, ['']]
code
funchead startaddr: 00000000000024d0,funcname: __cxa_finalize@plt
funcline addr: 9424
funcline addr: 9428
funcline addr: 9432
funcline addr: 9436
['__cxa_finalize@plt', 9424, 9424, 9436, []]
restartcode
['__cxa_finalize@plt', 9424, 9436, 9436, ['']]
code
funchead startaddr: 00000000000024e0,funcname: siglongjmp@plt
funcline addr: 9440
funcline addr: 9444
funcline addr: 9448
funcline addr: 9452
['siglongjmp@plt', 9440, 9440, 9452, []]
restartcode
['siglongjmp@plt', 9440, 9452, 9452, ['']]
code
funchead startaddr: 00000000000024f0,funcname: mkdir@plt
funcline addr: 9456
funcline addr: 9460
funcline addr: 9464
funcline addr: 9468
['mkdir@plt', 9456, 9456, 9468, []]
restartcode
['mkdir@plt', 9456, 9468, 9468, ['']]
code
funchead startaddr: 0000000000002500,funcname: calloc@plt
funcline addr: 9472
funcline addr: 9476
funcline addr: 9480
funcline addr: 9484
['calloc@plt', 9472, 9472, 9484, []]
restartcode
['calloc@plt', 9472, 9484, 9484, ['']]
code
funchead startaddr: 0000000000002510,funcname: strncmp@plt
funcline addr: 9488
funcline addr: 9492
funcline addr: 9496
funcline addr: 9500
['strncmp@plt', 9488, 9488, 9500, []]
restartcode
['strncmp@plt', 9488, 9500, 9500, ['']]
code
funchead startaddr: 0000000000002520,funcname: pthread_sigmask@plt
funcline addr: 9504
funcline addr: 9508
funcline addr: 9512
funcline addr: 9516
['pthread_sigmask@plt', 9504, 9504, 9516, []]
restartcode
['pthread_sigmask@plt', 9504, 9516, 9516, ['']]
code
funchead startaddr: 0000000000002530,funcname: read@plt
funcline addr: 9520
funcline addr: 9524
funcline addr: 9528
funcline addr: 9532
['read@plt', 9520, 9520, 9532, []]
restartcode
['read@plt', 9520, 9532, 9532, ['']]
code
funchead startaddr: 0000000000002540,funcname: __strlen_chk@plt
funcline addr: 9536
funcline addr: 9540
funcline addr: 9544
funcline addr: 9548
['__strlen_chk@plt', 9536, 9536, 9548, []]
restartcode
['__strlen_chk@plt', 9536, 9548, 9548, ['']]
code
funchead startaddr: 0000000000002550,funcname: fstat@plt
funcline addr: 9552
funcline addr: 9556
funcline addr: 9560
funcline addr: 9564
['fstat@plt', 9552, 9552, 9564, []]
restartcode
['fstat@plt', 9552, 9564, 9564, ['']]
code
funchead startaddr: 0000000000002560,funcname: abort@plt
funcline addr: 9568
funcline addr: 9572
funcline addr: 9576
funcline addr: 9580
['abort@plt', 9568, 9568, 9580, []]
restartcode
['abort@plt', 9568, 9580, 9580, ['']]
code
funchead startaddr: 0000000000002570,funcname: vsnprintf@plt
funcline addr: 9584
funcline addr: 9588
funcline addr: 9592
funcline addr: 9596
['vsnprintf@plt', 9584, 9584, 9596, []]
restartcode
['vsnprintf@plt', 9584, 9596, 9596, ['']]
code
funchead startaddr: 0000000000002580,funcname: sigaltstack@plt
funcline addr: 9600
funcline addr: 9604
funcline addr: 9608
funcline addr: 9612
['sigaltstack@plt', 9600, 9600, 9612, []]
restartcode
['sigaltstack@plt', 9600, 9612, 9612, ['']]
code
funchead startaddr: 0000000000002590,funcname: closedir@plt
funcline addr: 9616
funcline addr: 9620
funcline addr: 9624
funcline addr: 9628
['closedir@plt', 9616, 9616, 9628, []]
restartcode
['closedir@plt', 9616, 9628, 9628, ['']]
code
funchead startaddr: 00000000000025a0,funcname: _exit@plt
funcline addr: 9632
funcline addr: 9636
funcline addr: 9640
funcline addr: 9644
['_exit@plt', 9632, 9632, 9644, []]
restartcode
['_exit@plt', 9632, 9644, 9644, ['']]
code
funchead startaddr: 00000000000025b0,funcname: __errno@plt
funcline addr: 9648
funcline addr: 9652
funcline addr: 9656
funcline addr: 9660
['__errno@plt', 9648, 9648, 9660, []]
restartcode
['__errno@plt', 9648, 9660, 9660, ['']]
code
funchead startaddr: 00000000000025c0,funcname: getpid@plt
funcline addr: 9664
funcline addr: 9668
funcline addr: 9672
funcline addr: 9676
['getpid@plt', 9664, 9664, 9676, []]
restartcode
['getpid@plt', 9664, 9676, 9676, ['']]
code
funchead startaddr: 00000000000025d0,funcname: clone@plt
funcline addr: 9680
funcline addr: 9684
funcline addr: 9688
funcline addr: 9692
['clone@plt', 9680, 9680, 9692, []]
restartcode
['clone@plt', 9680, 9692, 9692, ['']]
code
funchead startaddr: 00000000000025e0,funcname: xc_test_crash@plt
funcline addr: 9696
funcline addr: 9700
funcline addr: 9704
funcline addr: 9708
['xc_test_crash@plt', 9696, 9696, 9708, []]
restartcode
['xc_test_crash@plt', 9696, 9708, 9708, ['']]
code
funchead startaddr: 00000000000025f0,funcname: __strncpy_chk2@plt
funcline addr: 9712
funcline addr: 9716
funcline addr: 9720
funcline addr: 9724
['__strncpy_chk2@plt', 9712, 9712, 9724, []]
restartcode
['__strncpy_chk2@plt', 9712, 9724, 9724, ['']]
code
funchead startaddr: 0000000000002600,funcname: __memcpy_chk@plt
funcline addr: 9728
funcline addr: 9732
funcline addr: 9736
funcline addr: 9740
['__memcpy_chk@plt', 9728, 9728, 9740, []]
restartcode
['__memcpy_chk@plt', 9728, 9740, 9740, ['']]
code
funchead startaddr: 0000000000002610,funcname: dl_iterate_phdr@plt
funcline addr: 9744
funcline addr: 9748
funcline addr: 9752
funcline addr: 9756
['dl_iterate_phdr@plt', 9744, 9744, 9756, []]
restartcode
['dl_iterate_phdr@plt', 9744, 9756, 9756, ['']]
code
funchead startaddr: 0000000000002620,funcname: sscanf@plt
funcline addr: 9760
funcline addr: 9764
funcline addr: 9768
funcline addr: 9772
['sscanf@plt', 9760, 9760, 9772, []]
restartcode
['sscanf@plt', 9760, 9772, 9772, ['']]
code
funchead startaddr: 0000000000002630,funcname: scandir@plt
funcline addr: 9776
funcline addr: 9780
funcline addr: 9784
funcline addr: 9788
['scandir@plt', 9776, 9776, 9788, []]
restartcode
['scandir@plt', 9776, 9788, 9788, ['']]
code
funchead startaddr: 0000000000002640,funcname: write@plt
funcline addr: 9792
funcline addr: 9796
funcline addr: 9800
funcline addr: 9804
['write@plt', 9792, 9792, 9804, []]
restartcode
['write@plt', 9792, 9804, 9804, ['']]
code
funchead startaddr: 0000000000002650,funcname: xc_test_call_1@plt
funcline addr: 9808
funcline addr: 9812
funcline addr: 9816
funcline addr: 9820
['xc_test_call_1@plt', 9808, 9808, 9820, []]
restartcode
['xc_test_call_1@plt', 9808, 9820, 9820, ['']]
code
funchead startaddr: 0000000000002660,funcname: xc_test_call_2@plt
funcline addr: 9824
funcline addr: 9828
funcline addr: 9832
funcline addr: 9836
['xc_test_call_2@plt', 9824, 9824, 9836, []]
restartcode
['xc_test_call_2@plt', 9824, 9836, 9836, ['']]
code
funchead startaddr: 0000000000002670,funcname: xc_test_call_4@plt
funcline addr: 9840
funcline addr: 9844
funcline addr: 9848
funcline addr: 9852
['xc_test_call_4@plt', 9840, 9840, 9852, []]
restartcode
['xc_test_call_4@plt', 9840, 9852, 9852, ['']]
code
funchead startaddr: 0000000000002680,funcname: xc_test_call_3@plt
funcline addr: 9856
funcline addr: 9860
funcline addr: 9864
funcline addr: 9868
['xc_test_call_3@plt', 9856, 9856, 9868, []]
restartcode
['xc_test_call_3@plt', 9856, 9868, 9868, ['']]
code
funchead startaddr: 0000000000002690,funcname: access@plt
funcline addr: 9872
funcline addr: 9876
funcline addr: 9880
funcline addr: 9884
['access@plt', 9872, 9872, 9884, []]
restartcode
['access@plt', 9872, 9884, 9884, ['']]
code
funchead startaddr: 00000000000026a0,funcname: memcmp@plt
funcline addr: 9888
funcline addr: 9892
funcline addr: 9896
funcline addr: 9900
['memcmp@plt', 9888, 9888, 9900, []]
restartcode
['memcmp@plt', 9888, 9900, 9900, ['']]
code
funchead startaddr: 00000000000026b0,funcname: fclose@plt
funcline addr: 9904
funcline addr: 9908
funcline addr: 9912
funcline addr: 9916
['fclose@plt', 9904, 9904, 9916, []]
restartcode
['fclose@plt', 9904, 9916, 9916, ['']]
code
funchead startaddr: 00000000000026c0,funcname: lseek@plt
funcline addr: 9920
funcline addr: 9924
funcline addr: 9928
funcline addr: 9932
['lseek@plt', 9920, 9920, 9932, []]
restartcode
['lseek@plt', 9920, 9932, 9932, ['']]
code
funchead startaddr: 00000000000026d0,funcname: fflush@plt
funcline addr: 9936
funcline addr: 9940
funcline addr: 9944
funcline addr: 9948
['fflush@plt', 9936, 9936, 9948, []]
restartcode
['fflush@plt', 9936, 9948, 9948, ['']]
code
funchead startaddr: 00000000000026e0,funcname: rewind@plt
funcline addr: 9952
funcline addr: 9956
funcline addr: 9960
funcline addr: 9964
['rewind@plt', 9952, 9952, 9964, []]
restartcode
['rewind@plt', 9952, 9964, 9964, ['']]
code
funchead startaddr: 00000000000026f0,funcname: __stack_chk_fail@plt
funcline addr: 9968
funcline addr: 9972
funcline addr: 9976
funcline addr: 9980
['__stack_chk_fail@plt', 9968, 9968, 9980, []]
restartcode
['__stack_chk_fail@plt', 9968, 9980, 9980, ['']]
code
funchead startaddr: 0000000000002700,funcname: fgets@plt
funcline addr: 9984
funcline addr: 9988
funcline addr: 9992
funcline addr: 9996
['fgets@plt', 9984, 9984, 9996, []]
restartcode
['fgets@plt', 9984, 9996, 9996, ['']]
code
funchead startaddr: 0000000000002710,funcname: gettimeofday@plt
funcline addr: 10000
funcline addr: 10004
funcline addr: 10008
funcline addr: 10012
['gettimeofday@plt', 10000, 10000, 10012, []]
restartcode
['gettimeofday@plt', 10000, 10012, 10012, ['']]
code
funchead startaddr: 0000000000002720,funcname: dlclose@plt
funcline addr: 10016
funcline addr: 10020
funcline addr: 10024
funcline addr: 10028
['dlclose@plt', 10016, 10016, 10028, []]
restartcode
['dlclose@plt', 10016, 10028, 10028, ['']]
code
funchead startaddr: 0000000000002730,funcname: prctl@plt
funcline addr: 10032
funcline addr: 10036
funcline addr: 10040
funcline addr: 10044
['prctl@plt', 10032, 10032, 10044, []]
restartcode
['prctl@plt', 10032, 10044, 10044, ['']]
code
funchead startaddr: 0000000000002740,funcname: opendir@plt
funcline addr: 10048
funcline addr: 10052
funcline addr: 10056
funcline addr: 10060
['opendir@plt', 10048, 10048, 10060, []]
restartcode
['opendir@plt', 10048, 10060, 10060, ['']]
code
funchead startaddr: 0000000000002750,funcname: pthread_setname_np@plt
funcline addr: 10064
funcline addr: 10068
funcline addr: 10072
funcline addr: 10076
['pthread_setname_np@plt', 10064, 10064, 10076, []]
restartcode
['pthread_setname_np@plt', 10064, 10076, 10076, ['']]
code
funchead startaddr: 0000000000002760,funcname: dlsym@plt
funcline addr: 10080
funcline addr: 10084
funcline addr: 10088
funcline addr: 10092
['dlsym@plt', 10080, 10080, 10092, []]
restartcode
['dlsym@plt', 10080, 10092, 10092, ['']]
code
funchead startaddr: 0000000000002770,funcname: __android_log_print@plt
funcline addr: 10096
funcline addr: 10100
funcline addr: 10104
funcline addr: 10108
['__android_log_print@plt', 10096, 10096, 10108, []]
restartcode
['__android_log_print@plt', 10096, 10108, 10108, ['']]
code
funchead startaddr: 0000000000002780,funcname: localtime_r@plt
funcline addr: 10112
funcline addr: 10116
funcline addr: 10120
funcline addr: 10124
['localtime_r@plt', 10112, 10112, 10124, []]
restartcode
['localtime_r@plt', 10112, 10124, 10124, ['']]
code
funchead startaddr: 0000000000002790,funcname: unlink@plt
funcline addr: 10128
funcline addr: 10132
funcline addr: 10136
funcline addr: 10140
['unlink@plt', 10128, 10128, 10140, []]
restartcode
['unlink@plt', 10128, 10140, 10140, ['']]
code
funchead startaddr: 00000000000027a0,funcname: uname@plt
funcline addr: 10144
funcline addr: 10148
funcline addr: 10152
funcline addr: 10156
['uname@plt', 10144, 10144, 10156, []]
restartcode
['uname@plt', 10144, 10156, 10156, ['']]
code
funchead startaddr: 00000000000027b0,funcname: writev@plt
funcline addr: 10160
funcline addr: 10164
funcline addr: 10168
funcline addr: 10172
['writev@plt', 10160, 10160, 10172, []]
restartcode
['writev@plt', 10160, 10172, 10172, ['']]
code
funchead startaddr: 00000000000027c0,funcname: strcmp@plt
funcline addr: 10176
funcline addr: 10180
funcline addr: 10184
funcline addr: 10188
['strcmp@plt', 10176, 10176, 10188, []]
restartcode
['strcmp@plt', 10176, 10188, 10188, ['']]
code
funchead startaddr: 00000000000027d0,funcname: __open_2@plt
funcline addr: 10192
funcline addr: 10196
funcline addr: 10200
funcline addr: 10204
['__open_2@plt', 10192, 10192, 10204, []]
restartcode
['__open_2@plt', 10192, 10204, 10204, ['']]
code
funchead startaddr: 00000000000027e0,funcname: pipe2@plt
funcline addr: 10208
funcline addr: 10212
funcline addr: 10216
funcline addr: 10220
['pipe2@plt', 10208, 10208, 10220, []]
restartcode
['pipe2@plt', 10208, 10220, 10220, ['']]
code
funchead startaddr: 00000000000027f0,funcname: syscall@plt
funcline addr: 10224
funcline addr: 10228
funcline addr: 10232
funcline addr: 10236
['syscall@plt', 10224, 10224, 10236, []]
restartcode
['syscall@plt', 10224, 10236, 10236, ['']]
code
funchead startaddr: 0000000000002800,funcname: sigaddset@plt
funcline addr: 10240
funcline addr: 10244
funcline addr: 10248
funcline addr: 10252
['sigaddset@plt', 10240, 10240, 10252, []]
restartcode
['sigaddset@plt', 10240, 10252, 10252, ['']]
code
funchead startaddr: 0000000000002810,funcname: sigaction@plt
funcline addr: 10256
funcline addr: 10260
funcline addr: 10264
funcline addr: 10268
['sigaction@plt', 10256, 10256, 10268, []]
restartcode
['sigaction@plt', 10256, 10268, 10268, ['']]
code
funchead startaddr: 0000000000002820,funcname: pthread_mutex_lock@plt
funcline addr: 10272
funcline addr: 10276
funcline addr: 10280
funcline addr: 10284
['pthread_mutex_lock@plt', 10272, 10272, 10284, []]
restartcode
['pthread_mutex_lock@plt', 10272, 10284, 10284, ['']]
code
funchead startaddr: 0000000000002830,funcname: mmap@plt
funcline addr: 10288
funcline addr: 10292
funcline addr: 10296
funcline addr: 10300
['mmap@plt', 10288, 10288, 10300, []]
restartcode
['mmap@plt', 10288, 10300, 10300, ['']]
code
funchead startaddr: 0000000000002840,funcname: readlink@plt
funcline addr: 10304
funcline addr: 10308
funcline addr: 10312
funcline addr: 10316
['readlink@plt', 10304, 10304, 10316, []]
restartcode
['readlink@plt', 10304, 10316, 10316, ['']]
code
funchead startaddr: 0000000000002850,funcname: strstr@plt
funcline addr: 10320
funcline addr: 10324
funcline addr: 10328
funcline addr: 10332
['strstr@plt', 10320, 10320, 10332, []]
restartcode
['strstr@plt', 10320, 10332, 10332, ['']]
code
funchead startaddr: 0000000000002860,funcname: strdup@plt
funcline addr: 10336
funcline addr: 10340
funcline addr: 10344
funcline addr: 10348
['strdup@plt', 10336, 10336, 10348, []]
restartcode
['strdup@plt', 10336, 10348, 10348, ['']]
code
funchead startaddr: 0000000000002870,funcname: usleep@plt
funcline addr: 10352
funcline addr: 10356
funcline addr: 10360
funcline addr: 10364
['usleep@plt', 10352, 10352, 10364, []]
restartcode
['usleep@plt', 10352, 10364, 10364, ['']]
code
funchead startaddr: 0000000000002880,funcname: dladdr@plt
funcline addr: 10368
funcline addr: 10372
funcline addr: 10376
funcline addr: 10380
['dladdr@plt', 10368, 10368, 10380, []]
restartcode
['dladdr@plt', 10368, 10380, 10380, ['']]
code
funchead startaddr: 0000000000002890,funcname: readdir@plt
funcline addr: 10384
funcline addr: 10388
funcline addr: 10392
funcline addr: 10396
['readdir@plt', 10384, 10384, 10396, []]
restartcode
['readdir@plt', 10384, 10396, 10396, ['']]
code
funchead startaddr: 00000000000028a0,funcname: strlen@plt
funcline addr: 10400
funcline addr: 10404
funcline addr: 10408
funcline addr: 10412
['strlen@plt', 10400, 10400, 10412, []]
restartcode
['strlen@plt', 10400, 10412, 10412, ['']]
code
funchead startaddr: 00000000000028b0,funcname: close@plt
funcline addr: 10416
funcline addr: 10420
funcline addr: 10424
funcline addr: 10428
['close@plt', 10416, 10416, 10428, []]
restartcode
['close@plt', 10416, 10428, 10428, ['']]
code
funchead startaddr: 00000000000028c0,funcname: dlopen@plt
funcline addr: 10432
funcline addr: 10436
funcline addr: 10440
funcline addr: 10444
['dlopen@plt', 10432, 10432, 10444, []]
restartcode
['dlopen@plt', 10432, 10444, 10444, ['']]
code
funchead startaddr: 00000000000028d0,funcname: rename@plt
funcline addr: 10448
funcline addr: 10452
funcline addr: 10456
funcline addr: 10460
['rename@plt', 10448, 10448, 10460, []]
restartcode
['rename@plt', 10448, 10460, 10460, ['']]
code
funchead startaddr: 00000000000028e0,funcname: munmap@plt
funcline addr: 10464
funcline addr: 10468
funcline addr: 10472
funcline addr: 10476
['munmap@plt', 10464, 10464, 10476, []]
restartcode
['munmap@plt', 10464, 10476, 10476, ['']]
code
funchead startaddr: 00000000000028f0,funcname: malloc@plt
funcline addr: 10480
funcline addr: 10484
funcline addr: 10488
funcline addr: 10492
['malloc@plt', 10480, 10480, 10492, []]
restartcode
['malloc@plt', 10480, 10492, 10492, ['']]
code
funchead startaddr: 0000000000002900,funcname: execl@plt
funcline addr: 10496
funcline addr: 10500
funcline addr: 10504
funcline addr: 10508
['execl@plt', 10496, 10496, 10508, []]
restartcode
['execl@plt', 10496, 10508, 10508, ['']]
code
funchead startaddr: 0000000000002910,funcname: memcpy@plt
funcline addr: 10512
funcline addr: 10516
funcline addr: 10520
funcline addr: 10524
['memcpy@plt', 10512, 10512, 10524, []]
restartcode
['memcpy@plt', 10512, 10524, 10524, ['']]
code
funchead startaddr: 0000000000002920,funcname: waitpid@plt
funcline addr: 10528
funcline addr: 10532
funcline addr: 10536
funcline addr: 10540
['waitpid@plt', 10528, 10528, 10540, []]
restartcode
['waitpid@plt', 10528, 10540, 10540, ['']]
code
funchead startaddr: 0000000000002930,funcname: dup2@plt
funcline addr: 10544
funcline addr: 10548
funcline addr: 10552
funcline addr: 10556
['dup2@plt', 10544, 10544, 10556, []]
restartcode
['dup2@plt', 10544, 10556, 10556, ['']]
code
funchead startaddr: 0000000000002940,funcname: memset@plt
funcline addr: 10560
funcline addr: 10564
funcline addr: 10568
funcline addr: 10572
['memset@plt', 10560, 10560, 10572, []]
restartcode
['memset@plt', 10560, 10572, 10572, ['']]
code
funchead startaddr: 0000000000002950,funcname: fopen@plt
funcline addr: 10576
funcline addr: 10580
funcline addr: 10584
funcline addr: 10588
['fopen@plt', 10576, 10576, 10588, []]
restartcode
['fopen@plt', 10576, 10588, 10588, ['']]
code
funchead startaddr: 0000000000002960,funcname: sigsetjmp@plt
funcline addr: 10592
funcline addr: 10596
funcline addr: 10600
funcline addr: 10604
['sigsetjmp@plt', 10592, 10592, 10604, []]
restartcode
['sigsetjmp@plt', 10592, 10604, 10604, ['']]
code
funchead startaddr: 0000000000002970,funcname: pclose@plt
funcline addr: 10608
funcline addr: 10612
funcline addr: 10616
funcline addr: 10620
['pclose@plt', 10608, 10608, 10620, []]
restartcode
['pclose@plt', 10608, 10620, 10620, ['']]
code
funchead startaddr: 0000000000002980,funcname: strtol@plt
funcline addr: 10624
funcline addr: 10628
funcline addr: 10632
funcline addr: 10636
['strtol@plt', 10624, 10624, 10636, []]
restartcode
['strtol@plt', 10624, 10636, 10636, ['']]
code
funchead startaddr: 0000000000002990,funcname: fcntl@plt
funcline addr: 10640
funcline addr: 10644
funcline addr: 10648
funcline addr: 10652
['fcntl@plt', 10640, 10640, 10652, []]
restartcode
['fcntl@plt', 10640, 10652, 10652, ['']]
code
funchead startaddr: 00000000000029a0,funcname: free@plt
funcline addr: 10656
funcline addr: 10660
funcline addr: 10664
funcline addr: 10668
['free@plt', 10656, 10656, 10668, []]
restartcode
['free@plt', 10656, 10668, 10668, ['']]
code
funchead startaddr: 00000000000029b0,funcname: pthread_self@plt
funcline addr: 10672
funcline addr: 10676
funcline addr: 10680
funcline addr: 10684
['pthread_self@plt', 10672, 10672, 10684, []]
restartcode
['pthread_self@plt', 10672, 10684, 10684, ['']]
code
funchead startaddr: 00000000000029c0,funcname: sigfillset@plt
funcline addr: 10688
funcline addr: 10692
funcline addr: 10696
funcline addr: 10700
['sigfillset@plt', 10688, 10688, 10700, []]
restartcode
['sigfillset@plt', 10688, 10700, 10700, ['']]
code
funchead startaddr: 00000000000029d0,funcname: pthread_mutex_unlock@plt
funcline addr: 10704
funcline addr: 10708
funcline addr: 10712
funcline addr: 10716
['pthread_mutex_unlock@plt', 10704, 10704, 10716, []]
restartcode
['pthread_mutex_unlock@plt', 10704, 10716, 10716, ['']]
code
funchead startaddr: 00000000000029e0,funcname: clock_gettime@plt
funcline addr: 10720
funcline addr: 10724
funcline addr: 10728
funcline addr: 10732
['clock_gettime@plt', 10720, 10720, 10732, []]
restartcode
['clock_gettime@plt', 10720, 10732, 10732, ['']]
code
funchead startaddr: 00000000000029f0,funcname: __cxa_atexit@plt
funcline addr: 10736
funcline addr: 10740
funcline addr: 10744
funcline addr: 10748
['__cxa_atexit@plt', 10736, 10736, 10748, []]
restartcode
['__cxa_atexit@plt', 10736, 10748, 10748, ['']]
code
funchead startaddr: 0000000000002a00,funcname: isspace@plt
funcline addr: 10752
funcline addr: 10756
funcline addr: 10760
funcline addr: 10764
['isspace@plt', 10752, 10752, 10764, []]
restartcode
['isspace@plt', 10752, 10764, 10764, ['']]
code
['isspace@plt', 10752, 10764, 10764, ['Disassembly of section .text:']]
code
['isspace@plt', 10752, 10764, 10764, ['']]
code
funchead startaddr: 0000000000002a10,funcname: __on_dlclose
funcline addr: 10768
funcline addr: 10772
funcline addr: 10776
['__on_dlclose', 10768, 10768, 10776, []]
restartcode
['__on_dlclose', 10768, 10776, 10776, ['']]
code
funchead startaddr: 0000000000002a1c,funcname: __emutls_unregister_key
funcline addr: 10780
['__emutls_unregister_key', 10780, 10780, 10780, []]
restartcode
['__emutls_unregister_key', 10780, 10780, 10780, ['']]
code
funchead startaddr: 0000000000002a20,funcname: __on_dlclose_late
funcline addr: 10784
['__on_dlclose_late', 10784, 10784, 10784, []]
restartcode
['__on_dlclose_late', 10784, 10784, 10784, ['']]
code
funchead startaddr: 0000000000002a24,funcname: __atexit_handler_wrapper
funcline addr: 10788
funcline addr: 10792
funcline addr: 10796
['__atexit_handler_wrapper', 10788, 10788, 10796, []]
restartcode
['__atexit_handler_wrapper', 10788, 10796, 10796, ['']]
code
funchead startaddr: 0000000000002a30,funcname: atexit
funcline addr: 10800
funcline addr: 10804
funcline addr: 10808
funcline addr: 10812
funcline addr: 10816
funcline addr: 10820
funcline addr: 10824
['atexit', 10800, 10800, 10824, []]
restartcode
['atexit', 10800, 10824, 10824, ['']]
code
funchead startaddr: 0000000000002a4c,funcname: xc_common_open_prepared_fd
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['']]
code
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['static int    xc_common_crash_prepared_fd = -1;']]
code
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['static int    xc_common_trace_prepared_fd = -1;']]
code
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['']]
code
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['static void xc_common_open_prepared_fd(int is_crash)']]
code
['xc_common_open_prepared_fd', 10828, 10828, 10828, ['{']]
code
funcline addr: 10828
funcline addr: 10832
funcline addr: 10836
funcline addr: 10840
funcline addr: 10844
['xc_common_open_prepared_fd', 10828, 10828, 10844, ['{']]
restartcode
['xc_common_open_prepared_fd', 10828, 10844, 10844, ['    int fd = (is_crash ? xc_common_crash_prepared_fd : xc_common_trace_prepared_fd);']]
code
funcline addr: 10848
['xc_common_open_prepared_fd', 10828, 10844, 10848, ['    int fd = (is_crash ? xc_common_crash_prepared_fd : xc_common_trace_prepared_fd);']]
restartcode
['xc_common_open_prepared_fd', 10828, 10848, 10848, ['    if(fd >= 0) return;']]
code
funcline addr: 10852
funcline addr: 10856
funcline addr: 10860
funcline addr: 10864
funcline addr: 10868
funcline addr: 10872
['xc_common_open_prepared_fd', 10828, 10848, 10872, ['    if(fd >= 0) return;']]
restartcode
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['__BIONIC_FORTIFY_INLINE']]
code
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['int open(const char* const __pass_object_size pathname, int flags)']]
code
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['        __overloadable']]
code
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['        __clang_error_if(__open_modes_useful(flags), "\'open\' " __open_too_few_args_error) {']]
code
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['#if __ANDROID_API__ >= __ANDROID_API_J_MR1__']]
code
['xc_common_open_prepared_fd', 10828, 10872, 10872, ['    return __open_2(pathname, flags);']]
code
funcline addr: 10876
funcline addr: 10880
funcline addr: 10884
['xc_common_open_prepared_fd', 10828, 10872, 10884, ['    return __open_2(pathname, flags);']]
restartcode
['xc_common_open_prepared_fd', 10828, 10884, 10884, ['    ']]
code
['xc_common_open_prepared_fd', 10828, 10884, 10884, ['    fd = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
code
funcline addr: 10888
funcline addr: 10892
funcline addr: 10896
funcline addr: 10900
funcline addr: 10904
funcline addr: 10908
funcline addr: 10912
funcline addr: 10916
funcline addr: 10920
funcline addr: 10924
funcline addr: 10928
funcline addr: 10932
['xc_common_open_prepared_fd', 10828, 10884, 10932, ['    fd = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
restartcode
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['    ']]
code
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['    if(is_crash)']]
code
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['        xc_common_crash_prepared_fd = fd;']]
code
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['    else']]
code
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['        xc_common_trace_prepared_fd = fd;']]
code
['xc_common_open_prepared_fd', 10828, 10932, 10932, ['}']]
code
funcline addr: 10936
funcline addr: 10940
['xc_common_open_prepared_fd', 10828, 10932, 10940, ['}']]
restartcode
['xc_common_open_prepared_fd', 10828, 10940, 10940, ['']]
code
funchead startaddr: 0000000000002ac0,funcname: xc_common_open_log
['xc_common_open_log', 10944, 10944, 10944, ['    return r;']]
code
['xc_common_open_log', 10944, 10944, 10944, ['}']]
code
['xc_common_open_log', 10944, 10944, 10944, ['']]
code
['xc_common_open_log', 10944, 10944, 10944, ['static int xc_common_open_log(int is_crash, uint64_t timestamp,']]
code
['xc_common_open_log', 10944, 10944, 10944, ['                              char *pathname, size_t pathname_len, int *from_placeholder)']]
code
['xc_common_open_log', 10944, 10944, 10944, ['{']]
code
funcline addr: 10944
funcline addr: 10948
funcline addr: 10952
funcline addr: 10956
funcline addr: 10960
funcline addr: 10964
funcline addr: 10968
['xc_common_open_log', 10944, 10944, 10968, ['{']]
restartcode
['xc_common_open_log', 10944, 10968, 10968, ['    char               placeholder_pathname[1024];']]
code
['xc_common_open_log', 10944, 10968, 10968, ['    long               n, i;']]
code
['xc_common_open_log', 10944, 10968, 10968, ['    xcc_util_dirent_t *ent;']]
code
['xc_common_open_log', 10944, 10968, 10968, ['']]
code
['xc_common_open_log', 10944, 10968, 10968, ['    xcc_fmt_snprintf(pathname, pathname_len, "%s/"XC_COMMON_LOG_PREFIX"_%020"PRIu64"_%s__%s%s",']]
code
['xc_common_open_log', 10944, 10968, 10968, ['                     xc_common_log_dir, timestamp, xc_common_app_version, xc_common_process_name,']]
code
funcline addr: 10972
funcline addr: 10976
funcline addr: 10980
funcline addr: 10984
funcline addr: 10988
funcline addr: 10992
funcline addr: 10996
['xc_common_open_log', 10944, 10968, 10996, ['                     xc_common_log_dir, timestamp, xc_common_app_version, xc_common_process_name,']]
restartcode
['xc_common_open_log', 10944, 10996, 10996, ['                     is_crash ? XC_COMMON_LOG_SUFFIX_CRASH : XC_COMMON_LOG_SUFFIX_TRACE);']]
code
funcline addr: 11000
funcline addr: 11004
funcline addr: 11008
funcline addr: 11012
funcline addr: 11016
funcline addr: 11020
['xc_common_open_log', 10944, 10996, 11020, ['                     is_crash ? XC_COMMON_LOG_SUFFIX_CRASH : XC_COMMON_LOG_SUFFIX_TRACE);']]
restartcode
['xc_common_open_log', 10944, 11020, 11020, ['    xcc_fmt_snprintf(pathname, pathname_len, "%s/"XC_COMMON_LOG_PREFIX"_%020"PRIu64"_%s__%s%s",']]
code
funcline addr: 11024
funcline addr: 11028
funcline addr: 11032
['xc_common_open_log', 10944, 11020, 11032, ['    xcc_fmt_snprintf(pathname, pathname_len, "%s/"XC_COMMON_LOG_PREFIX"_%020"PRIu64"_%s__%s%s",']]
restartcode
['xc_common_open_log', 10944, 11032, 11032, ['                     is_crash ? XC_COMMON_LOG_SUFFIX_CRASH : XC_COMMON_LOG_SUFFIX_TRACE);']]
code
funcline addr: 11036
['xc_common_open_log', 10944, 11032, 11036, ['                     is_crash ? XC_COMMON_LOG_SUFFIX_CRASH : XC_COMMON_LOG_SUFFIX_TRACE);']]
restartcode
['xc_common_open_log', 10944, 11036, 11036, ['    xcc_fmt_snprintf(pathname, pathname_len, "%s/"XC_COMMON_LOG_PREFIX"_%020"PRIu64"_%s__%s%s",']]
code
funcline addr: 11040
funcline addr: 11044
funcline addr: 11048
funcline addr: 11052
funcline addr: 11056
funcline addr: 11060
funcline addr: 11064
funcline addr: 11068
['xc_common_open_log', 10944, 11036, 11068, ['    xcc_fmt_snprintf(pathname, pathname_len, "%s/"XC_COMMON_LOG_PREFIX"_%020"PRIu64"_%s__%s%s",']]
restartcode
['xc_common_open_log', 10944, 11068, 11068, ['']]
code
['xc_common_open_log', 10944, 11068, 11068, ['    //open dir']]
code
['xc_common_open_log', 10944, 11068, 11068, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_common_log_dir, XC_COMMON_OPEN_DIR_FLAGS))) < 0)']]
code
funcline addr: 11072
funcline addr: 11076
funcline addr: 11080
funcline addr: 11084
funcline addr: 11088
funcline addr: 11092
funcline addr: 11096
['xc_common_open_log', 10944, 11068, 11096, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_common_log_dir, XC_COMMON_OPEN_DIR_FLAGS))) < 0)']]
restartcode
['xc_common_open_log', 10944, 11096, 11096, ['    {']]
code
['xc_common_open_log', 10944, 11096, 11096, ['        //try again with the prepared fd']]
code
['xc_common_open_log', 10944, 11096, 11096, ['        if(0 != xc_common_close_prepared_fd(is_crash)) goto create_new_file;']]
code
funcline addr: 11100
funcline addr: 11104
funcline addr: 11108
funcline addr: 11112
funcline addr: 11116
['xc_common_open_log', 10944, 11096, 11116, ['        if(0 != xc_common_close_prepared_fd(is_crash)) goto create_new_file;']]
restartcode
['xc_common_open_log', 10944, 11116, 11116, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_common_log_dir, XC_COMMON_OPEN_DIR_FLAGS))) < 0) goto create_new_file;']]
code
funcline addr: 11120
funcline addr: 11124
funcline addr: 11128
funcline addr: 11132
funcline addr: 11136
funcline addr: 11140
funcline addr: 11144
funcline addr: 11148
funcline addr: 11152
funcline addr: 11156
funcline addr: 11160
funcline addr: 11164
funcline addr: 11168
['xc_common_open_log', 10944, 11116, 11168, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_common_log_dir, XC_COMMON_OPEN_DIR_FLAGS))) < 0) goto create_new_file;']]
restartcode
['xc_common_open_log', 10944, 11168, 11168, ['    }']]
code
['xc_common_open_log', 10944, 11168, 11168, ['']]
code
['xc_common_open_log', 10944, 11168, 11168, ['    //try to rename a placeholder file and open it']]
code
['xc_common_open_log', 10944, 11168, 11168, ['    while((n = syscall(XCC_UTIL_SYSCALL_GETDENTS, fd, buf, sizeof(buf))) > 0)']]
code
funcline addr: 11172
funcline addr: 11176
funcline addr: 11180
funcline addr: 11184
funcline addr: 11188
funcline addr: 11192
funcline addr: 11196
funcline addr: 11200
funcline addr: 11204
['xc_common_open_log', 10944, 11168, 11204, ['    while((n = syscall(XCC_UTIL_SYSCALL_GETDENTS, fd, buf, sizeof(buf))) > 0)']]
restartcode
['xc_common_open_log', 10944, 11204, 11204, ['    {']]
code
['xc_common_open_log', 10944, 11204, 11204, ['        for(i = 0; i < n; i += ent->d_reclen)']]
code
funcline addr: 11208
funcline addr: 11212
['xc_common_open_log', 10944, 11204, 11212, ['        for(i = 0; i < n; i += ent->d_reclen)']]
restartcode
['xc_common_open_log', 10944, 11212, 11212, ['        {']]
code
['xc_common_open_log', 10944, 11212, 11212, ['            ent = (xcc_util_dirent_t *)(buf + i);']]
code
funcline addr: 11216
['xc_common_open_log', 10944, 11212, 11216, ['            ent = (xcc_util_dirent_t *)(buf + i);']]
restartcode
['xc_common_open_log', 10944, 11216, 11216, ['            ']]
code
['xc_common_open_log', 10944, 11216, 11216, ['            // placeholder_01234567890123456789.clean.xcrash']]
code
['xc_common_open_log', 10944, 11216, 11216, ['            // file name length: 45']]
code
['xc_common_open_log', 10944, 11216, 11216, ['            if(45 == strlen(ent->d_name) &&']]
code
funcline addr: 11220
['xc_common_open_log', 10944, 11216, 11220, ['            if(45 == strlen(ent->d_name) &&']]
restartcode
['xc_common_open_log', 10944, 11220, 11220, ['#if __ANDROID_API__ >= __ANDROID_API_J_MR1__']]
code
['xc_common_open_log', 10944, 11220, 11220, ['    if (!__bos_trivially_gt(bos, __builtin_strlen(s))) {']]
code
['xc_common_open_log', 10944, 11220, 11220, ['        return __strlen_chk(s, bos);']]
code
['xc_common_open_log', 10944, 11220, 11220, ['    }']]
code
['xc_common_open_log', 10944, 11220, 11220, ['#endif /* __ANDROID_API__ >= __ANDROID_API_J_MR1__ */']]
code
['xc_common_open_log', 10944, 11220, 11220, ['    return __builtin_strlen(s);']]
code
funcline addr: 11224
funcline addr: 11228
funcline addr: 11232
funcline addr: 11236
['xc_common_open_log', 10944, 11220, 11236, ['    return __builtin_strlen(s);']]
restartcode
['xc_common_open_log', 10944, 11236, 11236, ['               0 == memcmp(ent->d_name, XC_COMMON_PLACEHOLDER_PREFIX"_", 12) &&']]
code
funcline addr: 11240
funcline addr: 11244
funcline addr: 11248
funcline addr: 11252
funcline addr: 11256
['xc_common_open_log', 10944, 11236, 11256, ['               0 == memcmp(ent->d_name, XC_COMMON_PLACEHOLDER_PREFIX"_", 12) &&']]
restartcode
['xc_common_open_log', 10944, 11256, 11256, ['               0 == memcmp(ent->d_name + 32, XC_COMMON_PLACEHOLDER_SUFFIX, 13))']]
code
funcline addr: 11260
funcline addr: 11264
funcline addr: 11268
funcline addr: 11272
['xc_common_open_log', 10944, 11256, 11272, ['               0 == memcmp(ent->d_name + 32, XC_COMMON_PLACEHOLDER_SUFFIX, 13))']]
restartcode
['xc_common_open_log', 10944, 11272, 11272, ['            if(45 == strlen(ent->d_name) &&']]
code
funcline addr: 11276
['xc_common_open_log', 10944, 11272, 11276, ['            if(45 == strlen(ent->d_name) &&']]
restartcode
['xc_common_open_log', 10944, 11276, 11276, ['            {']]
code
['xc_common_open_log', 10944, 11276, 11276, ['                xcc_fmt_snprintf(placeholder_pathname, sizeof(placeholder_pathname), "%s/%s", xc_common_log_dir, ent->d_name);']]
code
funcline addr: 11280
funcline addr: 11284
funcline addr: 11288
funcline addr: 11292
funcline addr: 11296
funcline addr: 11300
funcline addr: 11304
funcline addr: 11308
['xc_common_open_log', 10944, 11276, 11308, ['                xcc_fmt_snprintf(placeholder_pathname, sizeof(placeholder_pathname), "%s/%s", xc_common_log_dir, ent->d_name);']]
restartcode
['xc_common_open_log', 10944, 11308, 11308, ['                if(0 == rename(placeholder_pathname, pathname))']]
code
funcline addr: 11312
funcline addr: 11316
funcline addr: 11320
funcline addr: 11324
['xc_common_open_log', 10944, 11308, 11324, ['                if(0 == rename(placeholder_pathname, pathname))']]
restartcode
['xc_common_open_log', 10944, 11324, 11324, ['        for(i = 0; i < n; i += ent->d_reclen)']]
code
funcline addr: 11328
funcline addr: 11332
funcline addr: 11336
funcline addr: 11340
funcline addr: 11344
['xc_common_open_log', 10944, 11324, 11344, ['        for(i = 0; i < n; i += ent->d_reclen)']]
restartcode
['xc_common_open_log', 10944, 11344, 11344, ['                {']]
code
['xc_common_open_log', 10944, 11344, 11344, ['                    close(fd);']]
code
['xc_common_open_log', 10944, 11344, 11344, ['                    if(NULL != from_placeholder) *from_placeholder = 1;']]
code
funcline addr: 11348
funcline addr: 11352
funcline addr: 11356
funcline addr: 11360
funcline addr: 11364
funcline addr: 11368
funcline addr: 11372
funcline addr: 11376
funcline addr: 11380
['xc_common_open_log', 10944, 11344, 11380, ['                    if(NULL != from_placeholder) *from_placeholder = 1;']]
restartcode
['xc_common_open_log', 10944, 11380, 11380, ['                    return XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_FILE_FLAGS));']]
code
funcline addr: 11384
funcline addr: 11388
funcline addr: 11392
funcline addr: 11396
funcline addr: 11400
funcline addr: 11404
funcline addr: 11408
funcline addr: 11412
funcline addr: 11416
['xc_common_open_log', 10944, 11380, 11416, ['                    return XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_FILE_FLAGS));']]
restartcode
['xc_common_open_log', 10944, 11416, 11416, ['                }']]
code
['xc_common_open_log', 10944, 11416, 11416, ['            }']]
code
['xc_common_open_log', 10944, 11416, 11416, ['        }']]
code
['xc_common_open_log', 10944, 11416, 11416, ['    }']]
code
['xc_common_open_log', 10944, 11416, 11416, ['    close(fd);']]
code
['xc_common_open_log', 10944, 11416, 11416, ['    xc_common_open_prepared_fd(is_crash);']]
code
funcline addr: 11420
funcline addr: 11424
funcline addr: 11428
['xc_common_open_log', 10944, 11416, 11428, ['    xc_common_open_prepared_fd(is_crash);']]
restartcode
['xc_common_open_log', 10944, 11428, 11428, ['    ']]
code
['xc_common_open_log', 10944, 11428, 11428, [' create_new_file:']]
code
['xc_common_open_log', 10944, 11428, 11428, ['    if(NULL != from_placeholder) *from_placeholder = 0;']]
code
funcline addr: 11432
funcline addr: 11436
funcline addr: 11440
['xc_common_open_log', 10944, 11428, 11440, ['    if(NULL != from_placeholder) *from_placeholder = 0;']]
restartcode
['xc_common_open_log', 10944, 11440, 11440, ['    ']]
code
['xc_common_open_log', 10944, 11440, 11440, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_NEW_FILE_FLAGS, XC_COMMON_OPEN_NEW_FILE_MODE))) >= 0) return fd;']]
code
funcline addr: 11444
funcline addr: 11448
funcline addr: 11452
funcline addr: 11456
funcline addr: 11460
funcline addr: 11464
['xc_common_open_log', 10944, 11440, 11464, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_NEW_FILE_FLAGS, XC_COMMON_OPEN_NEW_FILE_MODE))) >= 0) return fd;']]
restartcode
['xc_common_open_log', 10944, 11464, 11464, ['']]
code
['xc_common_open_log', 10944, 11464, 11464, ['    //try again with the prepared fd']]
code
['xc_common_open_log', 10944, 11464, 11464, ['    if(0 != xc_common_close_prepared_fd(is_crash)) return -1;']]
code
funcline addr: 11468
funcline addr: 11472
funcline addr: 11476
funcline addr: 11480
funcline addr: 11484
['xc_common_open_log', 10944, 11464, 11484, ['    if(0 != xc_common_close_prepared_fd(is_crash)) return -1;']]
restartcode
['xc_common_open_log', 10944, 11484, 11484, ['    return XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_NEW_FILE_FLAGS, XC_COMMON_OPEN_NEW_FILE_MODE));']]
code
funcline addr: 11488
funcline addr: 11492
funcline addr: 11496
funcline addr: 11500
funcline addr: 11504
funcline addr: 11508
funcline addr: 11512
funcline addr: 11516
funcline addr: 11520
['xc_common_open_log', 10944, 11484, 11520, ['    return XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, XC_COMMON_OPEN_NEW_FILE_FLAGS, XC_COMMON_OPEN_NEW_FILE_MODE));']]
restartcode
['xc_common_open_log', 10944, 11520, 11520, ['}']]
code
funcline addr: 11524
funcline addr: 11528
funcline addr: 11532
funcline addr: 11536
['xc_common_open_log', 10944, 11520, 11536, ['}']]
restartcode
['xc_common_open_log', 10944, 11536, 11536, ['']]
code
funchead startaddr: 0000000000002d14,funcname: xc_common_close_prepared_fd
['xc_common_close_prepared_fd', 11540, 11540, 11540, ['{']]
code
funcline addr: 11540
funcline addr: 11544
funcline addr: 11548
funcline addr: 11552
funcline addr: 11556
['xc_common_close_prepared_fd', 11540, 11540, 11556, ['{']]
restartcode
['xc_common_close_prepared_fd', 11540, 11556, 11556, ['    int fd = (is_crash ? xc_common_crash_prepared_fd : xc_common_trace_prepared_fd);']]
code
funcline addr: 11560
['xc_common_close_prepared_fd', 11540, 11556, 11560, ['    int fd = (is_crash ? xc_common_crash_prepared_fd : xc_common_trace_prepared_fd);']]
restartcode
['xc_common_close_prepared_fd', 11540, 11560, 11560, ['    if(fd < 0) return XCC_ERRNO_FD;']]
code
funcline addr: 11564
['xc_common_close_prepared_fd', 11540, 11560, 11564, ['    if(fd < 0) return XCC_ERRNO_FD;']]
restartcode
['xc_common_close_prepared_fd', 11540, 11564, 11564, ['    close(fd);']]
code
funcline addr: 11568
funcline addr: 11572
funcline addr: 11576
funcline addr: 11580
funcline addr: 11584
funcline addr: 11588
funcline addr: 11592
funcline addr: 11596
funcline addr: 11600
funcline addr: 11604
funcline addr: 11608
funcline addr: 11612
['xc_common_close_prepared_fd', 11540, 11564, 11612, ['    close(fd);']]
restartcode
['xc_common_close_prepared_fd', 11540, 11612, 11612, ['}']]
code
funcline addr: 11616
funcline addr: 11620
funcline addr: 11624
['xc_common_close_prepared_fd', 11540, 11612, 11624, ['}']]
restartcode
['xc_common_close_prepared_fd', 11540, 11624, 11624, ['']]
code
funchead startaddr: 0000000000002d6c,funcname: xc_crash_callback_thread
['xc_crash_callback_thread', 11628, 11628, 11628, ['    if(NULL != libcpp) xc_dl_destroy(&libcpp);']]
code
['xc_crash_callback_thread', 11628, 11628, 11628, ['    if(NULL != libart) xc_dl_destroy(&libart);']]
code
['xc_crash_callback_thread', 11628, 11628, 11628, ['}']]
code
['xc_crash_callback_thread', 11628, 11628, 11628, ['']]
code
['xc_crash_callback_thread', 11628, 11628, 11628, ['static void *xc_crash_callback_thread(void *arg)']]
code
['xc_crash_callback_thread', 11628, 11628, 11628, ['{']]
code
funcline addr: 11628
funcline addr: 11632
funcline addr: 11636
funcline addr: 11640
funcline addr: 11644
funcline addr: 11648
funcline addr: 11652
funcline addr: 11656
['xc_crash_callback_thread', 11628, 11628, 11656, ['{']]
restartcode
['xc_crash_callback_thread', 11628, 11656, 11656, ['    jstring   j_thread_name = NULL;']]
code
['xc_crash_callback_thread', 11628, 11656, 11656, ['    char      c_thread_name[16] = "\\0";']]
code
['xc_crash_callback_thread', 11628, 11656, 11656, ['    ']]
code
['xc_crash_callback_thread', 11628, 11656, 11656, ['    (void)arg;']]
code
['xc_crash_callback_thread', 11628, 11656, 11656, ['    ']]
code
['xc_crash_callback_thread', 11628, 11656, 11656, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 11660
funcline addr: 11664
['xc_crash_callback_thread', 11628, 11656, 11664, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_crash_callback_thread', 11628, 11664, 11664, ['        .version = XC_JNI_VERSION,']]
code
['xc_crash_callback_thread', 11628, 11664, 11664, ['        .name    = "xcrash_crash_cb",']]
code
['xc_crash_callback_thread', 11628, 11664, 11664, ['        .group   = NULL']]
code
['xc_crash_callback_thread', 11628, 11664, 11664, ['    };']]
code
['xc_crash_callback_thread', 11628, 11664, 11664, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
code
funcline addr: 11668
['xc_crash_callback_thread', 11628, 11664, 11668, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
restartcode
['xc_crash_callback_thread', 11628, 11668, 11668, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 11672
funcline addr: 11676
funcline addr: 11680
['xc_crash_callback_thread', 11628, 11668, 11680, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_crash_callback_thread', 11628, 11680, 11680, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
code
funcline addr: 11684
['xc_crash_callback_thread', 11628, 11680, 11684, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
restartcode
['xc_crash_callback_thread', 11628, 11684, 11684, ['    JNIEnv   *env = NULL;']]
code
funcline addr: 11688
['xc_crash_callback_thread', 11628, 11684, 11688, ['    JNIEnv   *env = NULL;']]
restartcode
['xc_crash_callback_thread', 11628, 11688, 11688, ['    uint64_t  data = 0;']]
code
funcline addr: 11692
['xc_crash_callback_thread', 11628, 11688, 11692, ['    uint64_t  data = 0;']]
restartcode
['xc_crash_callback_thread', 11628, 11692, 11692, ['    char      c_thread_name[16] = "\\0";']]
code
funcline addr: 11696
['xc_crash_callback_thread', 11628, 11692, 11696, ['    char      c_thread_name[16] = "\\0";']]
restartcode
['xc_crash_callback_thread', 11628, 11696, 11696, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 11700
funcline addr: 11704
['xc_crash_callback_thread', 11628, 11696, 11704, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_crash_callback_thread', 11628, 11704, 11704, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
code
funcline addr: 11708
funcline addr: 11712
funcline addr: 11716
funcline addr: 11720
funcline addr: 11724
funcline addr: 11728
funcline addr: 11732
funcline addr: 11736
funcline addr: 11740
['xc_crash_callback_thread', 11628, 11704, 11740, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) return NULL;']]
restartcode
['xc_crash_callback_thread', 11628, 11740, 11740, ['']]
code
['xc_crash_callback_thread', 11628, 11740, 11740, ['    //block until native crashed']]
code
['xc_crash_callback_thread', 11628, 11740, 11740, ['    if(sizeof(data) != XCC_UTIL_TEMP_FAILURE_RETRY(read(xc_crash_cb_notifier, &data, sizeof(data)))) goto end;']]
code
funcline addr: 11744
funcline addr: 11748
['xc_crash_callback_thread', 11628, 11740, 11748, ['    if(sizeof(data) != XCC_UTIL_TEMP_FAILURE_RETRY(read(xc_crash_cb_notifier, &data, sizeof(data)))) goto end;']]
restartcode
['xc_crash_callback_thread', 11628, 11748, 11748, ['']]
code
['xc_crash_callback_thread', 11628, 11748, 11748, ['    if (!__bos_trivially_ge_no_overflow(bos, count)) {']]
code
['xc_crash_callback_thread', 11628, 11748, 11748, ['        return __read_chk(fd, buf, count, bos);']]
code
['xc_crash_callback_thread', 11628, 11748, 11748, ['    }']]
code
['xc_crash_callback_thread', 11628, 11748, 11748, ['#endif /* __ANDROID_API__ >= __ANDROID_API_L__ */']]
code
['xc_crash_callback_thread', 11628, 11748, 11748, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
code
funcline addr: 11752
funcline addr: 11756
funcline addr: 11760
funcline addr: 11764
funcline addr: 11768
funcline addr: 11772
funcline addr: 11776
funcline addr: 11780
funcline addr: 11784
funcline addr: 11788
['xc_crash_callback_thread', 11628, 11748, 11788, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
restartcode
['xc_crash_callback_thread', 11628, 11788, 11788, ['']]
code
['xc_crash_callback_thread', 11628, 11788, 11788, ['    //prepare callback parameters']]
code
['xc_crash_callback_thread', 11628, 11788, 11788, ['    if(NULL == (j_pathname = (*env)->NewStringUTF(env, xc_crash_log_pathname))) goto end;']]
code
funcline addr: 11792
funcline addr: 11796
funcline addr: 11800
funcline addr: 11804
funcline addr: 11808
['xc_crash_callback_thread', 11628, 11788, 11808, ['    if(NULL == (j_pathname = (*env)->NewStringUTF(env, xc_crash_log_pathname))) goto end;']]
restartcode
['xc_crash_callback_thread', 11628, 11808, 11808, ["    if('\\0' != xc_crash_emergency[0])"]]
code
funcline addr: 11812
funcline addr: 11816
funcline addr: 11820
funcline addr: 11824
funcline addr: 11828
['xc_crash_callback_thread', 11628, 11808, 11828, ["    if('\\0' != xc_crash_emergency[0])"]]
restartcode
['xc_crash_callback_thread', 11628, 11828, 11828, ['    {']]
code
['xc_crash_callback_thread', 11628, 11828, 11828, ['        if(NULL == (j_emergency = (*env)->NewStringUTF(env, xc_crash_emergency))) goto end;']]
code
funcline addr: 11832
funcline addr: 11836
funcline addr: 11840
funcline addr: 11844
funcline addr: 11848
funcline addr: 11852
['xc_crash_callback_thread', 11628, 11828, 11852, ['        if(NULL == (j_emergency = (*env)->NewStringUTF(env, xc_crash_emergency))) goto end;']]
restartcode
['xc_crash_callback_thread', 11628, 11852, 11852, ['    }']]
code
['xc_crash_callback_thread', 11628, 11852, 11852, ['    j_dump_java_stacktrace = (xc_crash_dump_java_stacktrace ? JNI_TRUE : JNI_FALSE);']]
code
funcline addr: 11856
funcline addr: 11860
['xc_crash_callback_thread', 11628, 11852, 11860, ['    j_dump_java_stacktrace = (xc_crash_dump_java_stacktrace ? JNI_TRUE : JNI_FALSE);']]
restartcode
['xc_crash_callback_thread', 11628, 11860, 11860, ['    if(j_dump_java_stacktrace)']]
code
funcline addr: 11864
funcline addr: 11868
['xc_crash_callback_thread', 11628, 11860, 11868, ['    if(j_dump_java_stacktrace)']]
restartcode
['xc_crash_callback_thread', 11628, 11868, 11868, ['    {']]
code
['xc_crash_callback_thread', 11628, 11868, 11868, ['        j_is_main_thread = (xc_common_process_id == xc_crash_tid ? JNI_TRUE : JNI_FALSE);']]
code
funcline addr: 11872
funcline addr: 11876
funcline addr: 11880
funcline addr: 11884
['xc_crash_callback_thread', 11628, 11868, 11884, ['        j_is_main_thread = (xc_common_process_id == xc_crash_tid ? JNI_TRUE : JNI_FALSE);']]
restartcode
['xc_crash_callback_thread', 11628, 11884, 11884, ['        if(!j_is_main_thread)']]
code
funcline addr: 11888
funcline addr: 11892
funcline addr: 11896
funcline addr: 11900
funcline addr: 11904
funcline addr: 11908
funcline addr: 11912
funcline addr: 11916
['xc_crash_callback_thread', 11628, 11884, 11916, ['        if(!j_is_main_thread)']]
restartcode
['xc_crash_callback_thread', 11628, 11916, 11916, ['        {']]
code
['xc_crash_callback_thread', 11628, 11916, 11916, ['            xcc_util_get_thread_name(xc_crash_tid, c_thread_name, sizeof(c_thread_name));']]
code
funcline addr: 11920
funcline addr: 11924
funcline addr: 11928
['xc_crash_callback_thread', 11628, 11916, 11928, ['            xcc_util_get_thread_name(xc_crash_tid, c_thread_name, sizeof(c_thread_name));']]
restartcode
['xc_crash_callback_thread', 11628, 11928, 11928, ['            if(NULL == (j_thread_name = (*env)->NewStringUTF(env, c_thread_name))) goto end;']]
code
funcline addr: 11932
funcline addr: 11936
funcline addr: 11940
funcline addr: 11944
funcline addr: 11948
funcline addr: 11952
['xc_crash_callback_thread', 11628, 11928, 11952, ['            if(NULL == (j_thread_name = (*env)->NewStringUTF(env, c_thread_name))) goto end;']]
restartcode
['xc_crash_callback_thread', 11628, 11952, 11952, ['        }']]
code
['xc_crash_callback_thread', 11628, 11952, 11952, ['    }']]
code
['xc_crash_callback_thread', 11628, 11952, 11952, ['']]
code
['xc_crash_callback_thread', 11628, 11952, 11952, ['    //do callback']]
code
['xc_crash_callback_thread', 11628, 11952, 11952, ['    (*env)->CallStaticVoidMethod(env, xc_common_cb_class, xc_crash_cb_method, j_pathname, j_emergency,']]
code
funcline addr: 11956
funcline addr: 11960
funcline addr: 11964
funcline addr: 11968
funcline addr: 11972
funcline addr: 11976
funcline addr: 11980
funcline addr: 11984
['xc_crash_callback_thread', 11628, 11952, 11984, ['    (*env)->CallStaticVoidMethod(env, xc_common_cb_class, xc_crash_cb_method, j_pathname, j_emergency,']]
restartcode
['xc_crash_callback_thread', 11628, 11984, 11984, ['                                 j_dump_java_stacktrace, j_is_main_thread, j_thread_name);']]
code
['xc_crash_callback_thread', 11628, 11984, 11984, ['    XC_JNI_IGNORE_PENDING_EXCEPTION();']]
code
funcline addr: 11988
funcline addr: 11992
funcline addr: 11996
funcline addr: 12000
funcline addr: 12004
funcline addr: 12008
funcline addr: 12012
funcline addr: 12016
['xc_crash_callback_thread', 11628, 11984, 12016, ['    XC_JNI_IGNORE_PENDING_EXCEPTION();']]
restartcode
['xc_crash_callback_thread', 11628, 12016, 12016, ['']]
code
['xc_crash_callback_thread', 11628, 12016, 12016, [' end:']]
code
['xc_crash_callback_thread', 11628, 12016, 12016, ['    (*xc_common_vm)->DetachCurrentThread(xc_common_vm);']]
code
funcline addr: 12020
funcline addr: 12024
funcline addr: 12028
funcline addr: 12032
funcline addr: 12036
funcline addr: 12040
['xc_crash_callback_thread', 11628, 12016, 12040, ['    (*xc_common_vm)->DetachCurrentThread(xc_common_vm);']]
restartcode
['xc_crash_callback_thread', 11628, 12040, 12040, ['    return NULL;']]
code
['xc_crash_callback_thread', 11628, 12040, 12040, ['}']]
code
funcline addr: 12044
funcline addr: 12048
funcline addr: 12052
funcline addr: 12056
funcline addr: 12060
funcline addr: 12064
funcline addr: 12068
funcline addr: 12072
['xc_crash_callback_thread', 11628, 12040, 12072, ['}']]
restartcode
['xc_crash_callback_thread', 11628, 12072, 12072, ['']]
code
funchead startaddr: 0000000000002f2c,funcname: xc_crash_signal_handler
['xc_crash_signal_handler', 12076, 12076, 12076, ['    if(fd >= 0) close(fd);']]
code
['xc_crash_signal_handler', 12076, 12076, 12076, ['    return r;    ']]
code
['xc_crash_signal_handler', 12076, 12076, 12076, ['}']]
code
['xc_crash_signal_handler', 12076, 12076, 12076, ['']]
code
['xc_crash_signal_handler', 12076, 12076, 12076, ['static void xc_crash_signal_handler(int sig, siginfo_t *si, void *uc)']]
code
['xc_crash_signal_handler', 12076, 12076, 12076, ['{']]
code
funcline addr: 12076
funcline addr: 12080
funcline addr: 12084
funcline addr: 12088
funcline addr: 12092
funcline addr: 12096
funcline addr: 12100
funcline addr: 12104
['xc_crash_signal_handler', 12076, 12076, 12104, ['{']]
restartcode
['xc_crash_signal_handler', 12076, 12104, 12104, ['    int             orig_dumpable = 0;']]
code
['xc_crash_signal_handler', 12076, 12104, 12104, ['    int             dump_ok = 0;']]
code
['xc_crash_signal_handler', 12076, 12104, 12104, ['']]
code
['xc_crash_signal_handler', 12076, 12104, 12104, ['    (void)sig;']]
code
['xc_crash_signal_handler', 12076, 12104, 12104, ['']]
code
['xc_crash_signal_handler', 12076, 12104, 12104, ['    pthread_mutex_lock(&xc_crash_mutex);']]
code
funcline addr: 12108
funcline addr: 12112
funcline addr: 12116
funcline addr: 12120
funcline addr: 12124
funcline addr: 12128
funcline addr: 12132
funcline addr: 12136
['xc_crash_signal_handler', 12076, 12104, 12136, ['    pthread_mutex_lock(&xc_crash_mutex);']]
restartcode
['xc_crash_signal_handler', 12076, 12136, 12136, ['']]
code
['xc_crash_signal_handler', 12076, 12136, 12136, ['    //only once']]
code
['xc_crash_signal_handler', 12076, 12136, 12136, ['    if(xc_common_native_crashed) goto exit;']]
code
funcline addr: 12140
funcline addr: 12144
['xc_crash_signal_handler', 12076, 12136, 12144, ['    if(xc_common_native_crashed) goto exit;']]
restartcode
['xc_crash_signal_handler', 12076, 12144, 12144, ['    xc_common_native_crashed = 1;']]
code
['xc_crash_signal_handler', 12076, 12144, 12144, ['']]
code
['xc_crash_signal_handler', 12076, 12144, 12144, ['    //restore the original/default signal handler']]
code
['xc_crash_signal_handler', 12076, 12144, 12144, ['    if(xc_crash_rethrow)']]
code
funcline addr: 12148
['xc_crash_signal_handler', 12076, 12144, 12148, ['    if(xc_crash_rethrow)']]
restartcode
['xc_crash_signal_handler', 12076, 12148, 12148, ['    dup2(xc_common_fd_null, STDERR_FILENO);']]
code
funcline addr: 12152
funcline addr: 12156
funcline addr: 12160
['xc_crash_signal_handler', 12076, 12148, 12160, ['    dup2(xc_common_fd_null, STDERR_FILENO);']]
restartcode
['xc_crash_signal_handler', 12076, 12160, 12160, ['    xc_common_native_crashed = 1;']]
code
funcline addr: 12164
['xc_crash_signal_handler', 12076, 12160, 12164, ['    xc_common_native_crashed = 1;']]
restartcode
['xc_crash_signal_handler', 12076, 12164, 12164, ['    if(xc_crash_rethrow)']]
code
funcline addr: 12168
funcline addr: 12172
funcline addr: 12176
funcline addr: 12180
['xc_crash_signal_handler', 12076, 12164, 12180, ['    if(xc_crash_rethrow)']]
restartcode
['xc_crash_signal_handler', 12076, 12180, 12180, ['']]
code
['xc_crash_signal_handler', 12076, 12180, 12180, ['int xcc_signal_crash_unregister(void)']]
code
['xc_crash_signal_handler', 12076, 12180, 12180, ['{']]
code
['xc_crash_signal_handler', 12076, 12180, 12180, ['    int r = 0;']]
code
['xc_crash_signal_handler', 12076, 12180, 12180, ['    size_t i;']]
code
['xc_crash_signal_handler', 12076, 12180, 12180, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
code
funcline addr: 12184
funcline addr: 12188
['xc_crash_signal_handler', 12076, 12180, 12188, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
restartcode
['xc_crash_signal_handler', 12076, 12188, 12188, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &(xcc_signal_crash_info[i].oldact), NULL))']]
code
funcline addr: 12192
funcline addr: 12196
funcline addr: 12200
funcline addr: 12204
funcline addr: 12208
['xc_crash_signal_handler', 12076, 12188, 12208, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &(xcc_signal_crash_info[i].oldact), NULL))']]
restartcode
['xc_crash_signal_handler', 12076, 12208, 12208, ['            r = XCC_ERRNO_SYS;']]
code
funcline addr: 12212
funcline addr: 12216
funcline addr: 12220
funcline addr: 12224
['xc_crash_signal_handler', 12076, 12208, 12224, ['            r = XCC_ERRNO_SYS;']]
restartcode
['xc_crash_signal_handler', 12076, 12224, 12224, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
code
funcline addr: 12228
funcline addr: 12232
['xc_crash_signal_handler', 12076, 12224, 12232, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
restartcode
['xc_crash_signal_handler', 12076, 12232, 12232, ['    {']]
code
['xc_crash_signal_handler', 12076, 12232, 12232, ['        if(0 != xcc_signal_crash_unregister()) goto exit;']]
code
funcline addr: 12236
funcline addr: 12240
funcline addr: 12244
funcline addr: 12248
['xc_crash_signal_handler', 12076, 12232, 12248, ['        if(0 != xcc_signal_crash_unregister()) goto exit;']]
restartcode
['xc_crash_signal_handler', 12076, 12248, 12248, ['']]
code
['xc_crash_signal_handler', 12076, 12248, 12248, ['void *xcc_libc_support_memset(void *s, int c, size_t n)']]
code
['xc_crash_signal_handler', 12076, 12248, 12248, ['{']]
code
['xc_crash_signal_handler', 12076, 12248, 12248, ['    char *p = (char *)s;']]
code
['xc_crash_signal_handler', 12076, 12248, 12248, ['    ']]
code
['xc_crash_signal_handler', 12076, 12248, 12248, ['    while(n--)']]
code
funcline addr: 12252
funcline addr: 12256
funcline addr: 12260
funcline addr: 12264
funcline addr: 12268
['xc_crash_signal_handler', 12076, 12248, 12268, ['    while(n--)']]
restartcode
['xc_crash_signal_handler', 12076, 12268, 12268, ['']]
code
['xc_crash_signal_handler', 12076, 12268, 12268, ['int xcc_signal_crash_ignore(void)']]
code
['xc_crash_signal_handler', 12076, 12268, 12268, ['{']]
code
['xc_crash_signal_handler', 12076, 12268, 12268, ['    struct sigaction act;']]
code
['xc_crash_signal_handler', 12076, 12268, 12268, ['    xcc_libc_support_memset(&act, 0, sizeof(act));']]
code
['xc_crash_signal_handler', 12076, 12268, 12268, ['    sigemptyset(&act.sa_mask);']]
code
funcline addr: 12272
funcline addr: 12276
funcline addr: 12280
funcline addr: 12284
funcline addr: 12288
funcline addr: 12292
['xc_crash_signal_handler', 12076, 12268, 12292, ['    sigemptyset(&act.sa_mask);']]
restartcode
['xc_crash_signal_handler', 12076, 12292, 12292, ['    act.sa_handler = SIG_DFL;']]
code
funcline addr: 12296
['xc_crash_signal_handler', 12076, 12292, 12296, ['    act.sa_handler = SIG_DFL;']]
restartcode
['xc_crash_signal_handler', 12076, 12296, 12296, ['    act.sa_flags = SA_RESTART;']]
code
funcline addr: 12300
['xc_crash_signal_handler', 12076, 12296, 12300, ['    act.sa_flags = SA_RESTART;']]
restartcode
['xc_crash_signal_handler', 12076, 12300, 12300, ['    ']]
code
['xc_crash_signal_handler', 12076, 12300, 12300, ['    int r = 0;']]
code
['xc_crash_signal_handler', 12076, 12300, 12300, ['    size_t i;']]
code
['xc_crash_signal_handler', 12076, 12300, 12300, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
code
funcline addr: 12304
funcline addr: 12308
['xc_crash_signal_handler', 12076, 12300, 12308, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
restartcode
['xc_crash_signal_handler', 12076, 12308, 12308, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &act, NULL))']]
code
funcline addr: 12312
funcline addr: 12316
funcline addr: 12320
funcline addr: 12324
['xc_crash_signal_handler', 12076, 12308, 12324, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &act, NULL))']]
restartcode
['xc_crash_signal_handler', 12076, 12324, 12324, ['            r = XCC_ERRNO_SYS;']]
code
funcline addr: 12328
funcline addr: 12332
funcline addr: 12336
funcline addr: 12340
['xc_crash_signal_handler', 12076, 12324, 12340, ['            r = XCC_ERRNO_SYS;']]
restartcode
['xc_crash_signal_handler', 12076, 12340, 12340, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
code
funcline addr: 12344
funcline addr: 12348
['xc_crash_signal_handler', 12076, 12340, 12348, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
restartcode
['xc_crash_signal_handler', 12076, 12348, 12348, ['    }']]
code
['xc_crash_signal_handler', 12076, 12348, 12348, ['    else']]
code
['xc_crash_signal_handler', 12076, 12348, 12348, ['    {']]
code
['xc_crash_signal_handler', 12076, 12348, 12348, ['        if(0 != xcc_signal_crash_ignore()) goto exit;']]
code
funcline addr: 12352
['xc_crash_signal_handler', 12076, 12348, 12352, ['        if(0 != xcc_signal_crash_ignore()) goto exit;']]
restartcode
['xc_crash_signal_handler', 12076, 12352, 12352, ['    }']]
code
['xc_crash_signal_handler', 12076, 12352, 12352, ['']]
code
['xc_crash_signal_handler', 12076, 12352, 12352, ['    if(XC_TRACE_DUMP_ON_GOING == xc_trace_dump_status) ']]
code
funcline addr: 12356
funcline addr: 12360
funcline addr: 12364
funcline addr: 12368
['xc_crash_signal_handler', 12076, 12352, 12368, ['    if(XC_TRACE_DUMP_ON_GOING == xc_trace_dump_status) ']]
restartcode
['xc_crash_signal_handler', 12076, 12368, 12368, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
code
['xc_crash_signal_handler', 12076, 12368, 12368, ['        siglongjmp(jmpenv, 1);']]
code
['xc_crash_signal_handler', 12076, 12368, 12368, ['    }']]
code
['xc_crash_signal_handler', 12076, 12368, 12368, ['']]
code
['xc_crash_signal_handler', 12076, 12368, 12368, ['    //save crash time']]
code
['xc_crash_signal_handler', 12076, 12368, 12368, ['    clock_gettime(CLOCK_REALTIME, &crash_tp);']]
code
funcline addr: 12372
funcline addr: 12376
funcline addr: 12380
['xc_crash_signal_handler', 12076, 12368, 12380, ['    clock_gettime(CLOCK_REALTIME, &crash_tp);']]
restartcode
['xc_crash_signal_handler', 12076, 12380, 12380, ['    xc_crash_time = (uint64_t)(crash_tp.tv_sec) * 1000 * 1000 + (uint64_t)crash_tp.tv_nsec / 1000;']]
code
funcline addr: 12384
funcline addr: 12388
funcline addr: 12392
funcline addr: 12396
funcline addr: 12400
funcline addr: 12404
funcline addr: 12408
funcline addr: 12412
funcline addr: 12416
['xc_crash_signal_handler', 12076, 12380, 12416, ['    xc_crash_time = (uint64_t)(crash_tp.tv_sec) * 1000 * 1000 + (uint64_t)crash_tp.tv_nsec / 1000;']]
restartcode
['xc_crash_signal_handler', 12076, 12416, 12416, ['']]
code
['xc_crash_signal_handler', 12076, 12416, 12416, ['    //save crashed thread ID']]
code
['xc_crash_signal_handler', 12076, 12416, 12416, ['    xc_crash_tid = gettid();']]
code
funcline addr: 12420
['xc_crash_signal_handler', 12076, 12416, 12420, ['    xc_crash_tid = gettid();']]
restartcode
['xc_crash_signal_handler', 12076, 12420, 12420, ['    xc_common_open_prepared_fd(is_crash);']]
code
['xc_crash_signal_handler', 12076, 12420, 12420, ['}']]
code
['xc_crash_signal_handler', 12076, 12420, 12420, ['']]
code
['xc_crash_signal_handler', 12076, 12420, 12420, ['int xc_common_open_crash_log(char *pathname, size_t pathname_len, int *from_placeholder)']]
code
['xc_crash_signal_handler', 12076, 12420, 12420, ['{']]
code
['xc_crash_signal_handler', 12076, 12420, 12420, ['    return xc_common_open_log(1, xc_common_start_time, pathname, pathname_len, from_placeholder);']]
code
funcline addr: 12424
funcline addr: 12428
funcline addr: 12432
funcline addr: 12436
funcline addr: 12440
funcline addr: 12444
funcline addr: 12448
['xc_crash_signal_handler', 12076, 12420, 12448, ['    return xc_common_open_log(1, xc_common_start_time, pathname, pathname_len, from_placeholder);']]
restartcode
['xc_crash_signal_handler', 12076, 12448, 12448, ['    ']]
code
['xc_crash_signal_handler', 12076, 12448, 12448, ['    //create and open log file']]
code
['xc_crash_signal_handler', 12076, 12448, 12448, ['    if((xc_crash_log_fd = xc_common_open_crash_log(xc_crash_log_pathname, sizeof(xc_crash_log_pathname), &xc_crash_log_from_placeholder)) < 0) goto end;']]
code
funcline addr: 12452
funcline addr: 12456
funcline addr: 12460
['xc_crash_signal_handler', 12076, 12448, 12460, ['    if((xc_crash_log_fd = xc_common_open_crash_log(xc_crash_log_pathname, sizeof(xc_crash_log_pathname), &xc_crash_log_from_placeholder)) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 12460, 12460, ['    //    xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"get NO_NEW_PRIVS failed, errno=%d\\n\\n", errno);']]
code
['xc_crash_signal_handler', 12076, 12460, 12460, ['    //    goto end;']]
code
['xc_crash_signal_handler', 12076, 12460, 12460, ['    //}']]
code
['xc_crash_signal_handler', 12076, 12460, 12460, ['']]
code
['xc_crash_signal_handler', 12076, 12460, 12460, ['    //set dumpable']]
code
['xc_crash_signal_handler', 12076, 12460, 12460, ['    orig_dumpable = prctl(PR_GET_DUMPABLE);']]
code
funcline addr: 12464
funcline addr: 12468
funcline addr: 12472
['xc_crash_signal_handler', 12076, 12460, 12472, ['    orig_dumpable = prctl(PR_GET_DUMPABLE);']]
restartcode
['xc_crash_signal_handler', 12076, 12472, 12472, ['    errno = 0;']]
code
funcline addr: 12476
funcline addr: 12480
funcline addr: 12484
['xc_crash_signal_handler', 12076, 12472, 12484, ['    errno = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 12484, 12484, ['    if(0 != prctl(PR_SET_DUMPABLE, 1))']]
code
funcline addr: 12488
funcline addr: 12492
funcline addr: 12496
funcline addr: 12500
['xc_crash_signal_handler', 12076, 12484, 12500, ['    if(0 != prctl(PR_SET_DUMPABLE, 1))']]
restartcode
['xc_crash_signal_handler', 12076, 12500, 12500, ['    {']]
code
['xc_crash_signal_handler', 12076, 12500, 12500, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set dumpable failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 12504
funcline addr: 12508
funcline addr: 12512
funcline addr: 12516
funcline addr: 12520
['xc_crash_signal_handler', 12076, 12500, 12520, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set dumpable failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_signal_handler', 12076, 12520, 12520, ['    //fallback']]
code
['xc_crash_signal_handler', 12076, 12520, 12520, ['    if(!dump_ok)']]
code
['xc_crash_signal_handler', 12076, 12520, 12520, ['    {']]
code
['xc_crash_signal_handler', 12076, 12520, 12520, ['        xc_fallback_get_emergency(si,']]
code
['xc_crash_signal_handler', 12076, 12520, 12520, ['                                  (ucontext_t *)uc,']]
code
['xc_crash_signal_handler', 12076, 12520, 12520, ['                                  xc_crash_tid,']]
code
funcline addr: 12524
funcline addr: 12528
['xc_crash_signal_handler', 12076, 12520, 12528, ['                                  xc_crash_tid,']]
restartcode
['xc_crash_signal_handler', 12076, 12528, 12528, ['                                  xc_crash_time,']]
code
['xc_crash_signal_handler', 12076, 12528, 12528, ['                                  xc_crash_emergency,']]
code
funcline addr: 12532
['xc_crash_signal_handler', 12076, 12528, 12532, ['                                  xc_crash_emergency,']]
restartcode
['xc_crash_signal_handler', 12076, 12532, 12532, ['                                  xc_crash_time,']]
code
funcline addr: 12536
['xc_crash_signal_handler', 12076, 12532, 12536, ['                                  xc_crash_time,']]
restartcode
['xc_crash_signal_handler', 12076, 12536, 12536, ['                                 size_t emergency_len)']]
code
['xc_crash_signal_handler', 12076, 12536, 12536, ['{']]
code
['xc_crash_signal_handler', 12076, 12536, 12536, ['    size_t used = xcc_util_get_dump_header(emergency, emergency_len,']]
code
['xc_crash_signal_handler', 12076, 12536, 12536, ['                                           XCC_UTIL_CRASH_TYPE_NATIVE,']]
code
['xc_crash_signal_handler', 12076, 12536, 12536, ['                                           xc_common_time_zone,']]
code
['xc_crash_signal_handler', 12076, 12536, 12536, ['                                           xc_common_start_time,']]
code
funcline addr: 12540
['xc_crash_signal_handler', 12076, 12536, 12540, ['                                           xc_common_start_time,']]
restartcode
['xc_crash_signal_handler', 12076, 12540, 12540, ['                                           crash_time,']]
code
['xc_crash_signal_handler', 12076, 12540, 12540, ['                                           xc_common_app_id,']]
code
funcline addr: 12544
['xc_crash_signal_handler', 12076, 12540, 12544, ['                                           xc_common_app_id,']]
restartcode
['xc_crash_signal_handler', 12076, 12544, 12544, ['                                           xc_common_app_version,']]
code
['xc_crash_signal_handler', 12076, 12544, 12544, ['                                           xc_common_api_level,']]
code
funcline addr: 12548
['xc_crash_signal_handler', 12076, 12544, 12548, ['                                           xc_common_api_level,']]
restartcode
['xc_crash_signal_handler', 12076, 12548, 12548, ['                                           xc_common_os_version,']]
code
['xc_crash_signal_handler', 12076, 12548, 12548, ['                                           xc_common_kernel_version,']]
code
funcline addr: 12552
['xc_crash_signal_handler', 12076, 12548, 12552, ['                                           xc_common_kernel_version,']]
restartcode
['xc_crash_signal_handler', 12076, 12552, 12552, ['                                           xc_common_os_version,']]
code
funcline addr: 12556
['xc_crash_signal_handler', 12076, 12552, 12556, ['                                           xc_common_os_version,']]
restartcode
['xc_crash_signal_handler', 12076, 12556, 12556, ['                                           xc_common_abi_list,']]
code
['xc_crash_signal_handler', 12076, 12556, 12556, ['                                           xc_common_manufacturer,']]
code
funcline addr: 12560
['xc_crash_signal_handler', 12076, 12556, 12560, ['                                           xc_common_manufacturer,']]
restartcode
['xc_crash_signal_handler', 12076, 12560, 12560, ['                                           xc_common_brand,']]
code
['xc_crash_signal_handler', 12076, 12560, 12560, ['                                           xc_common_model,']]
code
funcline addr: 12564
['xc_crash_signal_handler', 12076, 12560, 12564, ['                                           xc_common_model,']]
restartcode
['xc_crash_signal_handler', 12076, 12564, 12564, ['                                  xc_crash_tid,']]
code
funcline addr: 12568
['xc_crash_signal_handler', 12076, 12564, 12568, ['                                  xc_crash_tid,']]
restartcode
['xc_crash_signal_handler', 12076, 12568, 12568, ['    size_t used = xcc_util_get_dump_header(emergency, emergency_len,']]
code
funcline addr: 12572
funcline addr: 12576
funcline addr: 12580
funcline addr: 12584
funcline addr: 12588
funcline addr: 12592
funcline addr: 12596
funcline addr: 12600
['xc_crash_signal_handler', 12076, 12568, 12600, ['    size_t used = xcc_util_get_dump_header(emergency, emergency_len,']]
restartcode
['xc_crash_signal_handler', 12076, 12600, 12600, ['                                           xc_common_build_fingerprint);']]
code
['xc_crash_signal_handler', 12076, 12600, 12600, ['    used += xc_fallback_get_process_thread(emergency + used, emergency_len - used, tid);']]
code
funcline addr: 12604
funcline addr: 12608
['xc_crash_signal_handler', 12076, 12600, 12608, ['    used += xc_fallback_get_process_thread(emergency + used, emergency_len - used, tid);']]
restartcode
['xc_crash_signal_handler', 12076, 12608, 12608, ['    xcc_util_get_thread_name(tid, tname, sizeof(tname));']]
code
funcline addr: 12612
funcline addr: 12616
funcline addr: 12620
funcline addr: 12624
['xc_crash_signal_handler', 12076, 12608, 12624, ['    xcc_util_get_thread_name(tid, tname, sizeof(tname));']]
restartcode
['xc_crash_signal_handler', 12076, 12624, 12624, ['                            xc_common_process_id, tid, tname, xc_common_process_name);']]
code
funcline addr: 12628
funcline addr: 12632
['xc_crash_signal_handler', 12076, 12624, 12632, ['                            xc_common_process_id, tid, tname, xc_common_process_name);']]
restartcode
['xc_crash_signal_handler', 12076, 12632, 12632, ['    return xcc_fmt_snprintf(buf, len, "pid: %d, tid: %d, name: %s  >>> %s <<<\\n",']]
code
funcline addr: 12636
funcline addr: 12640
funcline addr: 12644
funcline addr: 12648
funcline addr: 12652
funcline addr: 12656
funcline addr: 12660
['xc_crash_signal_handler', 12076, 12632, 12660, ['    return xcc_fmt_snprintf(buf, len, "pid: %d, tid: %d, name: %s  >>> %s <<<\\n",']]
restartcode
['xc_crash_signal_handler', 12076, 12660, 12660, ['}']]
code
['xc_crash_signal_handler', 12076, 12660, 12660, ['']]
code
['xc_crash_signal_handler', 12076, 12660, 12660, ['int xcc_util_signal_has_si_addr(const siginfo_t* si)']]
code
['xc_crash_signal_handler', 12076, 12660, 12660, ['{']]
code
['xc_crash_signal_handler', 12076, 12660, 12660, ["    //manually sent signals won't have si_addr"]]
code
['xc_crash_signal_handler', 12076, 12660, 12660, ['    if(si->si_code == SI_USER || si->si_code == SI_QUEUE || si->si_code == SI_TKILL) return 0;']]
code
funcline addr: 12664
['xc_crash_signal_handler', 12076, 12660, 12664, ['    if(si->si_code == SI_USER || si->si_code == SI_QUEUE || si->si_code == SI_TKILL) return 0;']]
restartcode
['xc_crash_signal_handler', 12076, 12664, 12664, ['    used += xc_fallback_get_process_thread(emergency + used, emergency_len - used, tid);']]
code
funcline addr: 12668
funcline addr: 12672
funcline addr: 12676
funcline addr: 12680
funcline addr: 12684
funcline addr: 12688
funcline addr: 12692
funcline addr: 12696
funcline addr: 12700
['xc_crash_signal_handler', 12076, 12664, 12700, ['    used += xc_fallback_get_process_thread(emergency + used, emergency_len - used, tid);']]
restartcode
['xc_crash_signal_handler', 12076, 12700, 12700, ['        xcc_fmt_snprintf(addr_desc, sizeof(addr_desc), "--------");']]
code
funcline addr: 12704
funcline addr: 12708
funcline addr: 12712
funcline addr: 12716
funcline addr: 12720
['xc_crash_signal_handler', 12076, 12700, 12720, ['        xcc_fmt_snprintf(addr_desc, sizeof(addr_desc), "--------");']]
restartcode
['xc_crash_signal_handler', 12076, 12720, 12720, ['    char sender_desc[64] = "";']]
code
funcline addr: 12724
funcline addr: 12728
funcline addr: 12732
['xc_crash_signal_handler', 12076, 12720, 12732, ['    char sender_desc[64] = "";']]
restartcode
['xc_crash_signal_handler', 12076, 12732, 12732, ['    }']]
code
['xc_crash_signal_handler', 12076, 12732, 12732, ['}']]
code
['xc_crash_signal_handler', 12076, 12732, 12732, ['']]
code
['xc_crash_signal_handler', 12076, 12732, 12732, ['int xcc_util_signal_has_sender(const siginfo_t* si, pid_t caller_pid)']]
code
['xc_crash_signal_handler', 12076, 12732, 12732, ['{']]
code
['xc_crash_signal_handler', 12076, 12732, 12732, ['    return (SI_FROMUSER(si) && (si->si_pid != 0) && (si->si_pid != caller_pid)) ? 1 : 0;']]
code
funcline addr: 12736
funcline addr: 12740
funcline addr: 12744
funcline addr: 12748
['xc_crash_signal_handler', 12076, 12732, 12748, ['    return (SI_FROMUSER(si) && (si->si_pid != 0) && (si->si_pid != caller_pid)) ? 1 : 0;']]
restartcode
['xc_crash_signal_handler', 12076, 12748, 12748, ['    if(xcc_util_signal_has_sender(si, xc_common_process_id))']]
code
funcline addr: 12752
funcline addr: 12756
funcline addr: 12760
funcline addr: 12764
funcline addr: 12768
funcline addr: 12772
funcline addr: 12776
['xc_crash_signal_handler', 12076, 12748, 12776, ['    if(xcc_util_signal_has_sender(si, xc_common_process_id))']]
restartcode
['xc_crash_signal_handler', 12076, 12776, 12776, ['        xcc_fmt_snprintf(sender_desc, sizeof(sender_desc), " from pid %d, uid %d", si->si_pid, si->si_uid);']]
code
funcline addr: 12780
funcline addr: 12784
funcline addr: 12788
funcline addr: 12792
funcline addr: 12796
funcline addr: 12800
['xc_crash_signal_handler', 12076, 12776, 12800, ['        xcc_fmt_snprintf(sender_desc, sizeof(sender_desc), " from pid %d, uid %d", si->si_pid, si->si_uid);']]
restartcode
['xc_crash_signal_handler', 12076, 12800, 12800, ['                            si->si_signo, xcc_util_get_signame(si),']]
code
funcline addr: 12804
funcline addr: 12808
['xc_crash_signal_handler', 12076, 12800, 12808, ['                            si->si_signo, xcc_util_get_signame(si),']]
restartcode
['xc_crash_signal_handler', 12076, 12808, 12808, ['    switch (si->si_signo)']]
code
funcline addr: 12812
funcline addr: 12816
funcline addr: 12820
funcline addr: 12824
funcline addr: 12828
funcline addr: 12832
funcline addr: 12836
funcline addr: 12840
funcline addr: 12844
funcline addr: 12848
funcline addr: 12852
['xc_crash_signal_handler', 12076, 12808, 12852, ['    switch (si->si_signo)']]
restartcode
['xc_crash_signal_handler', 12076, 12852, 12852, ['                            si->si_code, xcc_util_get_sigcodename(si), sender_desc, addr_desc);']]
code
funcline addr: 12856
['xc_crash_signal_handler', 12076, 12852, 12856, ['                            si->si_code, xcc_util_get_sigcodename(si), sender_desc, addr_desc);']]
restartcode
['xc_crash_signal_handler', 12076, 12856, 12856, ['        switch(si->si_code)']]
code
funcline addr: 12860
funcline addr: 12864
funcline addr: 12868
funcline addr: 12872
funcline addr: 12876
funcline addr: 12880
funcline addr: 12884
funcline addr: 12888
funcline addr: 12892
['xc_crash_signal_handler', 12076, 12856, 12892, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 12892, 12892, ['    if(0 != prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY))']]
code
funcline addr: 12896
funcline addr: 12900
funcline addr: 12904
['xc_crash_signal_handler', 12076, 12892, 12904, ['    if(0 != prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY))']]
restartcode
['xc_crash_signal_handler', 12076, 12904, 12904, ['    errno = 0;']]
code
funcline addr: 12908
['xc_crash_signal_handler', 12076, 12904, 12908, ['    errno = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 12908, 12908, ['    if(0 != prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY))']]
code
funcline addr: 12912
funcline addr: 12916
['xc_crash_signal_handler', 12076, 12908, 12916, ['    if(0 != prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY))']]
restartcode
['xc_crash_signal_handler', 12076, 12916, 12916, ['        if(EINVAL == errno)']]
code
funcline addr: 12920
funcline addr: 12924
funcline addr: 12928
funcline addr: 12932
funcline addr: 12936
['xc_crash_signal_handler', 12076, 12916, 12936, ['        if(EINVAL == errno)']]
restartcode
['xc_crash_signal_handler', 12076, 12936, 12936, ['    switch (si->si_signo)']]
code
funcline addr: 12940
funcline addr: 12944
funcline addr: 12948
funcline addr: 12952
funcline addr: 12956
['xc_crash_signal_handler', 12076, 12936, 12956, ['    switch (si->si_signo)']]
restartcode
['xc_crash_signal_handler', 12076, 12956, 12956, ['    if(xcc_util_signal_has_si_addr(si))']]
code
funcline addr: 12960
funcline addr: 12964
['xc_crash_signal_handler', 12076, 12956, 12964, ['    if(xcc_util_signal_has_si_addr(si))']]
restartcode
['xc_crash_signal_handler', 12076, 12964, 12964, ['        xcc_fmt_snprintf(addr_desc, sizeof(addr_desc), "%p", si->si_addr);']]
code
funcline addr: 12968
funcline addr: 12972
funcline addr: 12976
funcline addr: 12980
funcline addr: 12984
funcline addr: 12988
funcline addr: 12992
['xc_crash_signal_handler', 12076, 12964, 12992, ['        xcc_fmt_snprintf(addr_desc, sizeof(addr_desc), "%p", si->si_addr);']]
restartcode
['xc_crash_signal_handler', 12076, 12992, 12992, ['    switch (si->si_signo)']]
code
funcline addr: 12996
funcline addr: 13000
['xc_crash_signal_handler', 12076, 12992, 13000, ['    switch (si->si_signo)']]
restartcode
['xc_crash_signal_handler', 12076, 13000, 13000, ['                            si->si_code, xcc_util_get_sigcodename(si), sender_desc, addr_desc);']]
code
funcline addr: 13004
funcline addr: 13008
funcline addr: 13012
['xc_crash_signal_handler', 12076, 13000, 13012, ['                            si->si_code, xcc_util_get_sigcodename(si), sender_desc, addr_desc);']]
restartcode
['xc_crash_signal_handler', 12076, 13012, 13012, ['        switch(si->si_code)']]
code
funcline addr: 13016
funcline addr: 13020
funcline addr: 13024
funcline addr: 13028
funcline addr: 13032
funcline addr: 13036
funcline addr: 13040
funcline addr: 13044
funcline addr: 13048
funcline addr: 13052
funcline addr: 13056
funcline addr: 13060
funcline addr: 13064
funcline addr: 13068
funcline addr: 13072
funcline addr: 13076
['xc_crash_signal_handler', 12076, 13012, 13076, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 13076, 13076, ['        switch(si->si_code)']]
code
funcline addr: 13080
funcline addr: 13084
funcline addr: 13088
funcline addr: 13092
funcline addr: 13096
funcline addr: 13100
funcline addr: 13104
funcline addr: 13108
funcline addr: 13112
funcline addr: 13116
funcline addr: 13120
funcline addr: 13124
['xc_crash_signal_handler', 12076, 13076, 13124, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 13124, 13124, ['    switch (si->si_code) {']]
code
funcline addr: 13128
funcline addr: 13132
funcline addr: 13136
funcline addr: 13140
funcline addr: 13144
funcline addr: 13148
funcline addr: 13152
funcline addr: 13156
funcline addr: 13160
funcline addr: 13164
funcline addr: 13168
funcline addr: 13172
funcline addr: 13176
funcline addr: 13180
funcline addr: 13184
funcline addr: 13188
funcline addr: 13192
funcline addr: 13196
['xc_crash_signal_handler', 12076, 13124, 13196, ['    switch (si->si_code) {']]
restartcode
['xc_crash_signal_handler', 12076, 13196, 13196, ['        switch(si->si_code)']]
code
funcline addr: 13200
funcline addr: 13204
funcline addr: 13208
funcline addr: 13212
funcline addr: 13216
funcline addr: 13220
funcline addr: 13224
funcline addr: 13228
funcline addr: 13232
funcline addr: 13236
['xc_crash_signal_handler', 12076, 13196, 13236, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 13236, 13236, ['        switch(si->si_code)']]
code
funcline addr: 13240
funcline addr: 13244
funcline addr: 13248
funcline addr: 13252
funcline addr: 13256
funcline addr: 13260
funcline addr: 13264
funcline addr: 13268
funcline addr: 13272
funcline addr: 13276
['xc_crash_signal_handler', 12076, 13236, 13276, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 13276, 13276, ['        switch(si->si_code)']]
code
funcline addr: 13280
funcline addr: 13284
funcline addr: 13288
funcline addr: 13292
funcline addr: 13296
funcline addr: 13300
funcline addr: 13304
funcline addr: 13308
funcline addr: 13312
funcline addr: 13316
['xc_crash_signal_handler', 12076, 13276, 13316, ['        switch(si->si_code)']]
restartcode
['xc_crash_signal_handler', 12076, 13316, 13316, ['    xc_crash_spot.crash_time = xc_crash_time;']]
code
funcline addr: 13320
['xc_crash_signal_handler', 12076, 13316, 13320, ['    xc_crash_spot.crash_time = xc_crash_time;']]
restartcode
['xc_crash_signal_handler', 12076, 13320, 13320, ['    xc_crash_spot.crash_tid = xc_crash_tid;']]
code
funcline addr: 13324
['xc_crash_signal_handler', 12076, 13320, 13324, ['    xc_crash_spot.crash_tid = xc_crash_tid;']]
restartcode
['xc_crash_signal_handler', 12076, 13324, 13324, ['    xc_crash_spot.crash_time = xc_crash_time;']]
code
funcline addr: 13328
funcline addr: 13332
['xc_crash_signal_handler', 12076, 13324, 13332, ['    xc_crash_spot.crash_time = xc_crash_time;']]
restartcode
['xc_crash_signal_handler', 12076, 13332, 13332, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 13336
funcline addr: 13340
funcline addr: 13344
funcline addr: 13348
['xc_crash_signal_handler', 12076, 13332, 13348, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xc_crash_signal_handler', 12076, 13348, 13348, ['    xc_crash_spot.crash_tid = xc_crash_tid;']]
code
funcline addr: 13352
funcline addr: 13356
funcline addr: 13360
funcline addr: 13364
funcline addr: 13368
funcline addr: 13372
['xc_crash_signal_handler', 12076, 13348, 13372, ['    xc_crash_spot.crash_tid = xc_crash_tid;']]
restartcode
['xc_crash_signal_handler', 12076, 13372, 13372, ['        return __strlen_chk(s, bos);']]
code
funcline addr: 13376
funcline addr: 13380
funcline addr: 13384
['xc_crash_signal_handler', 12076, 13372, 13384, ['        return __strlen_chk(s, bos);']]
restartcode
['xc_crash_signal_handler', 12076, 13384, 13384, ['    xc_crash_spot.log_pathname_len = strlen(xc_crash_log_pathname);']]
code
funcline addr: 13388
['xc_crash_signal_handler', 12076, 13384, 13388, ['    xc_crash_spot.log_pathname_len = strlen(xc_crash_log_pathname);']]
restartcode
['xc_crash_signal_handler', 12076, 13388, 13388, ['    errno = 0;']]
code
funcline addr: 13392
['xc_crash_signal_handler', 12076, 13388, 13392, ['    errno = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13392, 13392, ['    return clone(fn, xc_crash_child_stack, CLONE_VFORK | CLONE_FS | CLONE_UNTRACED, NULL);']]
code
funcline addr: 13396
funcline addr: 13400
funcline addr: 13404
funcline addr: 13408
funcline addr: 13412
funcline addr: 13416
funcline addr: 13420
['xc_crash_signal_handler', 12076, 13392, 13420, ['    return clone(fn, xc_crash_child_stack, CLONE_VFORK | CLONE_FS | CLONE_UNTRACED, NULL);']]
restartcode
['xc_crash_signal_handler', 12076, 13420, 13420, ['    if(-1 == dumper_pid)']]
code
funcline addr: 13424
funcline addr: 13428
funcline addr: 13432
['xc_crash_signal_handler', 12076, 13420, 13432, ['    if(-1 == dumper_pid)']]
restartcode
['xc_crash_signal_handler', 12076, 13432, 13432, ['    errno = 0;']]
code
funcline addr: 13436
['xc_crash_signal_handler', 12076, 13432, 13436, ['    errno = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13436, 13436, ['    int status = 0;']]
code
funcline addr: 13440
['xc_crash_signal_handler', 12076, 13436, 13440, ['    int status = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13440, 13440, ['    int wait_r = XCC_UTIL_TEMP_FAILURE_RETRY(waitpid(dumper_pid, &status, __WALL));']]
code
funcline addr: 13444
funcline addr: 13448
funcline addr: 13452
funcline addr: 13456
funcline addr: 13460
funcline addr: 13464
funcline addr: 13468
funcline addr: 13472
funcline addr: 13476
funcline addr: 13480
funcline addr: 13484
['xc_crash_signal_handler', 12076, 13440, 13484, ['    int wait_r = XCC_UTIL_TEMP_FAILURE_RETRY(waitpid(dumper_pid, &status, __WALL));']]
restartcode
['xc_crash_signal_handler', 12076, 13484, 13484, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set traceable failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 13488
funcline addr: 13492
funcline addr: 13496
funcline addr: 13500
funcline addr: 13504
funcline addr: 13508
funcline addr: 13512
funcline addr: 13516
funcline addr: 13520
funcline addr: 13524
funcline addr: 13528
funcline addr: 13532
funcline addr: 13536
funcline addr: 13540
funcline addr: 13544
funcline addr: 13548
funcline addr: 13552
funcline addr: 13556
funcline addr: 13560
funcline addr: 13564
funcline addr: 13568
funcline addr: 13572
funcline addr: 13576
funcline addr: 13580
funcline addr: 13584
funcline addr: 13588
funcline addr: 13592
funcline addr: 13596
funcline addr: 13600
['xc_crash_signal_handler', 12076, 13484, 13600, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set traceable failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_signal_handler', 12076, 13600, 13600, ['    return xcc_fmt_snprintf(buf, len, "signal %d (%s), code %d (%s%s), fault addr %s\\n",']]
code
funcline addr: 13604
funcline addr: 13608
funcline addr: 13612
funcline addr: 13616
funcline addr: 13620
funcline addr: 13624
funcline addr: 13628
funcline addr: 13632
funcline addr: 13636
['xc_crash_signal_handler', 12076, 13600, 13636, ['    return xcc_fmt_snprintf(buf, len, "signal %d (%s), code %d (%s%s), fault addr %s\\n",']]
restartcode
['xc_crash_signal_handler', 12076, 13636, 13636, ['                            uc->uc_mcontext.regs[0],']]
code
funcline addr: 13640
['xc_crash_signal_handler', 12076, 13636, 13640, ['                            uc->uc_mcontext.regs[0],']]
restartcode
['xc_crash_signal_handler', 12076, 13640, 13640, ['                            uc->uc_mcontext.regs[2],']]
code
funcline addr: 13644
['xc_crash_signal_handler', 12076, 13640, 13644, ['                            uc->uc_mcontext.regs[2],']]
restartcode
['xc_crash_signal_handler', 12076, 13644, 13644, ['                            uc->uc_mcontext.regs[4],']]
code
funcline addr: 13648
['xc_crash_signal_handler', 12076, 13644, 13648, ['                            uc->uc_mcontext.regs[4],']]
restartcode
['xc_crash_signal_handler', 12076, 13648, 13648, ['                            uc->uc_mcontext.regs[5],']]
code
funcline addr: 13652
['xc_crash_signal_handler', 12076, 13648, 13652, ['                            uc->uc_mcontext.regs[5],']]
restartcode
['xc_crash_signal_handler', 12076, 13652, 13652, ['                            uc->uc_mcontext.regs[9],']]
code
funcline addr: 13656
['xc_crash_signal_handler', 12076, 13652, 13656, ['                            uc->uc_mcontext.regs[9],']]
restartcode
['xc_crash_signal_handler', 12076, 13656, 13656, ['                            uc->uc_mcontext.regs[13],']]
code
funcline addr: 13660
['xc_crash_signal_handler', 12076, 13656, 13660, ['                            uc->uc_mcontext.regs[13],']]
restartcode
['xc_crash_signal_handler', 12076, 13660, 13660, ['                            uc->uc_mcontext.regs[17],']]
code
funcline addr: 13664
['xc_crash_signal_handler', 12076, 13660, 13664, ['                            uc->uc_mcontext.regs[17],']]
restartcode
['xc_crash_signal_handler', 12076, 13664, 13664, ['                            uc->uc_mcontext.regs[21],']]
code
funcline addr: 13668
['xc_crash_signal_handler', 12076, 13664, 13668, ['                            uc->uc_mcontext.regs[21],']]
restartcode
['xc_crash_signal_handler', 12076, 13668, 13668, ['                            uc->uc_mcontext.regs[25],']]
code
funcline addr: 13672
['xc_crash_signal_handler', 12076, 13668, 13672, ['                            uc->uc_mcontext.regs[25],']]
restartcode
['xc_crash_signal_handler', 12076, 13672, 13672, ['                            uc->uc_mcontext.regs[29],']]
code
funcline addr: 13676
['xc_crash_signal_handler', 12076, 13672, 13676, ['                            uc->uc_mcontext.regs[29],']]
restartcode
['xc_crash_signal_handler', 12076, 13676, 13676, ['                            uc->uc_mcontext.sp,']]
code
funcline addr: 13680
['xc_crash_signal_handler', 12076, 13676, 13680, ['                            uc->uc_mcontext.sp,']]
restartcode
['xc_crash_signal_handler', 12076, 13680, 13680, ['    used += xc_fallback_get_signal(emergency + used, emergency_len - used, si);']]
code
funcline addr: 13684
funcline addr: 13688
['xc_crash_signal_handler', 12076, 13680, 13688, ['    used += xc_fallback_get_signal(emergency + used, emergency_len - used, si);']]
restartcode
['xc_crash_signal_handler', 12076, 13688, 13688, ['    return xcc_fmt_snprintf(buf, len, ']]
code
funcline addr: 13692
['xc_crash_signal_handler', 12076, 13688, 13692, ['    return xcc_fmt_snprintf(buf, len, ']]
restartcode
['xc_crash_signal_handler', 12076, 13692, 13692, ['    used += xc_fallback_get_regs(emergency + used, emergency_len - used, uc);']]
code
funcline addr: 13696
funcline addr: 13700
['xc_crash_signal_handler', 12076, 13692, 13700, ['    used += xc_fallback_get_regs(emergency + used, emergency_len - used, uc);']]
restartcode
['xc_crash_signal_handler', 12076, 13700, 13700, ['    return xcc_fmt_snprintf(buf, len, ']]
code
funcline addr: 13704
funcline addr: 13708
funcline addr: 13712
funcline addr: 13716
funcline addr: 13720
funcline addr: 13724
funcline addr: 13728
funcline addr: 13732
funcline addr: 13736
funcline addr: 13740
['xc_crash_signal_handler', 12076, 13700, 13740, ['    return xcc_fmt_snprintf(buf, len, ']]
restartcode
['xc_crash_signal_handler', 12076, 13740, 13740, ['    used += xc_fallback_get_regs(emergency + used, emergency_len - used, uc);']]
code
funcline addr: 13744
['xc_crash_signal_handler', 12076, 13740, 13744, ['    used += xc_fallback_get_regs(emergency + used, emergency_len - used, uc);']]
restartcode
['xc_crash_signal_handler', 12076, 13744, 13744, ['    used += xc_fallback_get_backtrace(emergency + used, emergency_len - used, si, uc);']]
code
funcline addr: 13748
funcline addr: 13752
['xc_crash_signal_handler', 12076, 13744, 13752, ['    used += xc_fallback_get_backtrace(emergency + used, emergency_len - used, si, uc);']]
restartcode
['xc_crash_signal_handler', 12076, 13752, 13752, ['    used += xcc_fmt_snprintf(buf + used, len - used, "backtrace:\\n");']]
code
funcline addr: 13756
funcline addr: 13760
funcline addr: 13764
funcline addr: 13768
funcline addr: 13772
funcline addr: 13776
funcline addr: 13780
funcline addr: 13784
['xc_crash_signal_handler', 12076, 13752, 13784, ['    used += xcc_fmt_snprintf(buf + used, len - used, "backtrace:\\n");']]
restartcode
['xc_crash_signal_handler', 12076, 13784, 13784, ['    used += xcc_unwind_get(xc_common_api_level, si, uc, buf + used, len - used);']]
code
funcline addr: 13788
funcline addr: 13792
['xc_crash_signal_handler', 12076, 13784, 13792, ['    used += xcc_unwind_get(xc_common_api_level, si, uc, buf + used, len - used);']]
restartcode
['xc_crash_signal_handler', 12076, 13792, 13792, ['    }']]
code
['xc_crash_signal_handler', 12076, 13792, 13792, ['#else']]
code
['xc_crash_signal_handler', 12076, 13792, 13792, ['    (void)si;']]
code
['xc_crash_signal_handler', 12076, 13792, 13792, ['#endif']]
code
['xc_crash_signal_handler', 12076, 13792, 13792, ['']]
code
['xc_crash_signal_handler', 12076, 13792, 13792, ['    if(api_level >= 21 && api_level <= 23)']]
code
funcline addr: 13796
funcline addr: 13800
funcline addr: 13804
funcline addr: 13808
['xc_crash_signal_handler', 12076, 13792, 13808, ['    if(api_level >= 21 && api_level <= 23)']]
restartcode
['xc_crash_signal_handler', 12076, 13808, 13808, ['    unw_context_t *context = NULL;']]
code
['xc_crash_signal_handler', 12076, 13808, 13808, ['    size_t         buf_used = 0, len, i = 0;']]
code
['xc_crash_signal_handler', 12076, 13808, 13808, ['    uintptr_t      pc;']]
code
['xc_crash_signal_handler', 12076, 13808, 13808, ['    Dl_info        info;']]
code
['xc_crash_signal_handler', 12076, 13808, 13808, ['']]
code
['xc_crash_signal_handler', 12076, 13808, 13808, ['    if(NULL == libunwind) return 0;']]
code
funcline addr: 13812
funcline addr: 13816
funcline addr: 13820
['xc_crash_signal_handler', 12076, 13808, 13820, ['    if(NULL == libunwind) return 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13820, 13820, ['']]
code
['xc_crash_signal_handler', 12076, 13820, 13820, ['    if(NULL == (cursor = calloc(1, sizeof(unw_cursor_t)))) return 0;']]
code
funcline addr: 13824
funcline addr: 13828
funcline addr: 13832
funcline addr: 13836
funcline addr: 13840
['xc_crash_signal_handler', 12076, 13820, 13840, ['    if(NULL == (cursor = calloc(1, sizeof(unw_cursor_t)))) return 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13840, 13840, ['    if(NULL == (context = calloc(1, sizeof(unw_context_t)))) return 0;']]
code
funcline addr: 13844
funcline addr: 13848
funcline addr: 13852
funcline addr: 13856
['xc_crash_signal_handler', 12076, 13840, 13856, ['    if(NULL == (context = calloc(1, sizeof(unw_context_t)))) return 0;']]
restartcode
['xc_crash_signal_handler', 12076, 13856, 13856, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 13860
funcline addr: 13864
funcline addr: 13868
funcline addr: 13872
funcline addr: 13876
['xc_crash_signal_handler', 12076, 13856, 13876, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xc_crash_signal_handler', 12076, 13876, 13876, ['    context->r[15] = uc->uc_mcontext.arm_pc;']]
code
['xc_crash_signal_handler', 12076, 13876, 13876, ['#else']]
code
['xc_crash_signal_handler', 12076, 13876, 13876, ['    memcpy(context, uc, sizeof(ucontext_t));']]
code
['xc_crash_signal_handler', 12076, 13876, 13876, ['#endif']]
code
['xc_crash_signal_handler', 12076, 13876, 13876, ['']]
code
['xc_crash_signal_handler', 12076, 13876, 13876, ['    if(unw_init_local(cursor, context) < 0) goto end;']]
code
funcline addr: 13880
funcline addr: 13884
funcline addr: 13888
funcline addr: 13892
funcline addr: 13896
funcline addr: 13900
funcline addr: 13904
funcline addr: 13908
funcline addr: 13912
funcline addr: 13916
funcline addr: 13920
funcline addr: 13924
funcline addr: 13928
['xc_crash_signal_handler', 12076, 13876, 13928, ['    if(unw_init_local(cursor, context) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 13928, 13928, ['    do']]
code
['xc_crash_signal_handler', 12076, 13928, 13928, ['    {']]
code
['xc_crash_signal_handler', 12076, 13928, 13928, ['        //get current pc']]
code
['xc_crash_signal_handler', 12076, 13928, 13928, ['        if(unw_get_reg(cursor, UNW_REG_IP, &pc) < 0) goto end;']]
code
funcline addr: 13932
funcline addr: 13936
funcline addr: 13940
funcline addr: 13944
funcline addr: 13948
funcline addr: 13952
funcline addr: 13956
funcline addr: 13960
['xc_crash_signal_handler', 12076, 13928, 13960, ['        if(unw_get_reg(cursor, UNW_REG_IP, &pc) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 13960, 13960, ['        ']]
code
['xc_crash_signal_handler', 12076, 13960, 13960, ['        //append line for current frame']]
code
['xc_crash_signal_handler', 12076, 13960, 13960, ['        if(0 == dladdr((void *)pc, &info) || (uintptr_t)info.dli_fbase > pc)']]
code
funcline addr: 13964
funcline addr: 13968
funcline addr: 13972
funcline addr: 13976
funcline addr: 13980
funcline addr: 13984
funcline addr: 13988
funcline addr: 13992
['xc_crash_signal_handler', 12076, 13960, 13992, ['        if(0 == dladdr((void *)pc, &info) || (uintptr_t)info.dli_fbase > pc)']]
restartcode
['xc_crash_signal_handler', 12076, 13992, 13992, ['                                   "    #%02zu pc %0"XCC_UTIL_FMT_ADDR"  <unknown>\\n",']]
code
['xc_crash_signal_handler', 12076, 13992, 13992, ['                                   i, pc);']]
code
['xc_crash_signal_handler', 12076, 13992, 13992, ['        }']]
code
['xc_crash_signal_handler', 12076, 13992, 13992, ['        else']]
code
['xc_crash_signal_handler', 12076, 13992, 13992, ['        {']]
code
['xc_crash_signal_handler', 12076, 13992, 13992, ["            if(NULL == info.dli_fname || '\\0' == info.dli_fname[0])"]]
code
funcline addr: 13996
funcline addr: 14000
funcline addr: 14004
funcline addr: 14008
['xc_crash_signal_handler', 12076, 13992, 14008, ["            if(NULL == info.dli_fname || '\\0' == info.dli_fname[0])"]]
restartcode
['xc_crash_signal_handler', 12076, 14008, 14008, ['                                   "    #%02zu pc %0"XCC_UTIL_FMT_ADDR"  <anonymous:%"XCC_UTIL_FMT_ADDR">\\n",']]
code
['xc_crash_signal_handler', 12076, 14008, 14008, ['                                       i, pc - (uintptr_t)info.dli_fbase, (uintptr_t)info.dli_fbase);']]
code
['xc_crash_signal_handler', 12076, 14008, 14008, ['            }']]
code
['xc_crash_signal_handler', 12076, 14008, 14008, ['            else']]
code
['xc_crash_signal_handler', 12076, 14008, 14008, ['            {']]
code
['xc_crash_signal_handler', 12076, 14008, 14008, ["                if(NULL == info.dli_sname || '\\0' == info.dli_sname[0])"]]
code
funcline addr: 14012
funcline addr: 14016
funcline addr: 14020
funcline addr: 14024
['xc_crash_signal_handler', 12076, 14008, 14024, ["                if(NULL == info.dli_sname || '\\0' == info.dli_sname[0])"]]
restartcode
['xc_crash_signal_handler', 12076, 14024, 14024, ['                                           "    #%02zu pc %0"XCC_UTIL_FMT_ADDR"  %s\\n",']]
code
['xc_crash_signal_handler', 12076, 14024, 14024, ['                                           i, pc - (uintptr_t)info.dli_fbase, info.dli_fname);']]
code
['xc_crash_signal_handler', 12076, 14024, 14024, ['                }']]
code
['xc_crash_signal_handler', 12076, 14024, 14024, ['                else']]
code
['xc_crash_signal_handler', 12076, 14024, 14024, ['                {']]
code
['xc_crash_signal_handler', 12076, 14024, 14024, ['                    if(0 == (uintptr_t)info.dli_saddr || (uintptr_t)info.dli_saddr > pc)']]
code
funcline addr: 14028
funcline addr: 14032
funcline addr: 14036
funcline addr: 14040
funcline addr: 14044
funcline addr: 14048
['xc_crash_signal_handler', 12076, 14024, 14048, ['                    if(0 == (uintptr_t)info.dli_saddr || (uintptr_t)info.dli_saddr > pc)']]
restartcode
['xc_crash_signal_handler', 12076, 14048, 14048, ['                                               i, pc - (uintptr_t)info.dli_fbase, info.dli_fname,']]
code
['xc_crash_signal_handler', 12076, 14048, 14048, ['                                               info.dli_sname);']]
code
['xc_crash_signal_handler', 12076, 14048, 14048, ['                    }']]
code
['xc_crash_signal_handler', 12076, 14048, 14048, ['                    else']]
code
['xc_crash_signal_handler', 12076, 14048, 14048, ['                    {']]
code
['xc_crash_signal_handler', 12076, 14048, 14048, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14052
['xc_crash_signal_handler', 12076, 14048, 14052, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14052, 14052, ['                                               "    #%02zu pc %0"XCC_UTIL_FMT_ADDR"  %s (%s+%"PRIuPTR")\\n",']]
code
['xc_crash_signal_handler', 12076, 14052, 14052, ['                                               i, pc - (uintptr_t)info.dli_fbase, info.dli_fname,']]
code
['xc_crash_signal_handler', 12076, 14052, 14052, ['                                               info.dli_sname, pc - (uintptr_t)info.dli_saddr);']]
code
funcline addr: 14056
['xc_crash_signal_handler', 12076, 14052, 14056, ['                                               info.dli_sname, pc - (uintptr_t)info.dli_saddr);']]
restartcode
['xc_crash_signal_handler', 12076, 14056, 14056, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14060
funcline addr: 14064
funcline addr: 14068
funcline addr: 14072
funcline addr: 14076
['xc_crash_signal_handler', 12076, 14056, 14076, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14076, 14076, ['                                   i, pc);']]
code
funcline addr: 14080
['xc_crash_signal_handler', 12076, 14076, 14080, ['                                   i, pc);']]
restartcode
['xc_crash_signal_handler', 12076, 14080, 14080, ['            len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14084
funcline addr: 14088
funcline addr: 14092
funcline addr: 14096
funcline addr: 14100
funcline addr: 14104
funcline addr: 14108
funcline addr: 14112
funcline addr: 14116
['xc_crash_signal_handler', 12076, 14080, 14116, ['            len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14116, 14116, ['                len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14120
funcline addr: 14124
funcline addr: 14128
funcline addr: 14132
funcline addr: 14136
funcline addr: 14140
funcline addr: 14144
funcline addr: 14148
['xc_crash_signal_handler', 12076, 14116, 14148, ['                len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14148, 14148, ['                    len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14152
funcline addr: 14156
funcline addr: 14160
funcline addr: 14164
funcline addr: 14168
funcline addr: 14172
funcline addr: 14176
['xc_crash_signal_handler', 12076, 14148, 14176, ['                    len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14176, 14176, ['                }']]
code
['xc_crash_signal_handler', 12076, 14176, 14176, ['            }']]
code
['xc_crash_signal_handler', 12076, 14176, 14176, ['        }']]
code
['xc_crash_signal_handler', 12076, 14176, 14176, ['']]
code
['xc_crash_signal_handler', 12076, 14176, 14176, ['        //truncated?']]
code
['xc_crash_signal_handler', 12076, 14176, 14176, ['        if(len >= buf_len - buf_used)']]
code
funcline addr: 14180
funcline addr: 14184
funcline addr: 14188
['xc_crash_signal_handler', 12076, 14176, 14188, ['        if(len >= buf_len - buf_used)']]
restartcode
['xc_crash_signal_handler', 12076, 14188, 14188, ['        {']]
code
['xc_crash_signal_handler', 12076, 14188, 14188, ["            buf[buf_len - 2] = '\\n';"]]
code
funcline addr: 14192
['xc_crash_signal_handler', 12076, 14188, 14192, ["            buf[buf_len - 2] = '\\n';"]]
restartcode
['xc_crash_signal_handler', 12076, 14192, 14192, ["            buf[buf_len - 1] = '\\0';"]]
code
['xc_crash_signal_handler', 12076, 14192, 14192, ['            len = buf_len - buf_used - 1;']]
code
funcline addr: 14196
['xc_crash_signal_handler', 12076, 14192, 14196, ['            len = buf_len - buf_used - 1;']]
restartcode
['xc_crash_signal_handler', 12076, 14196, 14196, ["            buf[buf_len - 2] = '\\n';"]]
code
funcline addr: 14200
funcline addr: 14204
['xc_crash_signal_handler', 12076, 14196, 14204, ["            buf[buf_len - 2] = '\\n';"]]
restartcode
['xc_crash_signal_handler', 12076, 14204, 14204, ["            buf[buf_len - 1] = '\\0';"]]
code
funcline addr: 14208
['xc_crash_signal_handler', 12076, 14204, 14208, ["            buf[buf_len - 1] = '\\0';"]]
restartcode
['xc_crash_signal_handler', 12076, 14208, 14208, ['        }']]
code
['xc_crash_signal_handler', 12076, 14208, 14208, ['']]
code
['xc_crash_signal_handler', 12076, 14208, 14208, ['        //check remaining space length in the buffer']]
code
['xc_crash_signal_handler', 12076, 14208, 14208, ['        buf_used += len;']]
code
funcline addr: 14212
['xc_crash_signal_handler', 12076, 14208, 14212, ['        buf_used += len;']]
restartcode
['xc_crash_signal_handler', 12076, 14212, 14212, ['        if(buf_len - buf_used < 20) break;']]
code
funcline addr: 14216
funcline addr: 14220
funcline addr: 14224
['xc_crash_signal_handler', 12076, 14212, 14224, ['        if(buf_len - buf_used < 20) break;']]
restartcode
['xc_crash_signal_handler', 12076, 14224, 14224, ['']]
code
['xc_crash_signal_handler', 12076, 14224, 14224, ['        i++;']]
code
['xc_crash_signal_handler', 12076, 14224, 14224, ['        ']]
code
['xc_crash_signal_handler', 12076, 14224, 14224, ['    } while(unw_step(cursor) > 0 && i < MAX_FRAMES);']]
code
funcline addr: 14228
funcline addr: 14232
funcline addr: 14236
['xc_crash_signal_handler', 12076, 14224, 14236, ['    } while(unw_step(cursor) > 0 && i < MAX_FRAMES);']]
restartcode
['xc_crash_signal_handler', 12076, 14236, 14236, ['        i++;']]
code
funcline addr: 14240
['xc_crash_signal_handler', 12076, 14236, 14240, ['        i++;']]
restartcode
['xc_crash_signal_handler', 12076, 14240, 14240, ['    } while(unw_step(cursor) > 0 && i < MAX_FRAMES);']]
code
funcline addr: 14244
funcline addr: 14248
funcline addr: 14252
funcline addr: 14256
funcline addr: 14260
funcline addr: 14264
['xc_crash_signal_handler', 12076, 14240, 14264, ['    } while(unw_step(cursor) > 0 && i < MAX_FRAMES);']]
restartcode
['xc_crash_signal_handler', 12076, 14264, 14264, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
code
funcline addr: 14268
funcline addr: 14272
funcline addr: 14276
funcline addr: 14280
funcline addr: 14284
funcline addr: 14288
['xc_crash_signal_handler', 12076, 14264, 14288, ['                        len = xcc_fmt_snprintf(buf + buf_used, buf_len - buf_used,']]
restartcode
['xc_crash_signal_handler', 12076, 14288, 14288, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"fork failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 14292
funcline addr: 14296
funcline addr: 14300
funcline addr: 14304
funcline addr: 14308
['xc_crash_signal_handler', 12076, 14288, 14308, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"fork failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_signal_handler', 12076, 14308, 14308, ['    int wait_r = XCC_UTIL_TEMP_FAILURE_RETRY(waitpid(dumper_pid, &status, __WALL));']]
code
funcline addr: 14312
['xc_crash_signal_handler', 12076, 14308, 14312, ['    int wait_r = XCC_UTIL_TEMP_FAILURE_RETRY(waitpid(dumper_pid, &status, __WALL));']]
restartcode
['xc_crash_signal_handler', 12076, 14312, 14312, ['    if(xc_crash_log_from_placeholder)']]
code
funcline addr: 14316
funcline addr: 14320
funcline addr: 14324
['xc_crash_signal_handler', 12076, 14312, 14324, ['    if(xc_crash_log_from_placeholder)']]
restartcode
['xc_crash_signal_handler', 12076, 14324, 14324, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
code
funcline addr: 14328
['xc_crash_signal_handler', 12076, 14324, 14328, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 14328, 14328, ['    uint8_t buf[1024];']]
code
['xc_crash_signal_handler', 12076, 14328, 14328, ['    ssize_t readed, n;']]
code
['xc_crash_signal_handler', 12076, 14328, 14328, ['    off_t   offset = 0;']]
code
['xc_crash_signal_handler', 12076, 14328, 14328, ['']]
code
['xc_crash_signal_handler', 12076, 14328, 14328, ['    //placeholder file']]
code
['xc_crash_signal_handler', 12076, 14328, 14328, ['    if(lseek(fd, 0, SEEK_SET) < 0) goto err;']]
code
funcline addr: 14332
funcline addr: 14336
funcline addr: 14340
funcline addr: 14344
funcline addr: 14348
funcline addr: 14352
funcline addr: 14356
['xc_crash_signal_handler', 12076, 14328, 14356, ['    if(lseek(fd, 0, SEEK_SET) < 0) goto err;']]
restartcode
['xc_crash_signal_handler', 12076, 14356, 14356, ['    while(1)']]
code
funcline addr: 14360
funcline addr: 14364
funcline addr: 14368
funcline addr: 14372
['xc_crash_signal_handler', 12076, 14356, 14372, ['    while(1)']]
restartcode
['xc_crash_signal_handler', 12076, 14372, 14372, ['    {']]
code
['xc_crash_signal_handler', 12076, 14372, 14372, ['        readed = XCC_UTIL_TEMP_FAILURE_RETRY(read(fd, buf, sizeof(buf)));']]
code
funcline addr: 14376
funcline addr: 14380
funcline addr: 14384
funcline addr: 14388
funcline addr: 14392
funcline addr: 14396
funcline addr: 14400
['xc_crash_signal_handler', 12076, 14372, 14400, ['        readed = XCC_UTIL_TEMP_FAILURE_RETRY(read(fd, buf, sizeof(buf)));']]
restartcode
['xc_crash_signal_handler', 12076, 14400, 14400, ['        if(readed < 0)']]
code
funcline addr: 14404
funcline addr: 14408
['xc_crash_signal_handler', 12076, 14400, 14408, ['        if(readed < 0)']]
restartcode
['xc_crash_signal_handler', 12076, 14408, 14408, ['        {']]
code
['xc_crash_signal_handler', 12076, 14408, 14408, ['            goto err;']]
code
['xc_crash_signal_handler', 12076, 14408, 14408, ['        }']]
code
['xc_crash_signal_handler', 12076, 14408, 14408, ['        else if(0 == readed)']]
code
funcline addr: 14412
funcline addr: 14416
['xc_crash_signal_handler', 12076, 14408, 14416, ['        else if(0 == readed)']]
restartcode
['xc_crash_signal_handler', 12076, 14416, 14416, ['            if(lseek(fd, 0, SEEK_END) < 0) goto err;']]
code
['xc_crash_signal_handler', 12076, 14416, 14416, ['            return fd;']]
code
['xc_crash_signal_handler', 12076, 14416, 14416, ['        }']]
code
['xc_crash_signal_handler', 12076, 14416, 14416, ['        else']]
code
['xc_crash_signal_handler', 12076, 14416, 14416, ['        {']]
code
['xc_crash_signal_handler', 12076, 14416, 14416, ['            for(n = readed; n > 0; n--)']]
code
funcline addr: 14420
funcline addr: 14424
['xc_crash_signal_handler', 12076, 14416, 14424, ['            for(n = readed; n > 0; n--)']]
restartcode
['xc_crash_signal_handler', 12076, 14424, 14424, ['            {']]
code
['xc_crash_signal_handler', 12076, 14424, 14424, ['                if(0 != buf[n - 1]) break;']]
code
funcline addr: 14428
funcline addr: 14432
['xc_crash_signal_handler', 12076, 14424, 14432, ['                if(0 != buf[n - 1]) break;']]
restartcode
['xc_crash_signal_handler', 12076, 14432, 14432, ['            }']]
code
['xc_crash_signal_handler', 12076, 14432, 14432, ['            offset += (off_t)n;']]
code
['xc_crash_signal_handler', 12076, 14432, 14432, ['            if(n < readed)']]
code
funcline addr: 14436
funcline addr: 14440
funcline addr: 14444
['xc_crash_signal_handler', 12076, 14432, 14444, ['            if(n < readed)']]
restartcode
['xc_crash_signal_handler', 12076, 14444, 14444, ['            {']]
code
['xc_crash_signal_handler', 12076, 14444, 14444, ['                if(lseek(fd, offset, SEEK_SET) < 0) goto err;']]
code
funcline addr: 14448
funcline addr: 14452
funcline addr: 14456
funcline addr: 14460
funcline addr: 14464
funcline addr: 14468
funcline addr: 14472
funcline addr: 14476
funcline addr: 14480
funcline addr: 14484
['xc_crash_signal_handler', 12076, 14444, 14484, ['                if(lseek(fd, offset, SEEK_SET) < 0) goto err;']]
restartcode
['xc_crash_signal_handler', 12076, 14484, 14484, ['        if((si->si_code & 0xff) == SIGTRAP)']]
code
funcline addr: 14488
funcline addr: 14492
funcline addr: 14496
['xc_crash_signal_handler', 12076, 14484, 14496, ['        if((si->si_code & 0xff) == SIGTRAP)']]
restartcode
['xc_crash_signal_handler', 12076, 14496, 14496, ['            switch((si->si_code >> 8) & 0xff)']]
code
funcline addr: 14500
funcline addr: 14504
funcline addr: 14508
funcline addr: 14512
funcline addr: 14516
funcline addr: 14520
funcline addr: 14524
funcline addr: 14528
funcline addr: 14532
funcline addr: 14536
funcline addr: 14540
funcline addr: 14544
funcline addr: 14548
funcline addr: 14552
funcline addr: 14556
funcline addr: 14560
funcline addr: 14564
funcline addr: 14568
funcline addr: 14572
funcline addr: 14576
funcline addr: 14580
funcline addr: 14584
funcline addr: 14588
funcline addr: 14592
funcline addr: 14596
funcline addr: 14600
funcline addr: 14604
funcline addr: 14608
['xc_crash_signal_handler', 12076, 14496, 14608, ['            switch((si->si_code >> 8) & 0xff)']]
restartcode
['xc_crash_signal_handler', 12076, 14608, 14608, ['    ']]
code
['xc_crash_signal_handler', 12076, 14608, 14608, [' end:']]
code
['xc_crash_signal_handler', 12076, 14608, 14608, ['    if(NULL != cursor) free(cursor);']]
code
funcline addr: 14612
funcline addr: 14616
funcline addr: 14620
['xc_crash_signal_handler', 12076, 14608, 14620, ['    if(NULL != cursor) free(cursor);']]
restartcode
['xc_crash_signal_handler', 12076, 14620, 14620, ['    if(NULL != context) free(context);']]
code
funcline addr: 14624
funcline addr: 14628
['xc_crash_signal_handler', 12076, 14620, 14628, ['    if(NULL != context) free(context);']]
restartcode
['xc_crash_signal_handler', 12076, 14628, 14628, ['    {']]
code
['xc_crash_signal_handler', 12076, 14628, 14628, ['        if(0 == (buf_used = xcc_unwind_libunwind_record(uc, buf, buf_len))) goto bottom;']]
code
funcline addr: 14632
funcline addr: 14636
funcline addr: 14640
funcline addr: 14644
['xc_crash_signal_handler', 12076, 14628, 14644, ['        if(0 == (buf_used = xcc_unwind_libunwind_record(uc, buf, buf_len))) goto bottom;']]
restartcode
['xc_crash_signal_handler', 12076, 14644, 14644, ['        *p++ = (char)c;']]
code
funcline addr: 14648
['xc_crash_signal_handler', 12076, 14644, 14648, ['        *p++ = (char)c;']]
restartcode
['xc_crash_signal_handler', 12076, 14648, 14648, ['    while(n--)']]
code
funcline addr: 14652
funcline addr: 14656
['xc_crash_signal_handler', 12076, 14648, 14656, ['    while(n--)']]
restartcode
['xc_crash_signal_handler', 12076, 14656, 14656, ['size_t xcc_unwind_clang_record(ucontext_t *uc, char *buf, size_t buf_len)']]
code
['xc_crash_signal_handler', 12076, 14656, 14656, ['{']]
code
['xc_crash_signal_handler', 12076, 14656, 14656, ['    xcc_unwind_clang_t self;']]
code
['xc_crash_signal_handler', 12076, 14656, 14656, ['']]
code
['xc_crash_signal_handler', 12076, 14656, 14656, ['    xcc_libc_support_memset(&self, 0, sizeof(xcc_unwind_clang_t));']]
code
['xc_crash_signal_handler', 12076, 14656, 14656, ['    self.uc      = uc;']]
code
funcline addr: 14660
['xc_crash_signal_handler', 12076, 14656, 14660, ['    self.uc      = uc;']]
restartcode
['xc_crash_signal_handler', 12076, 14660, 14660, ['    self.buf     = buf;']]
code
['xc_crash_signal_handler', 12076, 14660, 14660, ['    self.buf_len = buf_len;']]
code
funcline addr: 14664
['xc_crash_signal_handler', 12076, 14660, 14664, ['    self.buf_len = buf_len;']]
restartcode
['xc_crash_signal_handler', 12076, 14664, 14664, ['    //leads to access unmapped memory, which will crash the process immediately.']]
code
['xc_crash_signal_handler', 12076, 14664, 14664, ['#if defined(__arm__)']]
code
['xc_crash_signal_handler', 12076, 14664, 14664, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.arm_pc;']]
code
['xc_crash_signal_handler', 12076, 14664, 14664, ['    self.sig_lr = (uintptr_t)uc->uc_mcontext.arm_lr;']]
code
['xc_crash_signal_handler', 12076, 14664, 14664, ['#elif defined(__aarch64__)']]
code
['xc_crash_signal_handler', 12076, 14664, 14664, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.pc;']]
code
funcline addr: 14668
['xc_crash_signal_handler', 12076, 14664, 14668, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.pc;']]
restartcode
['xc_crash_signal_handler', 12076, 14668, 14668, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.gregs[REG_EIP];']]
code
['xc_crash_signal_handler', 12076, 14668, 14668, ['#elif defined(__x86_64__)']]
code
['xc_crash_signal_handler', 12076, 14668, 14668, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.gregs[REG_RIP];']]
code
['xc_crash_signal_handler', 12076, 14668, 14668, ['#endif']]
code
['xc_crash_signal_handler', 12076, 14668, 14668, ['    ']]
code
['xc_crash_signal_handler', 12076, 14668, 14668, ['    _Unwind_Backtrace(xcc_unwind_clang_callback, &self);']]
code
funcline addr: 14672
funcline addr: 14676
funcline addr: 14680
['xc_crash_signal_handler', 12076, 14668, 14680, ['    _Unwind_Backtrace(xcc_unwind_clang_callback, &self);']]
restartcode
['xc_crash_signal_handler', 12076, 14680, 14680, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.pc;']]
code
funcline addr: 14684
['xc_crash_signal_handler', 12076, 14680, 14684, ['    self.sig_pc = (uintptr_t)uc->uc_mcontext.pc;']]
restartcode
['xc_crash_signal_handler', 12076, 14684, 14684, ['    self.sig_lr = (uintptr_t)uc->uc_mcontext.regs[30];']]
code
funcline addr: 14688
funcline addr: 14692
['xc_crash_signal_handler', 12076, 14684, 14692, ['    self.sig_lr = (uintptr_t)uc->uc_mcontext.regs[30];']]
restartcode
['xc_crash_signal_handler', 12076, 14692, 14692, ['    _Unwind_Backtrace(xcc_unwind_clang_callback, &self);']]
code
funcline addr: 14696
['xc_crash_signal_handler', 12076, 14692, 14696, ['    _Unwind_Backtrace(xcc_unwind_clang_callback, &self);']]
restartcode
['xc_crash_signal_handler', 12076, 14696, 14696, ['']]
code
['xc_crash_signal_handler', 12076, 14696, 14696, ['    if(0 == self.buf_used)']]
code
funcline addr: 14700
funcline addr: 14704
['xc_crash_signal_handler', 12076, 14696, 14704, ['    if(0 == self.buf_used)']]
restartcode
['xc_crash_signal_handler', 12076, 14704, 14704, ['        xcc_unwind_clang_record_frame(&self, self.sig_pc);']]
code
funcline addr: 14708
funcline addr: 14712
funcline addr: 14716
['xc_crash_signal_handler', 12076, 14704, 14716, ['        xcc_unwind_clang_record_frame(&self, self.sig_pc);']]
restartcode
['xc_crash_signal_handler', 12076, 14716, 14716, ['    ']]
code
['xc_crash_signal_handler', 12076, 14716, 14716, ['    return self.buf_used;']]
code
funcline addr: 14720
funcline addr: 14724
funcline addr: 14728
['xc_crash_signal_handler', 12076, 14716, 14728, ['    return self.buf_used;']]
restartcode
['xc_crash_signal_handler', 12076, 14728, 14728, ['    if(used >= len - 1)']]
code
funcline addr: 14732
funcline addr: 14736
funcline addr: 14740
funcline addr: 14744
funcline addr: 14748
funcline addr: 14752
funcline addr: 14756
funcline addr: 14760
['xc_crash_signal_handler', 12076, 14728, 14760, ['    if(used >= len - 1)']]
restartcode
['xc_crash_signal_handler', 12076, 14760, 14760, ["        buf[len - 3] = '\\n';"]]
code
funcline addr: 14764
['xc_crash_signal_handler', 12076, 14760, 14764, ["        buf[len - 3] = '\\n';"]]
restartcode
['xc_crash_signal_handler', 12076, 14764, 14764, ["        buf[len - 2] = '\\0';"]]
code
funcline addr: 14768
funcline addr: 14772
['xc_crash_signal_handler', 12076, 14764, 14772, ["        buf[len - 2] = '\\0';"]]
restartcode
['xc_crash_signal_handler', 12076, 14772, 14772, ['    used += xcc_fmt_snprintf(buf + used, len - used, "\\n");']]
code
funcline addr: 14776
funcline addr: 14780
funcline addr: 14784
funcline addr: 14788
funcline addr: 14792
funcline addr: 14796
['xc_crash_signal_handler', 12076, 14772, 14796, ['    used += xcc_fmt_snprintf(buf + used, len - used, "\\n");']]
restartcode
['xc_crash_signal_handler', 12076, 14796, 14796, ['                                  XC_CRASH_EMERGENCY_BUF_LEN);']]
code
['xc_crash_signal_handler', 12076, 14796, 14796, ['        ']]
code
['xc_crash_signal_handler', 12076, 14796, 14796, ['        if(xc_crash_log_fd >= 0)']]
code
funcline addr: 14800
funcline addr: 14804
funcline addr: 14808
['xc_crash_signal_handler', 12076, 14796, 14808, ['        if(xc_crash_log_fd >= 0)']]
restartcode
['xc_crash_signal_handler', 12076, 14808, 14808, ['        {']]
code
['xc_crash_signal_handler', 12076, 14808, 14808, ['            if(0 != xc_fallback_record(xc_crash_log_fd,']]
code
['xc_crash_signal_handler', 12076, 14808, 14808, ['                                       xc_crash_emergency,']]
code
funcline addr: 14812
['xc_crash_signal_handler', 12076, 14808, 14812, ['                                       xc_crash_emergency,']]
restartcode
['xc_crash_signal_handler', 12076, 14812, 14812, ['                                       xc_crash_spot.logcat_system_lines,']]
code
funcline addr: 14816
['xc_crash_signal_handler', 12076, 14812, 14816, ['                                       xc_crash_spot.logcat_system_lines,']]
restartcode
['xc_crash_signal_handler', 12076, 14816, 14816, ['                                       xc_crash_emergency,']]
code
funcline addr: 14820
['xc_crash_signal_handler', 12076, 14816, 14820, ['                                       xc_crash_emergency,']]
restartcode
['xc_crash_signal_handler', 12076, 14820, 14820, ['                                       xc_crash_spot.logcat_system_lines,']]
code
funcline addr: 14824
funcline addr: 14828
['xc_crash_signal_handler', 12076, 14820, 14828, ['                                       xc_crash_spot.logcat_system_lines,']]
restartcode
['xc_crash_signal_handler', 12076, 14828, 14828, ['                                       xc_crash_spot.logcat_events_lines,']]
code
['xc_crash_signal_handler', 12076, 14828, 14828, ['                                       xc_crash_spot.logcat_main_lines,']]
code
funcline addr: 14832
['xc_crash_signal_handler', 12076, 14828, 14832, ['                                       xc_crash_spot.logcat_main_lines,']]
restartcode
['xc_crash_signal_handler', 12076, 14832, 14832, ['                                       xc_crash_spot.dump_fds,']]
code
funcline addr: 14836
['xc_crash_signal_handler', 12076, 14832, 14836, ['                                       xc_crash_spot.dump_fds,']]
restartcode
['xc_crash_signal_handler', 12076, 14836, 14836, ['{']]
code
['xc_crash_signal_handler', 12076, 14836, 14836, ['    int r;']]
code
['xc_crash_signal_handler', 12076, 14836, 14836, ['']]
code
['xc_crash_signal_handler', 12076, 14836, 14836, ['    if(log_fd < 0) return XCC_ERRNO_INVAL;']]
code
['xc_crash_signal_handler', 12076, 14836, 14836, ['    ']]
code
['xc_crash_signal_handler', 12076, 14836, 14836, ['    if(0 != (r = xcc_util_write_str(log_fd, emergency))) return r;']]
code
funcline addr: 14840
funcline addr: 14844
funcline addr: 14848
funcline addr: 14852
funcline addr: 14856
['xc_crash_signal_handler', 12076, 14836, 14856, ['    if(0 != (r = xcc_util_write_str(log_fd, emergency))) return r;']]
restartcode
['xc_crash_signal_handler', 12076, 14856, 14856, ['    ']]
code
['xc_crash_signal_handler', 12076, 14856, 14856, ["    //If we wrote the emergency info successfully, we don't need to return it from callback again."]]
code
['xc_crash_signal_handler', 12076, 14856, 14856, ["    emergency[0] = '\\0';"]]
code
funcline addr: 14860
funcline addr: 14864
['xc_crash_signal_handler', 12076, 14856, 14864, ["    emergency[0] = '\\0';"]]
restartcode
['xc_crash_signal_handler', 12076, 14864, 14864, ['    ']]
code
['xc_crash_signal_handler', 12076, 14864, 14864, ['    if(0 != (r = xcc_util_record_logcat(log_fd, xc_common_process_id, xc_common_api_level, logcat_system_lines, logcat_events_lines, logcat_main_lines))) return r;']]
code
funcline addr: 14868
funcline addr: 14872
funcline addr: 14876
funcline addr: 14880
funcline addr: 14884
funcline addr: 14888
funcline addr: 14892
['xc_crash_signal_handler', 12076, 14864, 14892, ['    if(0 != (r = xcc_util_record_logcat(log_fd, xc_common_process_id, xc_common_api_level, logcat_system_lines, logcat_events_lines, logcat_main_lines))) return r;']]
restartcode
['xc_crash_signal_handler', 12076, 14892, 14892, ['    if(dump_fds)']]
code
funcline addr: 14896
['xc_crash_signal_handler', 12076, 14892, 14896, ['    if(dump_fds)']]
restartcode
['xc_crash_signal_handler', 12076, 14896, 14896, ['        if(0 != (r = xcc_util_record_fds(log_fd, xc_common_process_id))) return r;']]
code
funcline addr: 14900
funcline addr: 14904
funcline addr: 14908
funcline addr: 14912
funcline addr: 14916
['xc_crash_signal_handler', 12076, 14896, 14916, ['        if(0 != (r = xcc_util_record_fds(log_fd, xc_common_process_id))) return r;']]
restartcode
['xc_crash_signal_handler', 12076, 14916, 14916, ['    if(dump_network_info)']]
code
funcline addr: 14920
funcline addr: 14924
['xc_crash_signal_handler', 12076, 14916, 14924, ['    if(dump_network_info)']]
restartcode
['xc_crash_signal_handler', 12076, 14924, 14924, ['        if(0 != (r = xcc_util_record_network_info(log_fd, xc_common_process_id, xc_common_api_level))) return r;']]
code
funcline addr: 14928
funcline addr: 14932
funcline addr: 14936
['xc_crash_signal_handler', 12076, 14924, 14936, ['        if(0 != (r = xcc_util_record_network_info(log_fd, xc_common_process_id, xc_common_api_level))) return r;']]
restartcode
['xc_crash_signal_handler', 12076, 14936, 14936, ['    if(0 != (r = xcc_meminfo_record(log_fd, xc_common_process_id))) return r;']]
code
funcline addr: 14940
funcline addr: 14944
funcline addr: 14948
funcline addr: 14952
funcline addr: 14956
funcline addr: 14960
funcline addr: 14964
funcline addr: 14968
funcline addr: 14972
funcline addr: 14976
funcline addr: 14980
funcline addr: 14984
funcline addr: 14988
funcline addr: 14992
funcline addr: 14996
funcline addr: 15000
funcline addr: 15004
funcline addr: 15008
funcline addr: 15012
funcline addr: 15016
funcline addr: 15020
funcline addr: 15024
funcline addr: 15028
funcline addr: 15032
funcline addr: 15036
funcline addr: 15040
funcline addr: 15044
funcline addr: 15048
funcline addr: 15052
funcline addr: 15056
funcline addr: 15060
funcline addr: 15064
['xc_crash_signal_handler', 12076, 14936, 15064, ['    if(0 != (r = xcc_meminfo_record(log_fd, xc_common_process_id))) return r;']]
restartcode
['xc_crash_signal_handler', 12076, 15064, 15064, ['            if(lseek(fd, 0, SEEK_END) < 0) goto err;']]
code
funcline addr: 15068
funcline addr: 15072
funcline addr: 15076
funcline addr: 15080
funcline addr: 15084
funcline addr: 15088
['xc_crash_signal_handler', 12076, 15064, 15088, ['            if(lseek(fd, 0, SEEK_END) < 0) goto err;']]
restartcode
['xc_crash_signal_handler', 12076, 15088, 15088, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
code
funcline addr: 15092
funcline addr: 15096
['xc_crash_signal_handler', 12076, 15088, 15096, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 15096, 15096, ['    if(-1 == wait_r)']]
code
funcline addr: 15100
['xc_crash_signal_handler', 12076, 15096, 15100, ['    if(-1 == wait_r)']]
restartcode
['xc_crash_signal_handler', 12076, 15100, 15100, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"waitpid failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 15104
funcline addr: 15108
funcline addr: 15112
funcline addr: 15116
funcline addr: 15120
['xc_crash_signal_handler', 12076, 15100, 15120, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"waitpid failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_signal_handler', 12076, 15120, 15120, ['            }']]
code
['xc_crash_signal_handler', 12076, 15120, 15120, ['        }']]
code
['xc_crash_signal_handler', 12076, 15120, 15120, ['    }']]
code
['xc_crash_signal_handler', 12076, 15120, 15120, ['']]
code
['xc_crash_signal_handler', 12076, 15120, 15120, [' err:']]
code
['xc_crash_signal_handler', 12076, 15120, 15120, ['    close(fd);']]
code
funcline addr: 15124
funcline addr: 15128
funcline addr: 15132
funcline addr: 15136
funcline addr: 15140
['xc_crash_signal_handler', 12076, 15120, 15140, ['    close(fd);']]
restartcode
['xc_crash_signal_handler', 12076, 15140, 15140, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
code
funcline addr: 15144
funcline addr: 15148
['xc_crash_signal_handler', 12076, 15140, 15148, ['        if((xc_crash_log_fd = xc_common_seek_to_content_end(xc_crash_log_fd)) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 15148, 15148, ['    if(!(WIFEXITED(status)) || 0 != WEXITSTATUS(status))']]
code
funcline addr: 15152
funcline addr: 15156
funcline addr: 15160
funcline addr: 15164
funcline addr: 15168
['xc_crash_signal_handler', 12076, 15148, 15168, ['    if(!(WIFEXITED(status)) || 0 != WEXITSTATUS(status))']]
restartcode
['xc_crash_signal_handler', 12076, 15168, 15168, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated normally with non-zero exit status(%d), dumper=%s\\n\\n", WEXITSTATUS(status), xc_crash_dumper_pathname);']]
code
funcline addr: 15172
['xc_crash_signal_handler', 12076, 15168, 15172, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated normally with non-zero exit status(%d), dumper=%s\\n\\n", WEXITSTATUS(status), xc_crash_dumper_pathname);']]
restartcode
['xc_crash_signal_handler', 12076, 15172, 15172, ['        if(WIFEXITED(status) && 0 != WEXITSTATUS(status))']]
code
funcline addr: 15176
funcline addr: 15180
['xc_crash_signal_handler', 12076, 15172, 15180, ['        if(WIFEXITED(status) && 0 != WEXITSTATUS(status))']]
restartcode
['xc_crash_signal_handler', 12076, 15180, 15180, ['        else if(WIFSIGNALED(status))']]
code
funcline addr: 15184
funcline addr: 15188
funcline addr: 15192
['xc_crash_signal_handler', 12076, 15180, 15192, ['        else if(WIFSIGNALED(status))']]
restartcode
['xc_crash_signal_handler', 12076, 15192, 15192, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated by a signal(%d)\\n\\n", WTERMSIG(status));']]
code
funcline addr: 15196
funcline addr: 15200
funcline addr: 15204
funcline addr: 15208
funcline addr: 15212
funcline addr: 15216
['xc_crash_signal_handler', 12076, 15192, 15216, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated by a signal(%d)\\n\\n", WTERMSIG(status));']]
restartcode
['xc_crash_signal_handler', 12076, 15216, 15216, ['    if(restore_orig_ptracer) prctl(PR_SET_PTRACER, 0);']]
code
funcline addr: 15220
funcline addr: 15224
funcline addr: 15228
funcline addr: 15232
funcline addr: 15236
['xc_crash_signal_handler', 12076, 15216, 15236, ['    if(restore_orig_ptracer) prctl(PR_SET_PTRACER, 0);']]
restartcode
['xc_crash_signal_handler', 12076, 15236, 15236, ['    if(!dump_ok)']]
code
funcline addr: 15240
['xc_crash_signal_handler', 12076, 15236, 15240, ['    if(!dump_ok)']]
restartcode
['xc_crash_signal_handler', 12076, 15240, 15240, ['                xc_crash_log_fd = -1;']]
code
['xc_crash_signal_handler', 12076, 15240, 15240, ['            }']]
code
['xc_crash_signal_handler', 12076, 15240, 15240, ['        }']]
code
['xc_crash_signal_handler', 12076, 15240, 15240, ['    }']]
code
['xc_crash_signal_handler', 12076, 15240, 15240, ['']]
code
['xc_crash_signal_handler', 12076, 15240, 15240, ['    if(xc_crash_log_fd >= 0)']]
code
funcline addr: 15244
funcline addr: 15248
['xc_crash_signal_handler', 12076, 15240, 15248, ['    if(xc_crash_log_fd >= 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15248, 15248, ['    if(JNI_OK == (*xc_common_vm)->GetEnv(xc_common_vm, (void**)&env, XC_JNI_VERSION))']]
code
funcline addr: 15252
funcline addr: 15256
funcline addr: 15260
['xc_crash_signal_handler', 12076, 15248, 15260, ['    if(JNI_OK == (*xc_common_vm)->GetEnv(xc_common_vm, (void**)&env, XC_JNI_VERSION))']]
restartcode
['xc_crash_signal_handler', 12076, 15260, 15260, ['    JNIEnv                           *env     = NULL;']]
code
funcline addr: 15264
['xc_crash_signal_handler', 12076, 15260, 15264, ['    JNIEnv                           *env     = NULL;']]
restartcode
['xc_crash_signal_handler', 12076, 15264, 15264, ['    xc_dl_t                          *libcpp  = NULL;']]
code
funcline addr: 15268
['xc_crash_signal_handler', 12076, 15264, 15268, ['    xc_dl_t                          *libcpp  = NULL;']]
restartcode
['xc_crash_signal_handler', 12076, 15268, 15268, ['    if(JNI_OK == (*xc_common_vm)->GetEnv(xc_common_vm, (void**)&env, XC_JNI_VERSION))']]
code
funcline addr: 15272
funcline addr: 15276
funcline addr: 15280
funcline addr: 15284
funcline addr: 15288
funcline addr: 15292
funcline addr: 15296
['xc_crash_signal_handler', 12076, 15268, 15296, ['    if(JNI_OK == (*xc_common_vm)->GetEnv(xc_common_vm, (void**)&env, XC_JNI_VERSION))']]
restartcode
['xc_crash_signal_handler', 12076, 15296, 15296, ['        XC_JNI_CHECK_PENDING_EXCEPTION(end);']]
code
funcline addr: 15300
funcline addr: 15304
funcline addr: 15308
funcline addr: 15312
funcline addr: 15316
funcline addr: 15320
funcline addr: 15324
funcline addr: 15328
['xc_crash_signal_handler', 12076, 15296, 15328, ['        XC_JNI_CHECK_PENDING_EXCEPTION(end);']]
restartcode
['xc_crash_signal_handler', 12076, 15328, 15328, ['    if(NULL != libcpp) xc_dl_destroy(&libcpp);']]
code
funcline addr: 15332
funcline addr: 15336
funcline addr: 15340
funcline addr: 15344
['xc_crash_signal_handler', 12076, 15328, 15344, ['    if(NULL != libcpp) xc_dl_destroy(&libcpp);']]
restartcode
['xc_crash_signal_handler', 12076, 15344, 15344, ['    if(NULL != libart) xc_dl_destroy(&libart);']]
code
funcline addr: 15348
funcline addr: 15352
funcline addr: 15356
funcline addr: 15360
funcline addr: 15364
['xc_crash_signal_handler', 12076, 15344, 15364, ['    if(NULL != libart) xc_dl_destroy(&libart);']]
restartcode
['xc_crash_signal_handler', 12076, 15364, 15364, ['    xc_crash_dump_java_stacktrace = 1;']]
code
funcline addr: 15368
funcline addr: 15372
['xc_crash_signal_handler', 12076, 15364, 15372, ['    xc_crash_dump_java_stacktrace = 1;']]
restartcode
['xc_crash_signal_handler', 12076, 15372, 15372, ['    if(xc_common_api_level < 21) return;']]
code
funcline addr: 15376
funcline addr: 15380
['xc_crash_signal_handler', 12076, 15372, 15380, ['    if(xc_common_api_level < 21) return;']]
restartcode
['xc_crash_signal_handler', 12076, 15380, 15380, ['    xc_crash_dump_java_stacktrace = 1;']]
code
funcline addr: 15384
['xc_crash_signal_handler', 12076, 15380, 15384, ['    xc_crash_dump_java_stacktrace = 1;']]
restartcode
['xc_crash_signal_handler', 12076, 15384, 15384, ['    if(xc_common_api_level < 21) return;']]
code
funcline addr: 15388
funcline addr: 15392
funcline addr: 15396
funcline addr: 15400
funcline addr: 15404
funcline addr: 15408
['xc_crash_signal_handler', 12076, 15384, 15408, ['    if(xc_common_api_level < 21) return;']]
restartcode
['xc_crash_signal_handler', 12076, 15408, 15408, ['    if(xc_crash_cb_notifier < 0 || NULL == xc_common_cb_class || NULL == xc_crash_cb_method) return;']]
code
funcline addr: 15412
funcline addr: 15416
funcline addr: 15420
funcline addr: 15424
funcline addr: 15428
funcline addr: 15432
funcline addr: 15436
funcline addr: 15440
funcline addr: 15444
funcline addr: 15448
['xc_crash_signal_handler', 12076, 15408, 15448, ['    if(xc_crash_cb_notifier < 0 || NULL == xc_common_cb_class || NULL == xc_crash_cb_method) return;']]
restartcode
['xc_crash_signal_handler', 12076, 15448, 15448, ['    data = 1;']]
code
funcline addr: 15452
funcline addr: 15456
funcline addr: 15460
['xc_crash_signal_handler', 12076, 15448, 15460, ['    data = 1;']]
restartcode
['xc_crash_signal_handler', 12076, 15460, 15460, ['']]
code
['xc_crash_signal_handler', 12076, 15460, 15460, ['    if (!__bos_trivially_ge_no_overflow(bos, count)) {']]
code
['xc_crash_signal_handler', 12076, 15460, 15460, ['        return __write_chk(fd, buf, count, bos);']]
code
['xc_crash_signal_handler', 12076, 15460, 15460, ['    }']]
code
['xc_crash_signal_handler', 12076, 15460, 15460, ['#endif /* __ANDROID_API__ >= __ANDROID_API_N__ */']]
code
['xc_crash_signal_handler', 12076, 15460, 15460, ['    return __call_bypassing_fortify(write)(fd, buf, count);']]
code
funcline addr: 15464
funcline addr: 15468
funcline addr: 15472
['xc_crash_signal_handler', 12076, 15460, 15472, ['    return __call_bypassing_fortify(write)(fd, buf, count);']]
restartcode
['xc_crash_signal_handler', 12076, 15472, 15472, ['    if(sizeof(data) != XCC_UTIL_TEMP_FAILURE_RETRY(write(xc_crash_cb_notifier, &data, sizeof(data)))) return;']]
code
funcline addr: 15476
funcline addr: 15480
funcline addr: 15484
funcline addr: 15488
funcline addr: 15492
funcline addr: 15496
funcline addr: 15500
funcline addr: 15504
funcline addr: 15508
funcline addr: 15512
funcline addr: 15516
['xc_crash_signal_handler', 12076, 15472, 15516, ['    if(sizeof(data) != XCC_UTIL_TEMP_FAILURE_RETRY(write(xc_crash_cb_notifier, &data, sizeof(data)))) return;']]
restartcode
['xc_crash_signal_handler', 12076, 15516, 15516, ['    pthread_join(xc_crash_cb_thd, NULL);']]
code
funcline addr: 15520
funcline addr: 15524
funcline addr: 15528
funcline addr: 15532
['xc_crash_signal_handler', 12076, 15516, 15532, ['    pthread_join(xc_crash_cb_thd, NULL);']]
restartcode
['xc_crash_signal_handler', 12076, 15532, 15532, ['    return r;']]
code
['xc_crash_signal_handler', 12076, 15532, 15532, ['}']]
code
['xc_crash_signal_handler', 12076, 15532, 15532, ['']]
code
['xc_crash_signal_handler', 12076, 15532, 15532, ['int xcc_signal_crash_queue(siginfo_t* si)']]
code
['xc_crash_signal_handler', 12076, 15532, 15532, ['{']]
code
['xc_crash_signal_handler', 12076, 15532, 15532, ['    if(SIGABRT == si->si_signo || SI_FROMUSER(si))']]
code
funcline addr: 15536
funcline addr: 15540
funcline addr: 15544
funcline addr: 15548
funcline addr: 15552
funcline addr: 15556
['xc_crash_signal_handler', 12076, 15532, 15556, ['    if(SIGABRT == si->si_signo || SI_FROMUSER(si))']]
restartcode
['xc_crash_signal_handler', 12076, 15556, 15556, ['    {']]
code
['xc_crash_signal_handler', 12076, 15556, 15556, ['        if(0 != syscall(SYS_rt_tgsigqueueinfo, getpid(), gettid(), si->si_signo, si))']]
code
funcline addr: 15560
funcline addr: 15564
funcline addr: 15568
funcline addr: 15572
funcline addr: 15576
funcline addr: 15580
funcline addr: 15584
funcline addr: 15588
funcline addr: 15592
funcline addr: 15596
funcline addr: 15600
funcline addr: 15604
funcline addr: 15608
['xc_crash_signal_handler', 12076, 15556, 15608, ['        if(0 != syscall(SYS_rt_tgsigqueueinfo, getpid(), gettid(), si->si_signo, si))']]
restartcode
['xc_crash_signal_handler', 12076, 15608, 15608, ['    return;']]
code
['xc_crash_signal_handler', 12076, 15608, 15608, ['']]
code
['xc_crash_signal_handler', 12076, 15608, 15608, [' exit:']]
code
['xc_crash_signal_handler', 12076, 15608, 15608, ['    pthread_mutex_unlock(&xc_crash_mutex);']]
code
['xc_crash_signal_handler', 12076, 15608, 15608, ['    _exit(1);']]
code
['xc_crash_signal_handler', 12076, 15608, 15608, ['}']]
code
funcline addr: 15612
funcline addr: 15616
funcline addr: 15620
funcline addr: 15624
funcline addr: 15628
funcline addr: 15632
funcline addr: 15636
funcline addr: 15640
funcline addr: 15644
funcline addr: 15648
funcline addr: 15652
['xc_crash_signal_handler', 12076, 15608, 15652, ['}']]
restartcode
['xc_crash_signal_handler', 12076, 15652, 15652, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
code
funcline addr: 15656
funcline addr: 15660
funcline addr: 15664
funcline addr: 15668
funcline addr: 15672
['xc_crash_signal_handler', 12076, 15652, 15672, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15672, 15672, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
code
funcline addr: 15676
funcline addr: 15680
funcline addr: 15684
funcline addr: 15688
['xc_crash_signal_handler', 12076, 15672, 15688, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
restartcode
['xc_crash_signal_handler', 12076, 15688, 15688, ['    if(NULL == libcpp && NULL == (libcpp = xc_dl_create(XCC_UTIL_LIBCPP))) goto end;']]
code
funcline addr: 15692
funcline addr: 15696
funcline addr: 15700
funcline addr: 15704
funcline addr: 15708
funcline addr: 15712
funcline addr: 15716
['xc_crash_signal_handler', 12076, 15688, 15716, ['    if(NULL == libcpp && NULL == (libcpp = xc_dl_create(XCC_UTIL_LIBCPP))) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 15716, 15716, ['    if(NULL == (cerr = xc_dl_sym(libcpp, XCC_UTIL_LIBCPP_CERR))) goto end;']]
code
funcline addr: 15720
funcline addr: 15724
funcline addr: 15728
['xc_crash_signal_handler', 12076, 15716, 15728, ['    if(NULL == (cerr = xc_dl_sym(libcpp, XCC_UTIL_LIBCPP_CERR))) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 15728, 15728, ['    if(xc_common_api_level >= 30) ']]
code
funcline addr: 15732
funcline addr: 15736
['xc_crash_signal_handler', 12076, 15728, 15736, ['    if(xc_common_api_level >= 30) ']]
restartcode
['xc_crash_signal_handler', 12076, 15736, 15736, ['        libart = xc_dl_create(XCC_UTIL_LIBART_APEX_30);']]
code
funcline addr: 15740
funcline addr: 15744
funcline addr: 15748
['xc_crash_signal_handler', 12076, 15736, 15748, ['        libart = xc_dl_create(XCC_UTIL_LIBART_APEX_30);']]
restartcode
['xc_crash_signal_handler', 12076, 15748, 15748, ['        if(WIFEXITED(status) && 0 != WEXITSTATUS(status))']]
code
funcline addr: 15752
funcline addr: 15756
['xc_crash_signal_handler', 12076, 15748, 15756, ['        if(WIFEXITED(status) && 0 != WEXITSTATUS(status))']]
restartcode
['xc_crash_signal_handler', 12076, 15756, 15756, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated normally with non-zero exit status(%d), dumper=%s\\n\\n", WEXITSTATUS(status), xc_crash_dumper_pathname);']]
code
funcline addr: 15760
funcline addr: 15764
funcline addr: 15768
funcline addr: 15772
funcline addr: 15776
funcline addr: 15780
funcline addr: 15784
['xc_crash_signal_handler', 12076, 15756, 15784, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated normally with non-zero exit status(%d), dumper=%s\\n\\n", WEXITSTATUS(status), xc_crash_dumper_pathname);']]
restartcode
['xc_crash_signal_handler', 12076, 15784, 15784, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
code
funcline addr: 15788
['xc_crash_signal_handler', 12076, 15784, 15788, ['    if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15788, 15788, ['        if(xc_crash_prepared_fd >= 0)']]
code
funcline addr: 15792
funcline addr: 15796
funcline addr: 15800
['xc_crash_signal_handler', 12076, 15788, 15800, ['        if(xc_crash_prepared_fd >= 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15800, 15800, ['            close(xc_crash_prepared_fd);']]
code
funcline addr: 15804
funcline addr: 15808
['xc_crash_signal_handler', 12076, 15800, 15808, ['            close(xc_crash_prepared_fd);']]
restartcode
['xc_crash_signal_handler', 12076, 15808, 15808, ['            xc_crash_prepared_fd = -1;']]
code
funcline addr: 15812
funcline addr: 15816
funcline addr: 15820
funcline addr: 15824
['xc_crash_signal_handler', 12076, 15808, 15824, ['            xc_crash_prepared_fd = -1;']]
restartcode
['xc_crash_signal_handler', 12076, 15824, 15824, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
code
funcline addr: 15828
funcline addr: 15832
funcline addr: 15836
funcline addr: 15840
funcline addr: 15844
['xc_crash_signal_handler', 12076, 15824, 15844, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15844, 15844, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated with other error status(%d), dumper=%s\\n\\n", status, xc_crash_dumper_pathname);']]
code
funcline addr: 15848
funcline addr: 15852
funcline addr: 15856
funcline addr: 15860
funcline addr: 15864
funcline addr: 15868
['xc_crash_signal_handler', 12076, 15844, 15868, ['            xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"child terminated with other error status(%d), dumper=%s\\n\\n", status, xc_crash_dumper_pathname);']]
restartcode
['xc_crash_signal_handler', 12076, 15868, 15868, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
code
funcline addr: 15872
funcline addr: 15876
funcline addr: 15880
funcline addr: 15884
funcline addr: 15888
['xc_crash_signal_handler', 12076, 15868, 15888, ['        if((fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(xc_crash_log_pathname, O_RDONLY | O_CLOEXEC))) < 0)']]
restartcode
['xc_crash_signal_handler', 12076, 15888, 15888, ['    while(NULL != xcc_util_gets(line, sizeof(line), fd))']]
code
funcline addr: 15892
['xc_crash_signal_handler', 12076, 15888, 15892, ['    while(NULL != xcc_util_gets(line, sizeof(line), fd))']]
restartcode
['xc_crash_signal_handler', 12076, 15892, 15892, ['        if(0 == memcmp(line, "backtrace:\\n", 11))']]
code
funcline addr: 15896
funcline addr: 15900
funcline addr: 15904
funcline addr: 15908
funcline addr: 15912
['xc_crash_signal_handler', 12076, 15892, 15912, ['        if(0 == memcmp(line, "backtrace:\\n", 11))']]
restartcode
['xc_crash_signal_handler', 12076, 15912, 15912, ['        if(i++ > 200) //check the top 200 lines at most']]
code
funcline addr: 15916
funcline addr: 15920
funcline addr: 15924
funcline addr: 15928
['xc_crash_signal_handler', 12076, 15912, 15928, ['        if(i++ > 200) //check the top 200 lines at most']]
restartcode
['xc_crash_signal_handler', 12076, 15928, 15928, ['            if(NULL != xcc_util_gets(line, sizeof(line), fd) && 0 == memcmp(line, "    #00 pc ", 11))']]
code
funcline addr: 15932
funcline addr: 15936
funcline addr: 15940
funcline addr: 15944
funcline addr: 15948
funcline addr: 15952
funcline addr: 15956
funcline addr: 15960
funcline addr: 15964
funcline addr: 15968
funcline addr: 15972
funcline addr: 15976
['xc_crash_signal_handler', 12076, 15928, 15976, ['            if(NULL != xcc_util_gets(line, sizeof(line), fd) && 0 == memcmp(line, "    #00 pc ", 11))']]
restartcode
['xc_crash_signal_handler', 12076, 15976, 15976, ['    if(fd >= 0) close(fd);']]
code
funcline addr: 15980
funcline addr: 15984
['xc_crash_signal_handler', 12076, 15976, 15984, ['    if(fd >= 0) close(fd);']]
restartcode
['xc_crash_signal_handler', 12076, 15984, 15984, ['    if(!xc_crash_check_backtrace_valid()) goto end;']]
code
funcline addr: 15988
funcline addr: 15992
funcline addr: 15996
['xc_crash_signal_handler', 12076, 15984, 15996, ['    if(!xc_crash_check_backtrace_valid()) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 15996, 15996, ['    else if(xc_common_api_level == 29) ']]
code
funcline addr: 16000
funcline addr: 16004
['xc_crash_signal_handler', 12076, 15996, 16004, ['    else if(xc_common_api_level == 29) ']]
restartcode
['xc_crash_signal_handler', 12076, 16004, 16004, ['        libart = xc_dl_create(XCC_UTIL_LIBART_APEX_29);']]
code
funcline addr: 16008
funcline addr: 16012
funcline addr: 16016
funcline addr: 16020
funcline addr: 16024
funcline addr: 16028
funcline addr: 16032
['xc_crash_signal_handler', 12076, 16004, 16032, ['        libart = xc_dl_create(XCC_UTIL_LIBART_APEX_29);']]
restartcode
['xc_crash_signal_handler', 12076, 16032, 16032, ['    if(NULL == libart && NULL == (libart = xc_dl_create(XCC_UTIL_LIBART))) goto end;']]
code
funcline addr: 16036
funcline addr: 16040
funcline addr: 16044
funcline addr: 16048
funcline addr: 16052
funcline addr: 16056
['xc_crash_signal_handler', 12076, 16032, 16056, ['    if(NULL == libart && NULL == (libart = xc_dl_create(XCC_UTIL_LIBART))) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16056, 16056, ['    if(NULL == (current = (xcc_util_libart_thread_current_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_CURRENT))) goto end;']]
code
funcline addr: 16060
funcline addr: 16064
funcline addr: 16068
funcline addr: 16072
['xc_crash_signal_handler', 12076, 16056, 16072, ['    if(NULL == (current = (xcc_util_libart_thread_current_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_CURRENT))) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16072, 16072, ['    if(NULL == (dump = (xcc_util_libart_thread_dump_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_DUMP)))']]
code
funcline addr: 16076
funcline addr: 16080
funcline addr: 16084
funcline addr: 16088
funcline addr: 16092
funcline addr: 16096
funcline addr: 16100
funcline addr: 16104
['xc_crash_signal_handler', 12076, 16072, 16104, ['    if(NULL == (dump = (xcc_util_libart_thread_dump_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_DUMP)))']]
restartcode
['xc_crash_signal_handler', 12076, 16104, 16104, ['        if(NULL == (dump2 = (xcc_util_libart_thread_dump2_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_DUMP2))) goto end;']]
code
funcline addr: 16108
funcline addr: 16112
funcline addr: 16116
funcline addr: 16120
funcline addr: 16124
['xc_crash_signal_handler', 12076, 16104, 16124, ['        if(NULL == (dump2 = (xcc_util_libart_thread_dump2_t)xc_dl_sym(libart, XCC_UTIL_LIBART_THREAD_DUMP2))) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16124, 16124, ['    if(NULL == (thread = current())) goto end;']]
code
funcline addr: 16128
funcline addr: 16132
funcline addr: 16136
['xc_crash_signal_handler', 12076, 16124, 16136, ['    if(NULL == (thread = current())) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16136, 16136, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
code
funcline addr: 16140
funcline addr: 16144
['xc_crash_signal_handler', 12076, 16136, 16144, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16144, 16144, ['    xc_crash_dump_java_stacktrace = 0;']]
code
funcline addr: 16148
['xc_crash_signal_handler', 12076, 16144, 16148, ['    xc_crash_dump_java_stacktrace = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 16148, 16148, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
code
funcline addr: 16152
['xc_crash_signal_handler', 12076, 16148, 16152, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16152, 16152, ['    xc_crash_dump_java_stacktrace = 0;']]
code
funcline addr: 16156
['xc_crash_signal_handler', 12076, 16152, 16156, ['    xc_crash_dump_java_stacktrace = 0;']]
restartcode
['xc_crash_signal_handler', 12076, 16156, 16156, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
code
funcline addr: 16160
funcline addr: 16164
['xc_crash_signal_handler', 12076, 16156, 16164, ['    if(0 != xcc_util_write_str(xc_crash_log_fd, "\\n\\njava stacktrace:\\n")) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16164, 16164, ['    if(dup2(xc_crash_log_fd, STDERR_FILENO) < 0) goto end;']]
code
funcline addr: 16168
funcline addr: 16172
funcline addr: 16176
['xc_crash_signal_handler', 12076, 16164, 16176, ['    if(dup2(xc_crash_log_fd, STDERR_FILENO) < 0) goto end;']]
restartcode
['xc_crash_signal_handler', 12076, 16176, 16176, ['    if(NULL != dump)']]
code
funcline addr: 16180
['xc_crash_signal_handler', 12076, 16176, 16180, ['    if(NULL != dump)']]
restartcode
['xc_crash_signal_handler', 12076, 16180, 16180, ['        dump(thread, cerr);']]
code
funcline addr: 16184
funcline addr: 16188
funcline addr: 16192
funcline addr: 16196
['xc_crash_signal_handler', 12076, 16180, 16196, ['        dump(thread, cerr);']]
restartcode
['xc_crash_signal_handler', 12076, 16196, 16196, ['    else if(NULL != dump2)']]
code
funcline addr: 16200
['xc_crash_signal_handler', 12076, 16196, 16200, ['    else if(NULL != dump2)']]
restartcode
['xc_crash_signal_handler', 12076, 16200, 16200, ['        dump2(thread, cerr, 0, 0);']]
code
funcline addr: 16204
funcline addr: 16208
funcline addr: 16212
funcline addr: 16216
funcline addr: 16220
['xc_crash_signal_handler', 12076, 16200, 16220, ['        dump2(thread, cerr, 0, 0);']]
restartcode
['xc_crash_signal_handler', 12076, 16220, 16220, ['    dup2(xc_common_fd_null, STDERR_FILENO);']]
code
funcline addr: 16224
funcline addr: 16228
['xc_crash_signal_handler', 12076, 16220, 16228, ['    dup2(xc_common_fd_null, STDERR_FILENO);']]
restartcode
['xc_crash_signal_handler', 12076, 16228, 16228, ['    xcc_util_write_str(xc_crash_log_fd, "\\n");']]
code
funcline addr: 16232
funcline addr: 16236
funcline addr: 16240
funcline addr: 16244
funcline addr: 16248
funcline addr: 16252
['xc_crash_signal_handler', 12076, 16228, 16252, ['    xcc_util_write_str(xc_crash_log_fd, "\\n");']]
restartcode
['xc_crash_signal_handler', 12076, 16252, 16252, ['    _exit(1);']]
code
funcline addr: 16256
funcline addr: 16260
['xc_crash_signal_handler', 12076, 16252, 16260, ['    _exit(1);']]
restartcode
['xc_crash_signal_handler', 12076, 16260, 16260, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
code
funcline addr: 16264
['xc_crash_signal_handler', 12076, 16260, 16264, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
restartcode
['xc_crash_signal_handler', 12076, 16264, 16264, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
code
funcline addr: 16268
funcline addr: 16272
['xc_crash_signal_handler', 12076, 16264, 16272, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
restartcode
['xc_crash_signal_handler', 12076, 16272, 16272, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
code
funcline addr: 16276
funcline addr: 16280
['xc_crash_signal_handler', 12076, 16272, 16280, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
restartcode
['xc_crash_signal_handler', 12076, 16280, 16280, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
code
funcline addr: 16284
funcline addr: 16288
funcline addr: 16292
funcline addr: 16296
['xc_crash_signal_handler', 12076, 16280, 16296, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
restartcode
['xc_crash_signal_handler', 12076, 16296, 16296, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
code
funcline addr: 16300
['xc_crash_signal_handler', 12076, 16296, 16300, ['        xc_trace_dump_status = XC_TRACE_DUMP_ART_CRASH;']]
restartcode
['xc_crash_signal_handler', 12076, 16300, 16300, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
code
funcline addr: 16304
['xc_crash_signal_handler', 12076, 16300, 16304, ['        XCD_LOG_WARN("meet error sig(%d) while calling ART dump trace\\n", sig);']]
restartcode
['xc_crash_signal_handler', 12076, 16304, 16304, ['        siglongjmp(jmpenv, 1);']]
code
funcline addr: 16308
funcline addr: 16312
funcline addr: 16316
funcline addr: 16320
['xc_crash_signal_handler', 12076, 16304, 16320, ['        siglongjmp(jmpenv, 1);']]
restartcode
['xc_crash_signal_handler', 12076, 16320, 16320, ['']]
code
funchead startaddr: 0000000000003fc4,funcname: xc_crash_exec_dumper
['xc_crash_exec_dumper', 16324, 16324, 16324, ['{']]
code
funcline addr: 16324
funcline addr: 16328
funcline addr: 16332
funcline addr: 16336
funcline addr: 16340
funcline addr: 16344
funcline addr: 16348
funcline addr: 16352
funcline addr: 16356
funcline addr: 16360
funcline addr: 16364
['xc_crash_exec_dumper', 16324, 16324, 16364, ['{']]
restartcode
['xc_crash_exec_dumper', 16324, 16364, 16364, ['    for(i = 0; i < 1024; i++)']]
code
funcline addr: 16368
funcline addr: 16372
['xc_crash_exec_dumper', 16324, 16364, 16372, ['    for(i = 0; i < 1024; i++)']]
restartcode
['xc_crash_exec_dumper', 16324, 16372, 16372, ['        if(i != xc_crash_log_fd)']]
code
funcline addr: 16376
funcline addr: 16380
funcline addr: 16384
['xc_crash_exec_dumper', 16324, 16372, 16384, ['        if(i != xc_crash_log_fd)']]
restartcode
['xc_crash_exec_dumper', 16324, 16384, 16384, ['            syscall(SYS_close, i);']]
code
funcline addr: 16388
funcline addr: 16392
funcline addr: 16396
['xc_crash_exec_dumper', 16324, 16384, 16396, ['            syscall(SYS_close, i);']]
restartcode
['xc_crash_exec_dumper', 16324, 16396, 16396, ['    for(i = 0; i < 1024; i++)']]
code
funcline addr: 16400
funcline addr: 16404
['xc_crash_exec_dumper', 16324, 16396, 16404, ['    for(i = 0; i < 1024; i++)']]
restartcode
['xc_crash_exec_dumper', 16324, 16404, 16404, ['    errno = 0;']]
code
funcline addr: 16408
funcline addr: 16412
funcline addr: 16416
funcline addr: 16420
funcline addr: 16424
funcline addr: 16428
funcline addr: 16432
['xc_crash_exec_dumper', 16324, 16404, 16432, ['    errno = 0;']]
restartcode
['xc_crash_exec_dumper', 16324, 16432, 16432, ['    int devnull = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
code
funcline addr: 16436
funcline addr: 16440
funcline addr: 16444
funcline addr: 16448
funcline addr: 16452
funcline addr: 16456
funcline addr: 16460
funcline addr: 16464
['xc_crash_exec_dumper', 16324, 16432, 16464, ['    int devnull = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
restartcode
['xc_crash_exec_dumper', 16324, 16464, 16464, ['    if(devnull < 0)']]
code
funcline addr: 16468
['xc_crash_exec_dumper', 16324, 16464, 16468, ['    if(devnull < 0)']]
restartcode
['xc_crash_exec_dumper', 16324, 16468, 16468, ['    else if(0 != devnull)']]
code
funcline addr: 16472
['xc_crash_exec_dumper', 16324, 16468, 16472, ['    else if(0 != devnull)']]
restartcode
['xc_crash_exec_dumper', 16324, 16472, 16472, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"/dev/null fd NOT 0, errno=%d\\n\\n", errno);']]
code
funcline addr: 16476
funcline addr: 16480
funcline addr: 16484
funcline addr: 16488
funcline addr: 16492
funcline addr: 16496
funcline addr: 16500
['xc_crash_exec_dumper', 16324, 16472, 16500, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"/dev/null fd NOT 0, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_exec_dumper', 16324, 16500, 16500, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(devnull, STDOUT_FILENO));']]
code
funcline addr: 16504
funcline addr: 16508
funcline addr: 16512
funcline addr: 16516
funcline addr: 16520
funcline addr: 16524
funcline addr: 16528
funcline addr: 16532
['xc_crash_exec_dumper', 16324, 16500, 16532, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(devnull, STDOUT_FILENO));']]
restartcode
['xc_crash_exec_dumper', 16324, 16532, 16532, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(devnull, STDERR_FILENO));']]
code
funcline addr: 16536
funcline addr: 16540
funcline addr: 16544
funcline addr: 16548
funcline addr: 16552
['xc_crash_exec_dumper', 16324, 16532, 16552, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(devnull, STDERR_FILENO));']]
restartcode
['xc_crash_exec_dumper', 16324, 16552, 16552, ['    if(0 != pipe2(pipefd, O_CLOEXEC))']]
code
funcline addr: 16556
funcline addr: 16560
['xc_crash_exec_dumper', 16324, 16552, 16560, ['    if(0 != pipe2(pipefd, O_CLOEXEC))']]
restartcode
['xc_crash_exec_dumper', 16324, 16560, 16560, ['    errno = 0;']]
code
funcline addr: 16564
['xc_crash_exec_dumper', 16324, 16560, 16564, ['    errno = 0;']]
restartcode
['xc_crash_exec_dumper', 16324, 16564, 16564, ['    if(0 != pipe2(pipefd, O_CLOEXEC))']]
code
funcline addr: 16568
funcline addr: 16572
['xc_crash_exec_dumper', 16324, 16564, 16572, ['    if(0 != pipe2(pipefd, O_CLOEXEC))']]
restartcode
['xc_crash_exec_dumper', 16324, 16572, 16572, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"create args pipe failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 16576
funcline addr: 16580
funcline addr: 16584
funcline addr: 16588
funcline addr: 16592
funcline addr: 16596
funcline addr: 16600
['xc_crash_exec_dumper', 16324, 16572, 16600, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"create args pipe failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_exec_dumper', 16324, 16600, 16600, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"open /dev/null failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 16604
funcline addr: 16608
funcline addr: 16612
funcline addr: 16616
funcline addr: 16620
funcline addr: 16624
funcline addr: 16628
funcline addr: 16632
funcline addr: 16636
funcline addr: 16640
['xc_crash_exec_dumper', 16324, 16600, 16640, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"open /dev/null failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_exec_dumper', 16324, 16640, 16640, ['}']]
code
funcline addr: 16644
funcline addr: 16648
funcline addr: 16652
funcline addr: 16656
funcline addr: 16660
funcline addr: 16664
['xc_crash_exec_dumper', 16324, 16640, 16664, ['}']]
restartcode
['xc_crash_exec_dumper', 16324, 16664, 16664, ['                          xc_crash_spot.log_pathname_len +']]
code
funcline addr: 16668
funcline addr: 16672
funcline addr: 16676
['xc_crash_exec_dumper', 16324, 16664, 16676, ['                          xc_crash_spot.log_pathname_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16676, 16676, ['                          xc_crash_spot.kernel_version_len +']]
code
funcline addr: 16680
['xc_crash_exec_dumper', 16324, 16676, 16680, ['                          xc_crash_spot.kernel_version_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16680, 16680, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
code
funcline addr: 16684
['xc_crash_exec_dumper', 16324, 16680, 16684, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
restartcode
['xc_crash_exec_dumper', 16324, 16684, 16684, ['    int write_len = (int)(sizeof(xcc_spot_t) +']]
code
funcline addr: 16688
['xc_crash_exec_dumper', 16324, 16684, 16688, ['    int write_len = (int)(sizeof(xcc_spot_t) +']]
restartcode
['xc_crash_exec_dumper', 16324, 16688, 16688, ['                          xc_crash_spot.log_pathname_len +']]
code
funcline addr: 16692
['xc_crash_exec_dumper', 16324, 16688, 16692, ['                          xc_crash_spot.log_pathname_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16692, 16692, ['                          xc_crash_spot.manufacturer_len +']]
code
funcline addr: 16696
['xc_crash_exec_dumper', 16324, 16692, 16696, ['                          xc_crash_spot.manufacturer_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16696, 16696, ['                          xc_crash_spot.os_version_len +']]
code
funcline addr: 16700
['xc_crash_exec_dumper', 16324, 16696, 16700, ['                          xc_crash_spot.os_version_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16700, 16700, ['                          xc_crash_spot.kernel_version_len +']]
code
funcline addr: 16704
['xc_crash_exec_dumper', 16324, 16700, 16704, ['                          xc_crash_spot.kernel_version_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16704, 16704, ['                          xc_crash_spot.model_len +']]
code
funcline addr: 16708
['xc_crash_exec_dumper', 16324, 16704, 16708, ['                          xc_crash_spot.model_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16708, 16708, ['                          xc_crash_spot.abi_list_len +']]
code
funcline addr: 16712
['xc_crash_exec_dumper', 16324, 16708, 16712, ['                          xc_crash_spot.abi_list_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16712, 16712, ['                          xc_crash_spot.manufacturer_len +']]
code
funcline addr: 16716
['xc_crash_exec_dumper', 16324, 16712, 16716, ['                          xc_crash_spot.manufacturer_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16716, 16716, ['                          xc_crash_spot.app_id_len +']]
code
funcline addr: 16720
['xc_crash_exec_dumper', 16324, 16716, 16720, ['                          xc_crash_spot.app_id_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16720, 16720, ['                          xc_crash_spot.dump_all_threads_whitelist_len);']]
code
funcline addr: 16724
['xc_crash_exec_dumper', 16324, 16720, 16724, ['                          xc_crash_spot.dump_all_threads_whitelist_len);']]
restartcode
['xc_crash_exec_dumper', 16324, 16724, 16724, ['                          xc_crash_spot.brand_len +']]
code
funcline addr: 16728
['xc_crash_exec_dumper', 16324, 16724, 16728, ['                          xc_crash_spot.brand_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16728, 16728, ['    errno = 0;']]
code
funcline addr: 16732
['xc_crash_exec_dumper', 16324, 16728, 16732, ['    errno = 0;']]
restartcode
['xc_crash_exec_dumper', 16324, 16732, 16732, ['                          xc_crash_spot.model_len +']]
code
funcline addr: 16736
['xc_crash_exec_dumper', 16324, 16732, 16736, ['                          xc_crash_spot.model_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16736, 16736, ['                          xc_crash_spot.build_fingerprint_len +']]
code
funcline addr: 16740
['xc_crash_exec_dumper', 16324, 16736, 16740, ['                          xc_crash_spot.build_fingerprint_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16740, 16740, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
code
funcline addr: 16744
['xc_crash_exec_dumper', 16324, 16740, 16744, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
restartcode
['xc_crash_exec_dumper', 16324, 16744, 16744, ['                          xc_crash_spot.app_id_len +']]
code
funcline addr: 16748
funcline addr: 16752
['xc_crash_exec_dumper', 16324, 16744, 16752, ['                          xc_crash_spot.app_id_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16752, 16752, ['                          xc_crash_spot.app_version_len +']]
code
funcline addr: 16756
['xc_crash_exec_dumper', 16324, 16752, 16756, ['                          xc_crash_spot.app_version_len +']]
restartcode
['xc_crash_exec_dumper', 16324, 16756, 16756, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
code
funcline addr: 16760
funcline addr: 16764
funcline addr: 16768
funcline addr: 16772
['xc_crash_exec_dumper', 16324, 16756, 16772, ['    if(fcntl(pipefd[1], F_SETPIPE_SZ, write_len) < write_len)']]
restartcode
['xc_crash_exec_dumper', 16324, 16772, 16772, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set args pipe size failed, errno=%d\\n\\n", errno);']]
code
funcline addr: 16776
funcline addr: 16780
funcline addr: 16784
funcline addr: 16788
funcline addr: 16792
funcline addr: 16796
funcline addr: 16800
['xc_crash_exec_dumper', 16324, 16772, 16800, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"set args pipe size failed, errno=%d\\n\\n", errno);']]
restartcode
['xc_crash_exec_dumper', 16324, 16800, 16800, ['        {.iov_base = &xc_crash_spot,                      .iov_len = sizeof(xcc_spot_t)},']]
code
funcline addr: 16804
funcline addr: 16808
['xc_crash_exec_dumper', 16324, 16800, 16808, ['        {.iov_base = &xc_crash_spot,                      .iov_len = sizeof(xcc_spot_t)},']]
restartcode
['xc_crash_exec_dumper', 16324, 16808, 16808, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
code
funcline addr: 16812
funcline addr: 16816
funcline addr: 16820
['xc_crash_exec_dumper', 16324, 16808, 16820, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16820, 16820, ['        {.iov_base = xc_common_os_version,                .iov_len = xc_crash_spot.os_version_len},']]
code
funcline addr: 16824
funcline addr: 16828
['xc_crash_exec_dumper', 16324, 16820, 16828, ['        {.iov_base = xc_common_os_version,                .iov_len = xc_crash_spot.os_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16828, 16828, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
code
funcline addr: 16832
['xc_crash_exec_dumper', 16324, 16828, 16832, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16832, 16832, ['        {.iov_base = xc_common_kernel_version,            .iov_len = xc_crash_spot.kernel_version_len},']]
code
funcline addr: 16836
funcline addr: 16840
['xc_crash_exec_dumper', 16324, 16832, 16840, ['        {.iov_base = xc_common_kernel_version,            .iov_len = xc_crash_spot.kernel_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16840, 16840, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
code
funcline addr: 16844
['xc_crash_exec_dumper', 16324, 16840, 16844, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16844, 16844, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
code
funcline addr: 16848
['xc_crash_exec_dumper', 16324, 16844, 16848, ['        {.iov_base = xc_crash_log_pathname,               .iov_len = xc_crash_spot.log_pathname_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16848, 16848, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
code
funcline addr: 16852
['xc_crash_exec_dumper', 16324, 16848, 16852, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16852, 16852, ['        {.iov_base = xc_common_os_version,                .iov_len = xc_crash_spot.os_version_len},']]
code
funcline addr: 16856
['xc_crash_exec_dumper', 16324, 16852, 16856, ['        {.iov_base = xc_common_os_version,                .iov_len = xc_crash_spot.os_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16856, 16856, ['        {.iov_base = xc_common_brand,                     .iov_len = xc_crash_spot.brand_len},']]
code
funcline addr: 16860
['xc_crash_exec_dumper', 16324, 16856, 16860, ['        {.iov_base = xc_common_brand,                     .iov_len = xc_crash_spot.brand_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16860, 16860, ['        {.iov_base = xc_common_kernel_version,            .iov_len = xc_crash_spot.kernel_version_len},']]
code
funcline addr: 16864
['xc_crash_exec_dumper', 16324, 16860, 16864, ['        {.iov_base = xc_common_kernel_version,            .iov_len = xc_crash_spot.kernel_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16864, 16864, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
code
funcline addr: 16868
['xc_crash_exec_dumper', 16324, 16864, 16868, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16868, 16868, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
code
funcline addr: 16872
['xc_crash_exec_dumper', 16324, 16868, 16872, ['        {.iov_base = xc_common_manufacturer,              .iov_len = xc_crash_spot.manufacturer_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16872, 16872, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
code
funcline addr: 16876
['xc_crash_exec_dumper', 16324, 16872, 16876, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16876, 16876, ['        {.iov_base = xc_common_brand,                     .iov_len = xc_crash_spot.brand_len},']]
code
funcline addr: 16880
['xc_crash_exec_dumper', 16324, 16876, 16880, ['        {.iov_base = xc_common_brand,                     .iov_len = xc_crash_spot.brand_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16880, 16880, ['        {.iov_base = xc_common_build_fingerprint,         .iov_len = xc_crash_spot.build_fingerprint_len},']]
code
funcline addr: 16884
funcline addr: 16888
['xc_crash_exec_dumper', 16324, 16880, 16888, ['        {.iov_base = xc_common_build_fingerprint,         .iov_len = xc_crash_spot.build_fingerprint_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16888, 16888, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
code
funcline addr: 16892
['xc_crash_exec_dumper', 16324, 16888, 16892, ['        {.iov_base = xc_common_model,                     .iov_len = xc_crash_spot.model_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16892, 16892, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
code
funcline addr: 16896
['xc_crash_exec_dumper', 16324, 16892, 16896, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16896, 16896, ['        {.iov_base = xc_common_abi_list,                  .iov_len = xc_crash_spot.abi_list_len},']]
code
funcline addr: 16900
['xc_crash_exec_dumper', 16324, 16896, 16900, ['        {.iov_base = xc_common_abi_list,                  .iov_len = xc_crash_spot.abi_list_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16900, 16900, ['        {.iov_base = xc_common_build_fingerprint,         .iov_len = xc_crash_spot.build_fingerprint_len},']]
code
funcline addr: 16904
['xc_crash_exec_dumper', 16324, 16900, 16904, ['        {.iov_base = xc_common_build_fingerprint,         .iov_len = xc_crash_spot.build_fingerprint_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16904, 16904, ['        {.iov_base = xc_common_app_version,               .iov_len = xc_crash_spot.app_version_len},']]
code
funcline addr: 16908
['xc_crash_exec_dumper', 16324, 16904, 16908, ['        {.iov_base = xc_common_app_version,               .iov_len = xc_crash_spot.app_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16908, 16908, ['        {.iov_base = &xc_crash_spot,                      .iov_len = sizeof(xcc_spot_t)},']]
code
funcline addr: 16912
['xc_crash_exec_dumper', 16324, 16908, 16912, ['        {.iov_base = &xc_crash_spot,                      .iov_len = sizeof(xcc_spot_t)},']]
restartcode
['xc_crash_exec_dumper', 16324, 16912, 16912, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
code
funcline addr: 16916
['xc_crash_exec_dumper', 16324, 16912, 16916, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
restartcode
['xc_crash_exec_dumper', 16324, 16916, 16916, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
code
funcline addr: 16920
funcline addr: 16924
['xc_crash_exec_dumper', 16324, 16916, 16924, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16924, 16924, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
code
funcline addr: 16928
funcline addr: 16932
['xc_crash_exec_dumper', 16324, 16924, 16932, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
restartcode
['xc_crash_exec_dumper', 16324, 16932, 16932, ['    int iovs_cnt = (0 == xc_crash_spot.dump_all_threads_whitelist_len ? 11 : 12);']]
code
funcline addr: 16936
funcline addr: 16940
['xc_crash_exec_dumper', 16324, 16932, 16940, ['    int iovs_cnt = (0 == xc_crash_spot.dump_all_threads_whitelist_len ? 11 : 12);']]
restartcode
['xc_crash_exec_dumper', 16324, 16940, 16940, ['        {.iov_base = xc_common_abi_list,                  .iov_len = xc_crash_spot.abi_list_len},']]
code
funcline addr: 16944
['xc_crash_exec_dumper', 16324, 16940, 16944, ['        {.iov_base = xc_common_abi_list,                  .iov_len = xc_crash_spot.abi_list_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16944, 16944, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
code
funcline addr: 16948
['xc_crash_exec_dumper', 16324, 16944, 16948, ['        {.iov_base = xc_common_app_id,                    .iov_len = xc_crash_spot.app_id_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16948, 16948, ['        {.iov_base = xc_common_app_version,               .iov_len = xc_crash_spot.app_version_len},']]
code
funcline addr: 16952
['xc_crash_exec_dumper', 16324, 16948, 16952, ['        {.iov_base = xc_common_app_version,               .iov_len = xc_crash_spot.app_version_len},']]
restartcode
['xc_crash_exec_dumper', 16324, 16952, 16952, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
code
funcline addr: 16956
['xc_crash_exec_dumper', 16324, 16952, 16956, ['        {.iov_base = xc_crash_dump_all_threads_whitelist, .iov_len = xc_crash_spot.dump_all_threads_whitelist_len}']]
restartcode
['xc_crash_exec_dumper', 16324, 16956, 16956, ['    errno = 0;']]
code
funcline addr: 16960
['xc_crash_exec_dumper', 16324, 16956, 16960, ['    errno = 0;']]
restartcode
['xc_crash_exec_dumper', 16324, 16960, 16960, ['    ssize_t ret = XCC_UTIL_TEMP_FAILURE_RETRY(writev(pipefd[1], iovs, iovs_cnt));']]
code
funcline addr: 16964
funcline addr: 16968
funcline addr: 16972
funcline addr: 16976
funcline addr: 16980
funcline addr: 16984
funcline addr: 16988
funcline addr: 16992
funcline addr: 16996
funcline addr: 17000
funcline addr: 17004
funcline addr: 17008
['xc_crash_exec_dumper', 16324, 16960, 17008, ['    ssize_t ret = XCC_UTIL_TEMP_FAILURE_RETRY(writev(pipefd[1], iovs, iovs_cnt));']]
restartcode
['xc_crash_exec_dumper', 16324, 17008, 17008, ['    if((ssize_t)write_len != ret)']]
code
funcline addr: 17012
funcline addr: 17016
['xc_crash_exec_dumper', 16324, 17008, 17016, ['    if((ssize_t)write_len != ret)']]
restartcode
['xc_crash_exec_dumper', 16324, 17016, 17016, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(pipefd[0], STDIN_FILENO));']]
code
funcline addr: 17020
funcline addr: 17024
funcline addr: 17028
funcline addr: 17032
funcline addr: 17036
funcline addr: 17040
funcline addr: 17044
funcline addr: 17048
['xc_crash_exec_dumper', 16324, 17016, 17048, ['    XCC_UTIL_TEMP_FAILURE_RETRY(dup2(pipefd[0], STDIN_FILENO));']]
restartcode
['xc_crash_exec_dumper', 16324, 17048, 17048, ['    syscall(SYS_close, pipefd[0]);']]
code
funcline addr: 17052
funcline addr: 17056
funcline addr: 17060
['xc_crash_exec_dumper', 16324, 17048, 17060, ['    syscall(SYS_close, pipefd[0]);']]
restartcode
['xc_crash_exec_dumper', 16324, 17060, 17060, ['    syscall(SYS_close, pipefd[1]);']]
code
funcline addr: 17064
funcline addr: 17068
funcline addr: 17072
['xc_crash_exec_dumper', 16324, 17060, 17072, ['    syscall(SYS_close, pipefd[1]);']]
restartcode
['xc_crash_exec_dumper', 16324, 17072, 17072, ['    errno = 0;']]
code
funcline addr: 17076
['xc_crash_exec_dumper', 16324, 17072, 17076, ['    errno = 0;']]
restartcode
['xc_crash_exec_dumper', 16324, 17076, 17076, ['    execl(xc_crash_dumper_pathname, XCC_UTIL_XCRASH_DUMPER_FILENAME, NULL);']]
code
funcline addr: 17080
funcline addr: 17084
funcline addr: 17088
funcline addr: 17092
funcline addr: 17096
funcline addr: 17100
['xc_crash_exec_dumper', 16324, 17076, 17100, ['    execl(xc_crash_dumper_pathname, XCC_UTIL_XCRASH_DUMPER_FILENAME, NULL);']]
restartcode
['xc_crash_exec_dumper', 16324, 17100, 17100, ['    return 100 + errno;']]
code
funcline addr: 17104
funcline addr: 17108
funcline addr: 17112
['xc_crash_exec_dumper', 16324, 17100, 17112, ['    return 100 + errno;']]
restartcode
['xc_crash_exec_dumper', 16324, 17112, 17112, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"write args to pipe failed, return=%d, errno=%d\\n\\n", ret, errno);']]
code
funcline addr: 17116
funcline addr: 17120
funcline addr: 17124
funcline addr: 17128
funcline addr: 17132
funcline addr: 17136
funcline addr: 17140
funcline addr: 17144
['xc_crash_exec_dumper', 16324, 17112, 17144, ['        xcc_util_write_format_safe(xc_crash_log_fd, XC_CRASH_ERR_TITLE"write args to pipe failed, return=%d, errno=%d\\n\\n", ret, errno);']]
restartcode
['xc_crash_exec_dumper', 16324, 17144, 17144, ['']]
code
funchead startaddr: 00000000000042fc,funcname: JNI_OnLoad
['JNI_OnLoad', 17148, 17148, 17148, ['        (void *)xc_jni_test_crash']]
code
['JNI_OnLoad', 17148, 17148, 17148, ['    }']]
code
['JNI_OnLoad', 17148, 17148, 17148, ['};']]
code
['JNI_OnLoad', 17148, 17148, 17148, ['']]
code
['JNI_OnLoad', 17148, 17148, 17148, ['JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved)']]
code
['JNI_OnLoad', 17148, 17148, 17148, ['{']]
code
funcline addr: 17148
funcline addr: 17152
funcline addr: 17156
funcline addr: 17160
funcline addr: 17164
funcline addr: 17168
funcline addr: 17172
funcline addr: 17176
funcline addr: 17180
['JNI_OnLoad', 17148, 17148, 17180, ['{']]
restartcode
['JNI_OnLoad', 17148, 17180, 17180, ['    JNIEnv *env;']]
code
['JNI_OnLoad', 17148, 17180, 17180, ['    jclass  cls;']]
code
['JNI_OnLoad', 17148, 17180, 17180, ['']]
code
['JNI_OnLoad', 17148, 17180, 17180, ['    (void)reserved;']]
code
['JNI_OnLoad', 17148, 17180, 17180, ['']]
code
['JNI_OnLoad', 17148, 17180, 17180, ['    if(NULL == vm) return -1;']]
code
funcline addr: 17184
['JNI_OnLoad', 17148, 17180, 17184, ['    if(NULL == vm) return -1;']]
restartcode
['JNI_OnLoad', 17148, 17184, 17184, ['    ']]
code
['JNI_OnLoad', 17148, 17184, 17184, ['    //register JNI methods']]
code
['JNI_OnLoad', 17148, 17184, 17184, ['    if(JNI_OK != (*vm)->GetEnv(vm, (void**)&env, XC_JNI_VERSION)) return -1;']]
code
funcline addr: 17188
funcline addr: 17192
funcline addr: 17196
funcline addr: 17200
funcline addr: 17204
funcline addr: 17208
funcline addr: 17212
funcline addr: 17216
funcline addr: 17220
funcline addr: 17224
funcline addr: 17228
funcline addr: 17232
funcline addr: 17236
funcline addr: 17240
['JNI_OnLoad', 17148, 17184, 17240, ['    if(JNI_OK != (*vm)->GetEnv(vm, (void**)&env, XC_JNI_VERSION)) return -1;']]
restartcode
['JNI_OnLoad', 17148, 17240, 17240, ['    if((*env)->RegisterNatives(env, cls, xc_jni_methods, sizeof(xc_jni_methods) / sizeof(xc_jni_methods[0]))) return -1;']]
code
['JNI_OnLoad', 17148, 17240, 17240, ['']]
code
['JNI_OnLoad', 17148, 17240, 17240, ['    xc_common_set_vm(vm, env, cls);']]
code
['JNI_OnLoad', 17148, 17240, 17240, ['']]
code
['JNI_OnLoad', 17148, 17240, 17240, ['    return XC_JNI_VERSION;']]
code
['JNI_OnLoad', 17148, 17240, 17240, ['}']]
code
funcline addr: 17244
funcline addr: 17248
funcline addr: 17252
funcline addr: 17256
funcline addr: 17260
funcline addr: 17264
funcline addr: 17268
['JNI_OnLoad', 17148, 17240, 17268, ['}']]
restartcode
['JNI_OnLoad', 17148, 17268, 17268, ['    if(NULL == env || NULL == *env) return -1;']]
code
funcline addr: 17272
funcline addr: 17276
funcline addr: 17280
funcline addr: 17284
['JNI_OnLoad', 17148, 17268, 17284, ['    if(NULL == env || NULL == *env) return -1;']]
restartcode
['JNI_OnLoad', 17148, 17284, 17284, ['    if(NULL == (cls = (*env)->FindClass(env, XC_JNI_CLASS_NAME))) return -1;']]
code
funcline addr: 17288
funcline addr: 17292
funcline addr: 17296
funcline addr: 17300
funcline addr: 17304
funcline addr: 17308
['JNI_OnLoad', 17148, 17284, 17308, ['    if(NULL == (cls = (*env)->FindClass(env, XC_JNI_CLASS_NAME))) return -1;']]
restartcode
['JNI_OnLoad', 17148, 17308, 17308, ['    if((*env)->RegisterNatives(env, cls, xc_jni_methods, sizeof(xc_jni_methods) / sizeof(xc_jni_methods[0]))) return -1;']]
code
funcline addr: 17312
funcline addr: 17316
funcline addr: 17320
funcline addr: 17324
funcline addr: 17328
funcline addr: 17332
funcline addr: 17336
funcline addr: 17340
funcline addr: 17344
['JNI_OnLoad', 17148, 17308, 17344, ['    if((*env)->RegisterNatives(env, cls, xc_jni_methods, sizeof(xc_jni_methods) / sizeof(xc_jni_methods[0]))) return -1;']]
restartcode
['JNI_OnLoad', 17148, 17344, 17344, ['    xc_common_set_vm(vm, env, cls);']]
code
funcline addr: 17348
['JNI_OnLoad', 17148, 17344, 17348, ['    xc_common_set_vm(vm, env, cls);']]
restartcode
['JNI_OnLoad', 17148, 17348, 17348, ['    xc_common_vm = vm;']]
code
funcline addr: 17352
funcline addr: 17356
funcline addr: 17360
['JNI_OnLoad', 17148, 17348, 17360, ['    xc_common_vm = vm;']]
restartcode
['JNI_OnLoad', 17148, 17360, 17360, ['    xc_common_cb_class = (*env)->NewGlobalRef(env, cls);']]
code
funcline addr: 17364
funcline addr: 17368
funcline addr: 17372
funcline addr: 17376
funcline addr: 17380
funcline addr: 17384
['JNI_OnLoad', 17148, 17360, 17384, ['    xc_common_cb_class = (*env)->NewGlobalRef(env, cls);']]
restartcode
['JNI_OnLoad', 17148, 17384, 17384, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_common_cb_class, err);']]
code
funcline addr: 17388
funcline addr: 17392
funcline addr: 17396
funcline addr: 17400
funcline addr: 17404
funcline addr: 17408
funcline addr: 17412
funcline addr: 17416
funcline addr: 17420
['JNI_OnLoad', 17148, 17384, 17420, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_common_cb_class, err);']]
restartcode
['JNI_OnLoad', 17148, 17420, 17420, ['    xc_common_cb_class = NULL;']]
code
funcline addr: 17424
funcline addr: 17428
['JNI_OnLoad', 17148, 17420, 17428, ['    xc_common_cb_class = NULL;']]
restartcode
['JNI_OnLoad', 17148, 17428, 17428, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_common_cb_class, err);']]
code
funcline addr: 17432
funcline addr: 17436
funcline addr: 17440
funcline addr: 17444
['JNI_OnLoad', 17148, 17428, 17444, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_common_cb_class, err);']]
restartcode
['JNI_OnLoad', 17148, 17444, 17444, ['']]
code
funchead startaddr: 0000000000004428,funcname: xc_jni_init
['xc_jni_init', 17448, 17448, 17448, ['{']]
code
funcline addr: 17448
funcline addr: 17452
funcline addr: 17456
funcline addr: 17460
funcline addr: 17464
funcline addr: 17468
funcline addr: 17472
funcline addr: 17476
funcline addr: 17480
['xc_jni_init', 17448, 17448, 17480, ['{']]
restartcode
['xc_jni_init', 17448, 17480, 17480, ['    if(xc_jni_inited) return XCC_ERRNO_JNI;']]
code
funcline addr: 17484
funcline addr: 17488
funcline addr: 17492
funcline addr: 17496
funcline addr: 17500
funcline addr: 17504
funcline addr: 17508
['xc_jni_init', 17448, 17480, 17508, ['    if(xc_jni_inited) return XCC_ERRNO_JNI;']]
restartcode
['xc_jni_init', 17448, 17508, 17508, ['    xc_jni_inited = 1;']]
code
funcline addr: 17512
['xc_jni_init', 17448, 17508, 17512, ['    xc_jni_inited = 1;']]
restartcode
['xc_jni_init', 17448, 17512, 17512, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
code
funcline addr: 17516
funcline addr: 17520
funcline addr: 17524
funcline addr: 17528
funcline addr: 17532
funcline addr: 17536
funcline addr: 17540
funcline addr: 17544
funcline addr: 17548
funcline addr: 17552
funcline addr: 17556
funcline addr: 17560
funcline addr: 17564
funcline addr: 17568
funcline addr: 17572
funcline addr: 17576
funcline addr: 17580
funcline addr: 17584
funcline addr: 17588
funcline addr: 17592
funcline addr: 17596
funcline addr: 17600
funcline addr: 17604
funcline addr: 17608
funcline addr: 17612
funcline addr: 17616
funcline addr: 17620
funcline addr: 17624
funcline addr: 17628
funcline addr: 17632
funcline addr: 17636
funcline addr: 17640
funcline addr: 17644
funcline addr: 17648
funcline addr: 17652
funcline addr: 17656
funcline addr: 17660
funcline addr: 17664
funcline addr: 17668
funcline addr: 17672
funcline addr: 17676
funcline addr: 17680
funcline addr: 17684
funcline addr: 17688
funcline addr: 17692
funcline addr: 17696
funcline addr: 17700
funcline addr: 17704
funcline addr: 17708
funcline addr: 17712
funcline addr: 17716
funcline addr: 17720
funcline addr: 17724
funcline addr: 17728
['xc_jni_init', 17448, 17512, 17728, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
restartcode
['xc_jni_init', 17448, 17728, 17728, ['    if(NULL == (c_os_version        = (*env)->GetStringUTFChars(env, os_version,        0))) goto clean;']]
code
funcline addr: 17732
funcline addr: 17736
funcline addr: 17740
funcline addr: 17744
funcline addr: 17748
funcline addr: 17752
['xc_jni_init', 17448, 17728, 17752, ['    if(NULL == (c_os_version        = (*env)->GetStringUTFChars(env, os_version,        0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17752, 17752, ['    if(NULL == (c_abi_list          = (*env)->GetStringUTFChars(env, abi_list,          0))) goto clean;']]
code
funcline addr: 17756
funcline addr: 17760
funcline addr: 17764
funcline addr: 17768
funcline addr: 17772
funcline addr: 17776
funcline addr: 17780
funcline addr: 17784
funcline addr: 17788
funcline addr: 17792
funcline addr: 17796
['xc_jni_init', 17448, 17752, 17796, ['    if(NULL == (c_abi_list          = (*env)->GetStringUTFChars(env, abi_list,          0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17796, 17796, ['    if(NULL == (c_manufacturer      = (*env)->GetStringUTFChars(env, manufacturer,      0))) goto clean;']]
code
funcline addr: 17800
funcline addr: 17804
funcline addr: 17808
funcline addr: 17812
funcline addr: 17816
funcline addr: 17820
['xc_jni_init', 17448, 17796, 17820, ['    if(NULL == (c_manufacturer      = (*env)->GetStringUTFChars(env, manufacturer,      0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17820, 17820, ['    if(NULL == (c_brand             = (*env)->GetStringUTFChars(env, brand,             0))) goto clean;']]
code
funcline addr: 17824
funcline addr: 17828
funcline addr: 17832
funcline addr: 17836
funcline addr: 17840
['xc_jni_init', 17448, 17820, 17840, ['    if(NULL == (c_brand             = (*env)->GetStringUTFChars(env, brand,             0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17840, 17840, ['    if(NULL == (c_model             = (*env)->GetStringUTFChars(env, model,             0))) goto clean;']]
code
funcline addr: 17844
funcline addr: 17848
funcline addr: 17852
funcline addr: 17856
funcline addr: 17860
funcline addr: 17864
funcline addr: 17868
['xc_jni_init', 17448, 17840, 17868, ['    if(NULL == (c_model             = (*env)->GetStringUTFChars(env, model,             0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17868, 17868, ['    if(NULL == (c_build_fingerprint = (*env)->GetStringUTFChars(env, build_fingerprint, 0))) goto clean;']]
code
funcline addr: 17872
funcline addr: 17876
funcline addr: 17880
funcline addr: 17884
funcline addr: 17888
funcline addr: 17892
['xc_jni_init', 17448, 17868, 17892, ['    if(NULL == (c_build_fingerprint = (*env)->GetStringUTFChars(env, build_fingerprint, 0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17892, 17892, ['    if(NULL == (c_app_id            = (*env)->GetStringUTFChars(env, app_id,            0))) goto clean;']]
code
funcline addr: 17896
funcline addr: 17900
funcline addr: 17904
funcline addr: 17908
funcline addr: 17912
['xc_jni_init', 17448, 17892, 17912, ['    if(NULL == (c_app_id            = (*env)->GetStringUTFChars(env, app_id,            0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17912, 17912, ['    if(NULL == (c_app_version       = (*env)->GetStringUTFChars(env, app_version,       0))) goto clean;']]
code
funcline addr: 17916
funcline addr: 17920
funcline addr: 17924
funcline addr: 17928
funcline addr: 17932
funcline addr: 17936
['xc_jni_init', 17448, 17912, 17936, ['    if(NULL == (c_app_version       = (*env)->GetStringUTFChars(env, app_version,       0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17936, 17936, ['    if(NULL == (c_app_lib_dir       = (*env)->GetStringUTFChars(env, app_lib_dir,       0))) goto clean;']]
code
funcline addr: 17940
funcline addr: 17944
funcline addr: 17948
funcline addr: 17952
funcline addr: 17956
funcline addr: 17960
['xc_jni_init', 17448, 17936, 17960, ['    if(NULL == (c_app_lib_dir       = (*env)->GetStringUTFChars(env, app_lib_dir,       0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17960, 17960, ['    if(NULL == (c_log_dir           = (*env)->GetStringUTFChars(env, log_dir,           0))) goto clean;']]
code
funcline addr: 17964
funcline addr: 17968
funcline addr: 17972
funcline addr: 17976
funcline addr: 17980
funcline addr: 17984
funcline addr: 17988
['xc_jni_init', 17448, 17960, 17988, ['    if(NULL == (c_log_dir           = (*env)->GetStringUTFChars(env, log_dir,           0))) goto clean;']]
restartcode
['xc_jni_init', 17448, 17988, 17988, ['    if(0 != gettimeofday(&tv, NULL)) return XCC_ERRNO_SYS;']]
code
funcline addr: 17992
funcline addr: 17996
funcline addr: 18000
funcline addr: 18004
funcline addr: 18008
funcline addr: 18012
funcline addr: 18016
funcline addr: 18020
funcline addr: 18024
['xc_jni_init', 17448, 17988, 18024, ['    if(0 != gettimeofday(&tv, NULL)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 18024, 18024, ['    if(0 != xc_common_init((int)api_level, ']]
code
funcline addr: 18028
funcline addr: 18032
funcline addr: 18036
funcline addr: 18040
funcline addr: 18044
funcline addr: 18048
funcline addr: 18052
funcline addr: 18056
funcline addr: 18060
funcline addr: 18064
funcline addr: 18068
funcline addr: 18072
funcline addr: 18076
funcline addr: 18080
funcline addr: 18084
['xc_jni_init', 17448, 18024, 18084, ['    if(0 != xc_common_init((int)api_level, ']]
restartcode
['xc_jni_init', 17448, 18084, 18084, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
code
funcline addr: 18088
funcline addr: 18092
funcline addr: 18096
funcline addr: 18100
funcline addr: 18104
funcline addr: 18108
funcline addr: 18112
['xc_jni_init', 17448, 18084, 18112, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
restartcode
['xc_jni_init', 17448, 18112, 18112, ['    if(abi_list          && c_abi_list)          (*env)->ReleaseStringUTFChars(env, abi_list,          c_abi_list);']]
code
funcline addr: 18116
funcline addr: 18120
funcline addr: 18124
funcline addr: 18128
funcline addr: 18132
funcline addr: 18136
funcline addr: 18140
['xc_jni_init', 17448, 18112, 18140, ['    if(abi_list          && c_abi_list)          (*env)->ReleaseStringUTFChars(env, abi_list,          c_abi_list);']]
restartcode
['xc_jni_init', 17448, 18140, 18140, ['    if(manufacturer      && c_manufacturer)      (*env)->ReleaseStringUTFChars(env, manufacturer,      c_manufacturer);']]
code
funcline addr: 18144
funcline addr: 18148
funcline addr: 18152
funcline addr: 18156
funcline addr: 18160
funcline addr: 18164
funcline addr: 18168
['xc_jni_init', 17448, 18140, 18168, ['    if(manufacturer      && c_manufacturer)      (*env)->ReleaseStringUTFChars(env, manufacturer,      c_manufacturer);']]
restartcode
['xc_jni_init', 17448, 18168, 18168, ['    if(brand             && c_brand)             (*env)->ReleaseStringUTFChars(env, brand,             c_brand);']]
code
funcline addr: 18172
funcline addr: 18176
funcline addr: 18180
funcline addr: 18184
funcline addr: 18188
funcline addr: 18192
funcline addr: 18196
['xc_jni_init', 17448, 18168, 18196, ['    if(brand             && c_brand)             (*env)->ReleaseStringUTFChars(env, brand,             c_brand);']]
restartcode
['xc_jni_init', 17448, 18196, 18196, ['    if(model             && c_model)             (*env)->ReleaseStringUTFChars(env, model,             c_model);']]
code
funcline addr: 18200
funcline addr: 18204
funcline addr: 18208
funcline addr: 18212
funcline addr: 18216
funcline addr: 18220
funcline addr: 18224
['xc_jni_init', 17448, 18196, 18224, ['    if(model             && c_model)             (*env)->ReleaseStringUTFChars(env, model,             c_model);']]
restartcode
['xc_jni_init', 17448, 18224, 18224, ['    if(build_fingerprint && c_build_fingerprint) (*env)->ReleaseStringUTFChars(env, build_fingerprint, c_build_fingerprint);']]
code
funcline addr: 18228
funcline addr: 18232
funcline addr: 18236
funcline addr: 18240
funcline addr: 18244
funcline addr: 18248
funcline addr: 18252
funcline addr: 18256
funcline addr: 18260
['xc_jni_init', 17448, 18224, 18260, ['    if(build_fingerprint && c_build_fingerprint) (*env)->ReleaseStringUTFChars(env, build_fingerprint, c_build_fingerprint);']]
restartcode
['xc_jni_init', 17448, 18260, 18260, ['    if(app_id            && c_app_id)            (*env)->ReleaseStringUTFChars(env, app_id,            c_app_id);']]
code
funcline addr: 18264
funcline addr: 18268
funcline addr: 18272
funcline addr: 18276
funcline addr: 18280
funcline addr: 18284
funcline addr: 18288
funcline addr: 18292
['xc_jni_init', 17448, 18260, 18292, ['    if(app_id            && c_app_id)            (*env)->ReleaseStringUTFChars(env, app_id,            c_app_id);']]
restartcode
['xc_jni_init', 17448, 18292, 18292, ['    if(app_version       && c_app_version)       (*env)->ReleaseStringUTFChars(env, app_version,       c_app_version);']]
code
funcline addr: 18296
funcline addr: 18300
funcline addr: 18304
funcline addr: 18308
funcline addr: 18312
funcline addr: 18316
funcline addr: 18320
['xc_jni_init', 17448, 18292, 18320, ['    if(app_version       && c_app_version)       (*env)->ReleaseStringUTFChars(env, app_version,       c_app_version);']]
restartcode
['xc_jni_init', 17448, 18320, 18320, ['    if(app_lib_dir       && c_app_lib_dir)       (*env)->ReleaseStringUTFChars(env, app_lib_dir,       c_app_lib_dir);']]
code
funcline addr: 18324
funcline addr: 18328
funcline addr: 18332
funcline addr: 18336
funcline addr: 18340
funcline addr: 18344
['xc_jni_init', 17448, 18320, 18344, ['    if(app_lib_dir       && c_app_lib_dir)       (*env)->ReleaseStringUTFChars(env, app_lib_dir,       c_app_lib_dir);']]
restartcode
['xc_jni_init', 17448, 18344, 18344, ['    if(log_dir           && c_log_dir)           (*env)->ReleaseStringUTFChars(env, log_dir,           c_log_dir);']]
code
funcline addr: 18348
funcline addr: 18352
funcline addr: 18356
funcline addr: 18360
funcline addr: 18364
funcline addr: 18368
['xc_jni_init', 17448, 18344, 18368, ['    if(log_dir           && c_log_dir)           (*env)->ReleaseStringUTFChars(env, log_dir,           c_log_dir);']]
restartcode
['xc_jni_init', 17448, 18368, 18368, ['    if(crash_dump_all_threads_whitelist && NULL != c_crash_dump_all_threads_whitelist)']]
code
funcline addr: 18372
funcline addr: 18376
funcline addr: 18380
['xc_jni_init', 17448, 18368, 18380, ['    if(crash_dump_all_threads_whitelist && NULL != c_crash_dump_all_threads_whitelist)']]
restartcode
['xc_jni_init', 17448, 18380, 18380, ['        for(i = 0; i < c_crash_dump_all_threads_whitelist_len; i++)']]
code
funcline addr: 18384
funcline addr: 18388
['xc_jni_init', 17448, 18380, 18388, ['        for(i = 0; i < c_crash_dump_all_threads_whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 18388, 18388, ['            tmp_str = (jstring)((*env)->GetObjectArrayElement(env, crash_dump_all_threads_whitelist, (jsize)i));']]
code
funcline addr: 18392
funcline addr: 18396
funcline addr: 18400
funcline addr: 18404
funcline addr: 18408
funcline addr: 18412
['xc_jni_init', 17448, 18388, 18412, ['            tmp_str = (jstring)((*env)->GetObjectArrayElement(env, crash_dump_all_threads_whitelist, (jsize)i));']]
restartcode
['xc_jni_init', 17448, 18412, 18412, ['            if(tmp_str && NULL != tmp_c_str) (*env)->ReleaseStringUTFChars(env, tmp_str, tmp_c_str);']]
code
funcline addr: 18416
funcline addr: 18420
funcline addr: 18424
funcline addr: 18428
funcline addr: 18432
funcline addr: 18436
funcline addr: 18440
['xc_jni_init', 17448, 18412, 18440, ['            if(tmp_str && NULL != tmp_c_str) (*env)->ReleaseStringUTFChars(env, tmp_str, tmp_c_str);']]
restartcode
['xc_jni_init', 17448, 18440, 18440, ['        for(i = 0; i < c_crash_dump_all_threads_whitelist_len; i++)']]
code
funcline addr: 18444
funcline addr: 18448
funcline addr: 18452
funcline addr: 18456
funcline addr: 18460
funcline addr: 18464
['xc_jni_init', 17448, 18440, 18464, ['        for(i = 0; i < c_crash_dump_all_threads_whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 18464, 18464, ['        free(c_crash_dump_all_threads_whitelist);']]
code
funcline addr: 18468
funcline addr: 18472
funcline addr: 18476
['xc_jni_init', 17448, 18464, 18476, ['        free(c_crash_dump_all_threads_whitelist);']]
restartcode
['xc_jni_init', 17448, 18476, 18476, ['    return (0 == r_crash && 0 == r_trace) ? 0 : XCC_ERRNO_JNI;']]
code
funcline addr: 18480
funcline addr: 18484
funcline addr: 18488
funcline addr: 18492
funcline addr: 18496
funcline addr: 18500
funcline addr: 18504
funcline addr: 18508
['xc_jni_init', 17448, 18476, 18508, ['    return (0 == r_crash && 0 == r_trace) ? 0 : XCC_ERRNO_JNI;']]
restartcode
['xc_jni_init', 17448, 18508, 18508, ['}']]
code
funcline addr: 18512
funcline addr: 18516
funcline addr: 18520
funcline addr: 18524
funcline addr: 18528
funcline addr: 18532
funcline addr: 18536
funcline addr: 18540
funcline addr: 18544
funcline addr: 18548
funcline addr: 18552
funcline addr: 18556
funcline addr: 18560
['xc_jni_init', 17448, 18508, 18560, ['}']]
restartcode
['xc_jni_init', 17448, 18560, 18560, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
code
funcline addr: 18564
funcline addr: 18568
['xc_jni_init', 17448, 18560, 18568, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
restartcode
['xc_jni_init', 17448, 18568, 18568, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
code
funcline addr: 18572
funcline addr: 18576
funcline addr: 18580
['xc_jni_init', 17448, 18568, 18580, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
restartcode
['xc_jni_init', 17448, 18580, 18580, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
code
funcline addr: 18584
['xc_jni_init', 17448, 18580, 18584, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 18584, 18584, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
code
funcline addr: 18588
funcline addr: 18592
['xc_jni_init', 17448, 18584, 18592, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
restartcode
['xc_jni_init', 17448, 18592, 18592, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
code
funcline addr: 18596
['xc_jni_init', 17448, 18592, 18596, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 18596, 18596, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
code
funcline addr: 18600
['xc_jni_init', 17448, 18596, 18600, ['    xc_common_start_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
restartcode
['xc_jni_init', 17448, 18600, 18600, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
code
funcline addr: 18604
funcline addr: 18608
funcline addr: 18612
funcline addr: 18616
['xc_jni_init', 17448, 18600, 18616, ['    if(NULL == localtime_r((time_t*)(&(tv.tv_sec)), &tm)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 18616, 18616, ['    xc_common_api_level = api_level;']]
code
funcline addr: 18620
funcline addr: 18624
['xc_jni_init', 17448, 18616, 18624, ['    xc_common_api_level = api_level;']]
restartcode
['xc_jni_init', 17448, 18624, 18624, ['    xc_common_time_zone = tm.tm_gmtoff;']]
code
funcline addr: 18628
['xc_jni_init', 17448, 18624, 18628, ['    xc_common_time_zone = tm.tm_gmtoff;']]
restartcode
['xc_jni_init', 17448, 18628, 18628, ['    return __builtin_strlen(s);']]
code
funcline addr: 18632
funcline addr: 18636
funcline addr: 18640
['xc_jni_init', 17448, 18628, 18640, ['    return __builtin_strlen(s);']]
restartcode
['xc_jni_init', 17448, 18640, 18640, ['    XC_COMMON_FREE_STR(os_version);']]
code
funcline addr: 18644
['xc_jni_init', 17448, 18640, 18644, ['    XC_COMMON_FREE_STR(os_version);']]
restartcode
['xc_jni_init', 17448, 18644, 18644, ['    XC_COMMON_DUP_STR(os_version);']]
code
funcline addr: 18648
funcline addr: 18652
funcline addr: 18656
funcline addr: 18660
funcline addr: 18664
funcline addr: 18668
funcline addr: 18672
funcline addr: 18676
funcline addr: 18680
funcline addr: 18684
funcline addr: 18688
funcline addr: 18692
funcline addr: 18696
funcline addr: 18700
funcline addr: 18704
funcline addr: 18708
['xc_jni_init', 17448, 18644, 18708, ['    XC_COMMON_DUP_STR(os_version);']]
restartcode
['xc_jni_init', 17448, 18708, 18708, ['    XC_COMMON_DUP_STR(abi_list);']]
code
funcline addr: 18712
funcline addr: 18716
funcline addr: 18720
funcline addr: 18724
funcline addr: 18728
funcline addr: 18732
funcline addr: 18736
funcline addr: 18740
funcline addr: 18744
funcline addr: 18748
funcline addr: 18752
funcline addr: 18756
funcline addr: 18760
funcline addr: 18764
['xc_jni_init', 17448, 18708, 18764, ['    XC_COMMON_DUP_STR(abi_list);']]
restartcode
['xc_jni_init', 17448, 18764, 18764, ['    XC_COMMON_DUP_STR(manufacturer);']]
code
funcline addr: 18768
funcline addr: 18772
funcline addr: 18776
funcline addr: 18780
funcline addr: 18784
funcline addr: 18788
funcline addr: 18792
funcline addr: 18796
funcline addr: 18800
funcline addr: 18804
funcline addr: 18808
['xc_jni_init', 17448, 18764, 18808, ['    XC_COMMON_DUP_STR(manufacturer);']]
restartcode
['xc_jni_init', 17448, 18808, 18808, ['    XC_COMMON_DUP_STR(brand);']]
code
funcline addr: 18812
funcline addr: 18816
funcline addr: 18820
funcline addr: 18824
funcline addr: 18828
funcline addr: 18832
funcline addr: 18836
funcline addr: 18840
funcline addr: 18844
funcline addr: 18848
funcline addr: 18852
funcline addr: 18856
funcline addr: 18860
['xc_jni_init', 17448, 18808, 18860, ['    XC_COMMON_DUP_STR(brand);']]
restartcode
['xc_jni_init', 17448, 18860, 18860, ['    XC_COMMON_DUP_STR(model);']]
code
funcline addr: 18864
funcline addr: 18868
funcline addr: 18872
funcline addr: 18876
funcline addr: 18880
funcline addr: 18884
funcline addr: 18888
funcline addr: 18892
funcline addr: 18896
funcline addr: 18900
funcline addr: 18904
funcline addr: 18908
funcline addr: 18912
['xc_jni_init', 17448, 18860, 18912, ['    XC_COMMON_DUP_STR(model);']]
restartcode
['xc_jni_init', 17448, 18912, 18912, ['    XC_COMMON_DUP_STR(build_fingerprint);']]
code
funcline addr: 18916
funcline addr: 18920
funcline addr: 18924
funcline addr: 18928
funcline addr: 18932
funcline addr: 18936
funcline addr: 18940
funcline addr: 18944
funcline addr: 18948
funcline addr: 18952
funcline addr: 18956
funcline addr: 18960
funcline addr: 18964
['xc_jni_init', 17448, 18912, 18964, ['    XC_COMMON_DUP_STR(build_fingerprint);']]
restartcode
['xc_jni_init', 17448, 18964, 18964, ['    XC_COMMON_DUP_STR(app_id);']]
code
funcline addr: 18968
funcline addr: 18972
funcline addr: 18976
funcline addr: 18980
funcline addr: 18984
funcline addr: 18988
funcline addr: 18992
funcline addr: 18996
funcline addr: 19000
funcline addr: 19004
funcline addr: 19008
funcline addr: 19012
funcline addr: 19016
['xc_jni_init', 17448, 18964, 19016, ['    XC_COMMON_DUP_STR(app_id);']]
restartcode
['xc_jni_init', 17448, 19016, 19016, ['    XC_COMMON_DUP_STR(app_version);']]
code
funcline addr: 19020
funcline addr: 19024
funcline addr: 19028
funcline addr: 19032
funcline addr: 19036
funcline addr: 19040
funcline addr: 19044
funcline addr: 19048
funcline addr: 19052
funcline addr: 19056
funcline addr: 19060
funcline addr: 19064
funcline addr: 19068
['xc_jni_init', 17448, 19016, 19068, ['    XC_COMMON_DUP_STR(app_version);']]
restartcode
['xc_jni_init', 17448, 19068, 19068, ['    XC_COMMON_DUP_STR(app_lib_dir);']]
code
funcline addr: 19072
funcline addr: 19076
funcline addr: 19080
funcline addr: 19084
funcline addr: 19088
funcline addr: 19092
funcline addr: 19096
funcline addr: 19100
funcline addr: 19104
funcline addr: 19108
funcline addr: 19112
funcline addr: 19116
funcline addr: 19120
['xc_jni_init', 17448, 19068, 19120, ['    XC_COMMON_DUP_STR(app_lib_dir);']]
restartcode
['xc_jni_init', 17448, 19120, 19120, ['    XC_COMMON_DUP_STR(log_dir);']]
code
funcline addr: 19124
funcline addr: 19128
funcline addr: 19132
funcline addr: 19136
funcline addr: 19140
funcline addr: 19144
funcline addr: 19148
funcline addr: 19152
funcline addr: 19156
funcline addr: 19160
funcline addr: 19164
['xc_jni_init', 17448, 19120, 19164, ['    XC_COMMON_DUP_STR(log_dir);']]
restartcode
['xc_jni_init', 17448, 19164, 19164, ['']]
code
['xc_jni_init', 17448, 19164, 19164, ['void xc_util_get_kernel_version(char *buf, size_t len)']]
code
['xc_jni_init', 17448, 19164, 19164, ['{']]
code
['xc_jni_init', 17448, 19164, 19164, ['    struct utsname uts;']]
code
['xc_jni_init', 17448, 19164, 19164, ['']]
code
['xc_jni_init', 17448, 19164, 19164, ['    if(0 != uname(&uts))']]
code
funcline addr: 19168
funcline addr: 19172
funcline addr: 19176
funcline addr: 19180
funcline addr: 19184
['xc_jni_init', 17448, 19164, 19184, ['    if(0 != uname(&uts))']]
restartcode
['xc_jni_init', 17448, 19184, 19184, ['    {']]
code
['xc_jni_init', 17448, 19184, 19184, ['        strncpy(buf, "unknown", len);']]
code
['xc_jni_init', 17448, 19184, 19184, ["        buf[len - 1] = '\\0';"]]
code
funcline addr: 19188
funcline addr: 19192
['xc_jni_init', 17448, 19184, 19192, ["        buf[len - 1] = '\\0';"]]
restartcode
['xc_jni_init', 17448, 19192, 19192, ['        return;']]
code
['xc_jni_init', 17448, 19192, 19192, ['    }']]
code
['xc_jni_init', 17448, 19192, 19192, ['']]
code
['xc_jni_init', 17448, 19192, 19192, ['    snprintf(buf, len, "%s version %s %s (%s)", uts.sysname, uts.release, uts.version, uts.machine);']]
code
funcline addr: 19196
funcline addr: 19200
funcline addr: 19204
funcline addr: 19208
funcline addr: 19212
funcline addr: 19216
funcline addr: 19220
funcline addr: 19224
['xc_jni_init', 17448, 19192, 19224, ['    snprintf(buf, len, "%s version %s %s (%s)", uts.sysname, uts.release, uts.version, uts.machine);']]
restartcode
['xc_jni_init', 17448, 19224, 19224, ['    XC_COMMON_DUP_STR(kernel_version);']]
code
funcline addr: 19228
funcline addr: 19232
funcline addr: 19236
funcline addr: 19240
funcline addr: 19244
funcline addr: 19248
funcline addr: 19252
funcline addr: 19256
funcline addr: 19260
funcline addr: 19264
funcline addr: 19268
['xc_jni_init', 17448, 19224, 19268, ['    XC_COMMON_DUP_STR(kernel_version);']]
restartcode
['xc_jni_init', 17448, 19268, 19268, ['    xc_common_process_id = getpid();']]
code
funcline addr: 19272
funcline addr: 19276
['xc_jni_init', 17448, 19268, 19276, ['    xc_common_process_id = getpid();']]
restartcode
['xc_jni_init', 17448, 19276, 19276, ['']]
code
['xc_jni_init', 17448, 19276, 19276, ['void xcc_util_get_process_name(pid_t pid, char *buf, size_t len)']]
code
['xc_jni_init', 17448, 19276, 19276, ['{']]
code
['xc_jni_init', 17448, 19276, 19276, ['    char path[128];']]
code
['xc_jni_init', 17448, 19276, 19276, ['']]
code
['xc_jni_init', 17448, 19276, 19276, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/cmdline", pid);']]
code
funcline addr: 19280
funcline addr: 19284
funcline addr: 19288
funcline addr: 19292
funcline addr: 19296
funcline addr: 19300
funcline addr: 19304
['xc_jni_init', 17448, 19276, 19304, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/cmdline", pid);']]
restartcode
['xc_jni_init', 17448, 19304, 19304, ['    ']]
code
['xc_jni_init', 17448, 19304, 19304, ['    if(0 != xcc_util_get_process_thread_name(path, buf, len))']]
code
funcline addr: 19308
funcline addr: 19312
funcline addr: 19316
funcline addr: 19320
funcline addr: 19324
funcline addr: 19328
funcline addr: 19332
['xc_jni_init', 17448, 19304, 19332, ['    if(0 != xcc_util_get_process_thread_name(path, buf, len))']]
restartcode
['xc_jni_init', 17448, 19332, 19332, ['    XC_COMMON_DUP_STR(process_name);']]
code
funcline addr: 19336
funcline addr: 19340
funcline addr: 19344
funcline addr: 19348
funcline addr: 19352
funcline addr: 19356
funcline addr: 19360
funcline addr: 19364
['xc_jni_init', 17448, 19332, 19364, ['    XC_COMMON_DUP_STR(process_name);']]
restartcode
['xc_jni_init', 17448, 19364, 19364, ['    XC_COMMON_FREE_STR(os_version);']]
code
funcline addr: 19368
funcline addr: 19372
funcline addr: 19376
funcline addr: 19380
funcline addr: 19384
funcline addr: 19388
funcline addr: 19392
['xc_jni_init', 17448, 19364, 19392, ['    XC_COMMON_FREE_STR(os_version);']]
restartcode
['xc_jni_init', 17448, 19392, 19392, ['    XC_COMMON_FREE_STR(abi_list);']]
code
funcline addr: 19396
funcline addr: 19400
funcline addr: 19404
funcline addr: 19408
funcline addr: 19412
funcline addr: 19416
['xc_jni_init', 17448, 19392, 19416, ['    XC_COMMON_FREE_STR(abi_list);']]
restartcode
['xc_jni_init', 17448, 19416, 19416, ['    XC_COMMON_FREE_STR(manufacturer);']]
code
funcline addr: 19420
funcline addr: 19424
funcline addr: 19428
funcline addr: 19432
funcline addr: 19436
['xc_jni_init', 17448, 19416, 19436, ['    XC_COMMON_FREE_STR(manufacturer);']]
restartcode
['xc_jni_init', 17448, 19436, 19436, ['    XC_COMMON_FREE_STR(brand);']]
code
funcline addr: 19440
funcline addr: 19444
funcline addr: 19448
funcline addr: 19452
funcline addr: 19456
['xc_jni_init', 17448, 19436, 19456, ['    XC_COMMON_FREE_STR(brand);']]
restartcode
['xc_jni_init', 17448, 19456, 19456, ['    XC_COMMON_FREE_STR(model);']]
code
funcline addr: 19460
funcline addr: 19464
funcline addr: 19468
funcline addr: 19472
funcline addr: 19476
['xc_jni_init', 17448, 19456, 19476, ['    XC_COMMON_FREE_STR(model);']]
restartcode
['xc_jni_init', 17448, 19476, 19476, ['    XC_COMMON_FREE_STR(build_fingerprint);']]
code
funcline addr: 19480
funcline addr: 19484
funcline addr: 19488
funcline addr: 19492
funcline addr: 19496
['xc_jni_init', 17448, 19476, 19496, ['    XC_COMMON_FREE_STR(build_fingerprint);']]
restartcode
['xc_jni_init', 17448, 19496, 19496, ['    XC_COMMON_FREE_STR(app_id);']]
code
funcline addr: 19500
funcline addr: 19504
funcline addr: 19508
funcline addr: 19512
funcline addr: 19516
['xc_jni_init', 17448, 19496, 19516, ['    XC_COMMON_FREE_STR(app_id);']]
restartcode
['xc_jni_init', 17448, 19516, 19516, ['    XC_COMMON_FREE_STR(app_version);']]
code
funcline addr: 19520
funcline addr: 19524
funcline addr: 19528
funcline addr: 19532
['xc_jni_init', 17448, 19516, 19532, ['    XC_COMMON_FREE_STR(app_version);']]
restartcode
['xc_jni_init', 17448, 19532, 19532, ['    XC_COMMON_FREE_STR(app_lib_dir);']]
code
funcline addr: 19536
funcline addr: 19540
funcline addr: 19544
funcline addr: 19548
funcline addr: 19552
funcline addr: 19556
funcline addr: 19560
['xc_jni_init', 17448, 19532, 19560, ['    XC_COMMON_FREE_STR(app_lib_dir);']]
restartcode
['xc_jni_init', 17448, 19560, 19560, ['    XC_COMMON_FREE_STR(log_dir);']]
code
funcline addr: 19564
funcline addr: 19568
funcline addr: 19572
funcline addr: 19576
funcline addr: 19580
['xc_jni_init', 17448, 19560, 19580, ['    XC_COMMON_FREE_STR(log_dir);']]
restartcode
['xc_jni_init', 17448, 19580, 19580, ['    XC_COMMON_FREE_STR(kernel_version);']]
code
funcline addr: 19584
funcline addr: 19588
funcline addr: 19592
funcline addr: 19596
funcline addr: 19600
['xc_jni_init', 17448, 19580, 19600, ['    XC_COMMON_FREE_STR(kernel_version);']]
restartcode
['xc_jni_init', 17448, 19600, 19600, ['    XC_COMMON_FREE_STR(process_name);']]
code
funcline addr: 19604
funcline addr: 19608
funcline addr: 19612
funcline addr: 19616
funcline addr: 19620
['xc_jni_init', 17448, 19600, 19620, ['    XC_COMMON_FREE_STR(process_name);']]
restartcode
['xc_jni_init', 17448, 19620, 19620, ['    if(0 != xc_common_init((int)api_level, ']]
code
funcline addr: 19624
['xc_jni_init', 17448, 19620, 19624, ['    if(0 != xc_common_init((int)api_level, ']]
restartcode
['xc_jni_init', 17448, 19624, 19624, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
code
funcline addr: 19628
['xc_jni_init', 17448, 19624, 19628, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
restartcode
['xc_jni_init', 17448, 19628, 19628, ['    if(crash_enable)']]
code
funcline addr: 19632
funcline addr: 19636
funcline addr: 19640
funcline addr: 19644
funcline addr: 19648
funcline addr: 19652
funcline addr: 19656
funcline addr: 19660
funcline addr: 19664
['xc_jni_init', 17448, 19628, 19664, ['    if(crash_enable)']]
restartcode
['xc_jni_init', 17448, 19664, 19664, ['        if(crash_dump_all_threads_whitelist)']]
code
funcline addr: 19668
funcline addr: 19672
funcline addr: 19676
['xc_jni_init', 17448, 19664, 19676, ['        if(crash_dump_all_threads_whitelist)']]
restartcode
['xc_jni_init', 17448, 19676, 19676, ['            len = (size_t)(*env)->GetArrayLength(env, crash_dump_all_threads_whitelist);']]
code
funcline addr: 19680
funcline addr: 19684
funcline addr: 19688
funcline addr: 19692
funcline addr: 19696
funcline addr: 19700
['xc_jni_init', 17448, 19676, 19700, ['            len = (size_t)(*env)->GetArrayLength(env, crash_dump_all_threads_whitelist);']]
restartcode
['xc_jni_init', 17448, 19700, 19700, ['            if(len > 0)']]
code
funcline addr: 19704
funcline addr: 19708
['xc_jni_init', 17448, 19700, 19708, ['            if(len > 0)']]
restartcode
['xc_jni_init', 17448, 19708, 19708, ['                if(NULL != (c_crash_dump_all_threads_whitelist = calloc(len, sizeof(char *))))']]
code
funcline addr: 19712
funcline addr: 19716
funcline addr: 19720
funcline addr: 19724
funcline addr: 19728
funcline addr: 19732
['xc_jni_init', 17448, 19708, 19732, ['                if(NULL != (c_crash_dump_all_threads_whitelist = calloc(len, sizeof(char *))))']]
restartcode
['xc_jni_init', 17448, 19732, 19732, ['                    for(i = 0; i < len; i++)']]
code
funcline addr: 19736
funcline addr: 19740
['xc_jni_init', 17448, 19732, 19740, ['                    for(i = 0; i < len; i++)']]
restartcode
['xc_jni_init', 17448, 19740, 19740, ['                        tmp_str = (jstring)((*env)->GetObjectArrayElement(env, crash_dump_all_threads_whitelist, (jsize)i));']]
code
funcline addr: 19744
funcline addr: 19748
funcline addr: 19752
funcline addr: 19756
funcline addr: 19760
funcline addr: 19764
['xc_jni_init', 17448, 19740, 19764, ['                        tmp_str = (jstring)((*env)->GetObjectArrayElement(env, crash_dump_all_threads_whitelist, (jsize)i));']]
restartcode
['xc_jni_init', 17448, 19764, 19764, ['                        c_crash_dump_all_threads_whitelist[i] = (tmp_str ? (*env)->GetStringUTFChars(env, tmp_str, 0) : NULL);']]
code
funcline addr: 19768
funcline addr: 19772
funcline addr: 19776
funcline addr: 19780
funcline addr: 19784
funcline addr: 19788
funcline addr: 19792
['xc_jni_init', 17448, 19764, 19792, ['                        c_crash_dump_all_threads_whitelist[i] = (tmp_str ? (*env)->GetStringUTFChars(env, tmp_str, 0) : NULL);']]
restartcode
['xc_jni_init', 17448, 19792, 19792, ['                    for(i = 0; i < len; i++)']]
code
funcline addr: 19796
funcline addr: 19800
funcline addr: 19804
funcline addr: 19808
funcline addr: 19812
funcline addr: 19816
funcline addr: 19820
funcline addr: 19824
funcline addr: 19828
funcline addr: 19832
funcline addr: 19836
funcline addr: 19840
funcline addr: 19844
funcline addr: 19848
funcline addr: 19852
funcline addr: 19856
funcline addr: 19860
['xc_jni_init', 17448, 19792, 19860, ['                    for(i = 0; i < len; i++)']]
restartcode
['xc_jni_init', 17448, 19860, 19860, ['                                crash_rethrow ? 1 : 0,']]
code
funcline addr: 19864
funcline addr: 19868
['xc_jni_init', 17448, 19860, 19868, ['                                crash_rethrow ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19868, 19868, ['                                crash_dump_elf_hash ? 1 : 0,']]
code
funcline addr: 19872
funcline addr: 19876
['xc_jni_init', 17448, 19868, 19876, ['                                crash_dump_elf_hash ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19876, 19876, ['                                crash_dump_map ? 1 : 0,']]
code
funcline addr: 19880
funcline addr: 19884
funcline addr: 19888
['xc_jni_init', 17448, 19876, 19888, ['                                crash_dump_map ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19888, 19888, ['                                crash_dump_fds ? 1 : 0,']]
code
funcline addr: 19892
funcline addr: 19896
funcline addr: 19900
['xc_jni_init', 17448, 19888, 19900, ['                                crash_dump_fds ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19900, 19900, ['                                crash_dump_network_info ? 1 : 0,']]
code
funcline addr: 19904
funcline addr: 19908
funcline addr: 19912
['xc_jni_init', 17448, 19900, 19912, ['                                crash_dump_network_info ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19912, 19912, ['                                crash_dump_all_threads ? 1 : 0,']]
code
funcline addr: 19916
funcline addr: 19920
funcline addr: 19924
funcline addr: 19928
funcline addr: 19932
funcline addr: 19936
funcline addr: 19940
funcline addr: 19944
funcline addr: 19948
funcline addr: 19952
funcline addr: 19956
funcline addr: 19960
['xc_jni_init', 17448, 19912, 19960, ['                                crash_dump_all_threads ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 19960, 19960, ['                  int dump_all_threads,']]
code
['xc_jni_init', 17448, 19960, 19960, ['                  unsigned int dump_all_threads_count_max,']]
code
['xc_jni_init', 17448, 19960, 19960, ['                  const char **dump_all_threads_whitelist,']]
code
['xc_jni_init', 17448, 19960, 19960, ['                  size_t dump_all_threads_whitelist_len)']]
code
['xc_jni_init', 17448, 19960, 19960, ['{']]
code
['xc_jni_init', 17448, 19960, 19960, ['    xc_crash_prepared_fd = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
code
funcline addr: 19964
funcline addr: 19968
funcline addr: 19972
funcline addr: 19976
funcline addr: 19980
funcline addr: 19984
funcline addr: 19988
funcline addr: 19992
['xc_jni_init', 17448, 19960, 19992, ['    xc_crash_prepared_fd = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR));']]
restartcode
['xc_jni_init', 17448, 19992, 19992, ['    xc_crash_rethrow = rethrow;']]
code
funcline addr: 19996
funcline addr: 20000
['xc_jni_init', 17448, 19992, 20000, ['    xc_crash_rethrow = rethrow;']]
restartcode
['xc_jni_init', 17448, 20000, 20000, ['    if(NULL == (xc_crash_emergency = calloc(XC_CRASH_EMERGENCY_BUF_LEN, 1))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 20004
funcline addr: 20008
['xc_jni_init', 17448, 20000, 20008, ['    if(NULL == (xc_crash_emergency = calloc(XC_CRASH_EMERGENCY_BUF_LEN, 1))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 20008, 20008, ['    xc_crash_rethrow = rethrow;']]
code
funcline addr: 20012
['xc_jni_init', 17448, 20008, 20012, ['    xc_crash_rethrow = rethrow;']]
restartcode
['xc_jni_init', 17448, 20012, 20012, ['    if(NULL == (xc_crash_emergency = calloc(XC_CRASH_EMERGENCY_BUF_LEN, 1))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 20016
funcline addr: 20020
funcline addr: 20024
['xc_jni_init', 17448, 20012, 20024, ['    if(NULL == (xc_crash_emergency = calloc(XC_CRASH_EMERGENCY_BUF_LEN, 1))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 20024, 20024, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 20028
funcline addr: 20032
['xc_jni_init', 17448, 20024, 20032, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 20032, 20032, ['    if(NULL == s1 || NULL == s2) return NULL;']]
code
funcline addr: 20036
funcline addr: 20040
funcline addr: 20044
funcline addr: 20048
['xc_jni_init', 17448, 20032, 20048, ['    if(NULL == s1 || NULL == s2) return NULL;']]
restartcode
['xc_jni_init', 17448, 20048, 20048, ['        return __strlen_chk(s, bos);']]
code
funcline addr: 20052
funcline addr: 20056
funcline addr: 20060
funcline addr: 20064
funcline addr: 20068
['xc_jni_init', 17448, 20048, 20068, ['        return __strlen_chk(s, bos);']]
restartcode
['xc_jni_init', 17448, 20068, 20068, ['    if(NULL == (s = malloc(s1_len + s2_len + 1))) return NULL;']]
code
funcline addr: 20072
funcline addr: 20076
funcline addr: 20080
funcline addr: 20084
funcline addr: 20088
funcline addr: 20092
funcline addr: 20096
['xc_jni_init', 17448, 20068, 20096, ['    if(NULL == (s = malloc(s1_len + s2_len + 1))) return NULL;']]
restartcode
['xc_jni_init', 17448, 20096, 20096, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 20100
funcline addr: 20104
funcline addr: 20108
funcline addr: 20112
funcline addr: 20116
funcline addr: 20120
['xc_jni_init', 17448, 20096, 20120, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xc_jni_init', 17448, 20120, 20120, ['    memcpy(s + s1_len, s2, s2_len + 1);']]
code
funcline addr: 20124
funcline addr: 20128
funcline addr: 20132
funcline addr: 20136
funcline addr: 20140
['xc_jni_init', 17448, 20120, 20140, ['    memcpy(s + s1_len, s2, s2_len + 1);']]
restartcode
['xc_jni_init', 17448, 20140, 20140, ['']]
code
['xc_jni_init', 17448, 20140, 20140, ['    //init the local unwinder for fallback mode']]
code
['xc_jni_init', 17448, 20140, 20140, ['    xcc_unwind_init(xc_common_api_level);']]
code
funcline addr: 20144
['xc_jni_init', 17448, 20140, 20144, ['    xcc_unwind_init(xc_common_api_level);']]
restartcode
['xc_jni_init', 17448, 20144, 20144, ['    if(api_level >= 21 && api_level <= 23)']]
code
funcline addr: 20148
funcline addr: 20152
funcline addr: 20156
['xc_jni_init', 17448, 20144, 20156, ['    if(api_level >= 21 && api_level <= 23)']]
restartcode
['xc_jni_init', 17448, 20156, 20156, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 20160
funcline addr: 20164
['xc_jni_init', 17448, 20156, 20164, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 20164, 20164, ['    if(NULL == (libunwind = dlopen("libunwind.so", RTLD_NOW))) return;']]
code
funcline addr: 20168
funcline addr: 20172
funcline addr: 20176
funcline addr: 20180
funcline addr: 20184
funcline addr: 20188
funcline addr: 20192
['xc_jni_init', 17448, 20164, 20192, ['    if(NULL == (libunwind = dlopen("libunwind.so", RTLD_NOW))) return;']]
restartcode
['xc_jni_init', 17448, 20192, 20192, ['    if(NULL == (unw_init_local = (t_unw_init_local)dlsym(libunwind, "_U"UNW_TARGET"_init_local"))) goto err;']]
code
funcline addr: 20196
funcline addr: 20200
funcline addr: 20204
funcline addr: 20208
funcline addr: 20212
funcline addr: 20216
['xc_jni_init', 17448, 20192, 20216, ['    if(NULL == (unw_init_local = (t_unw_init_local)dlsym(libunwind, "_U"UNW_TARGET"_init_local"))) goto err;']]
restartcode
['xc_jni_init', 17448, 20216, 20216, ['    if(NULL == (unw_get_reg = (t_unw_get_reg)dlsym(libunwind, "_U"UNW_TARGET"_get_reg"))) goto err;']]
code
funcline addr: 20220
funcline addr: 20224
funcline addr: 20228
funcline addr: 20232
funcline addr: 20236
funcline addr: 20240
funcline addr: 20244
funcline addr: 20248
funcline addr: 20252
['xc_jni_init', 17448, 20216, 20252, ['    if(NULL == (unw_get_reg = (t_unw_get_reg)dlsym(libunwind, "_U"UNW_TARGET"_get_reg"))) goto err;']]
restartcode
['xc_jni_init', 17448, 20252, 20252, ['    if(NULL == (unw_step = (t_unw_step)dlsym(libunwind, "_U"UNW_TARGET"_step"))) goto err;']]
code
funcline addr: 20256
funcline addr: 20260
funcline addr: 20264
funcline addr: 20268
funcline addr: 20272
funcline addr: 20276
funcline addr: 20280
['xc_jni_init', 17448, 20252, 20280, ['    if(NULL == (unw_step = (t_unw_step)dlsym(libunwind, "_U"UNW_TARGET"_step"))) goto err;']]
restartcode
['xc_jni_init', 17448, 20280, 20280, ['    dlclose(libunwind);']]
code
funcline addr: 20284
funcline addr: 20288
funcline addr: 20292
['xc_jni_init', 17448, 20280, 20292, ['    dlclose(libunwind);']]
restartcode
['xc_jni_init', 17448, 20292, 20292, ['    libunwind = NULL;']]
code
funcline addr: 20296
['xc_jni_init', 17448, 20292, 20296, ['    libunwind = NULL;']]
restartcode
['xc_jni_init', 17448, 20296, 20296, ['    if(NULL == xc_common_cb_class) return;']]
code
funcline addr: 20300
funcline addr: 20304
funcline addr: 20308
['xc_jni_init', 17448, 20296, 20308, ['    if(NULL == xc_common_cb_class) return;']]
restartcode
['xc_jni_init', 17448, 20308, 20308, ['    xc_crash_cb_method = (*env)->GetStaticMethodID(env, xc_common_cb_class, XC_CRASH_CALLBACK_METHOD_NAME, XC_CRASH_CALLBACK_METHOD_SIGNATURE);']]
code
funcline addr: 20312
funcline addr: 20316
funcline addr: 20320
funcline addr: 20324
funcline addr: 20328
funcline addr: 20332
funcline addr: 20336
funcline addr: 20340
funcline addr: 20344
funcline addr: 20348
['xc_jni_init', 17448, 20308, 20348, ['    xc_crash_cb_method = (*env)->GetStaticMethodID(env, xc_common_cb_class, XC_CRASH_CALLBACK_METHOD_NAME, XC_CRASH_CALLBACK_METHOD_SIGNATURE);']]
restartcode
['xc_jni_init', 17448, 20348, 20348, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_crash_cb_method, err);']]
code
funcline addr: 20352
funcline addr: 20356
funcline addr: 20360
funcline addr: 20364
funcline addr: 20368
funcline addr: 20372
funcline addr: 20376
funcline addr: 20380
['xc_jni_init', 17448, 20348, 20380, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_crash_cb_method, err);']]
restartcode
['xc_jni_init', 17448, 20380, 20380, ['    if(xc_crash_cb_notifier >= 0)']]
code
funcline addr: 20384
funcline addr: 20388
['xc_jni_init', 17448, 20380, 20388, ['    if(xc_crash_cb_notifier >= 0)']]
restartcode
['xc_jni_init', 17448, 20388, 20388, ['    xc_crash_cb_method = NULL;']]
code
funcline addr: 20392
['xc_jni_init', 17448, 20388, 20392, ['    xc_crash_cb_method = NULL;']]
restartcode
['xc_jni_init', 17448, 20392, 20392, ['    if(xc_crash_cb_notifier >= 0)']]
code
funcline addr: 20396
['xc_jni_init', 17448, 20392, 20396, ['    if(xc_crash_cb_notifier >= 0)']]
restartcode
['xc_jni_init', 17448, 20396, 20396, ['        close(xc_crash_cb_notifier);']]
code
funcline addr: 20400
funcline addr: 20404
['xc_jni_init', 17448, 20396, 20404, ['        close(xc_crash_cb_notifier);']]
restartcode
['xc_jni_init', 17448, 20404, 20404, ['        xc_crash_cb_notifier = -1;']]
code
funcline addr: 20408
funcline addr: 20412
['xc_jni_init', 17448, 20404, 20412, ['        xc_crash_cb_notifier = -1;']]
restartcode
['xc_jni_init', 17448, 20412, 20412, ['    return __builtin_memset(s, c, n);']]
code
funcline addr: 20416
funcline addr: 20420
funcline addr: 20424
funcline addr: 20428
funcline addr: 20432
funcline addr: 20436
funcline addr: 20440
funcline addr: 20444
funcline addr: 20448
funcline addr: 20452
['xc_jni_init', 17448, 20412, 20452, ['    return __builtin_memset(s, c, n);']]
restartcode
['xc_jni_init', 17448, 20452, 20452, ['    memset(&xc_crash_spot, 0, sizeof(xcc_spot_t));']]
code
['xc_jni_init', 17448, 20452, 20452, ['    xc_crash_spot.api_level = xc_common_api_level;']]
code
['xc_jni_init', 17448, 20452, 20452, ['    xc_crash_spot.crash_pid = xc_common_process_id;']]
code
['xc_jni_init', 17448, 20452, 20452, ['    xc_crash_spot.start_time = xc_common_start_time;']]
code
['xc_jni_init', 17448, 20452, 20452, ['    xc_crash_spot.time_zone = xc_common_time_zone;']]
code
['xc_jni_init', 17448, 20452, 20452, ['    xc_crash_spot.logcat_system_lines = logcat_system_lines;']]
code
funcline addr: 20456
['xc_jni_init', 17448, 20452, 20456, ['    xc_crash_spot.logcat_system_lines = logcat_system_lines;']]
restartcode
['xc_jni_init', 17448, 20456, 20456, ['    xc_crash_spot.logcat_events_lines = logcat_events_lines;']]
code
['xc_jni_init', 17448, 20456, 20456, ['    xc_crash_spot.logcat_main_lines = logcat_main_lines;']]
code
['xc_jni_init', 17448, 20456, 20456, ['    xc_crash_spot.dump_elf_hash = dump_elf_hash;']]
code
funcline addr: 20460
funcline addr: 20464
funcline addr: 20468
funcline addr: 20472
['xc_jni_init', 17448, 20456, 20472, ['    xc_crash_spot.dump_elf_hash = dump_elf_hash;']]
restartcode
['xc_jni_init', 17448, 20472, 20472, ['    xc_crash_spot.api_level = xc_common_api_level;']]
code
funcline addr: 20476
['xc_jni_init', 17448, 20472, 20476, ['    xc_crash_spot.api_level = xc_common_api_level;']]
restartcode
['xc_jni_init', 17448, 20476, 20476, ['    xc_crash_spot.dump_map = dump_map;']]
code
funcline addr: 20480
funcline addr: 20484
['xc_jni_init', 17448, 20476, 20484, ['    xc_crash_spot.dump_map = dump_map;']]
restartcode
['xc_jni_init', 17448, 20484, 20484, ['    xc_crash_spot.logcat_events_lines = logcat_events_lines;']]
code
funcline addr: 20488
funcline addr: 20492
['xc_jni_init', 17448, 20484, 20492, ['    xc_crash_spot.logcat_events_lines = logcat_events_lines;']]
restartcode
['xc_jni_init', 17448, 20492, 20492, ['    xc_crash_spot.dump_fds = dump_fds;']]
code
['xc_jni_init', 17448, 20492, 20492, ['    xc_crash_spot.dump_network_info = dump_network_info;']]
code
['xc_jni_init', 17448, 20492, 20492, ['    xc_crash_spot.dump_all_threads = dump_all_threads;']]
code
['xc_jni_init', 17448, 20492, 20492, ['    xc_crash_spot.dump_all_threads_count_max = dump_all_threads_count_max;']]
code
['xc_jni_init', 17448, 20492, 20492, ['    xc_crash_spot.os_version_len = strlen(xc_common_os_version);']]
code
funcline addr: 20496
['xc_jni_init', 17448, 20492, 20496, ['    xc_crash_spot.os_version_len = strlen(xc_common_os_version);']]
restartcode
['xc_jni_init', 17448, 20496, 20496, ['    xc_crash_spot.dump_fds = dump_fds;']]
code
funcline addr: 20500
funcline addr: 20504
['xc_jni_init', 17448, 20496, 20504, ['    xc_crash_spot.dump_fds = dump_fds;']]
restartcode
['xc_jni_init', 17448, 20504, 20504, ['    xc_crash_spot.logcat_main_lines = logcat_main_lines;']]
code
funcline addr: 20508
['xc_jni_init', 17448, 20504, 20508, ['    xc_crash_spot.logcat_main_lines = logcat_main_lines;']]
restartcode
['xc_jni_init', 17448, 20508, 20508, ['    xc_crash_spot.start_time = xc_common_start_time;']]
code
funcline addr: 20512
['xc_jni_init', 17448, 20508, 20512, ['    xc_crash_spot.start_time = xc_common_start_time;']]
restartcode
['xc_jni_init', 17448, 20512, 20512, ['    xc_crash_spot.api_level = xc_common_api_level;']]
code
funcline addr: 20516
['xc_jni_init', 17448, 20512, 20516, ['    xc_crash_spot.api_level = xc_common_api_level;']]
restartcode
['xc_jni_init', 17448, 20516, 20516, ['    xc_crash_spot.dump_network_info = dump_network_info;']]
code
funcline addr: 20520
funcline addr: 20524
funcline addr: 20528
['xc_jni_init', 17448, 20516, 20528, ['    xc_crash_spot.dump_network_info = dump_network_info;']]
restartcode
['xc_jni_init', 17448, 20528, 20528, ['    xc_crash_spot.crash_pid = xc_common_process_id;']]
code
funcline addr: 20532
['xc_jni_init', 17448, 20528, 20532, ['    xc_crash_spot.crash_pid = xc_common_process_id;']]
restartcode
['xc_jni_init', 17448, 20532, 20532, ['    xc_crash_spot.start_time = xc_common_start_time;']]
code
funcline addr: 20536
['xc_jni_init', 17448, 20532, 20536, ['    xc_crash_spot.start_time = xc_common_start_time;']]
restartcode
['xc_jni_init', 17448, 20536, 20536, ['    xc_crash_spot.dump_all_threads = dump_all_threads;']]
code
funcline addr: 20540
['xc_jni_init', 17448, 20536, 20540, ['    xc_crash_spot.dump_all_threads = dump_all_threads;']]
restartcode
['xc_jni_init', 17448, 20540, 20540, ['    xc_crash_spot.time_zone = xc_common_time_zone;']]
code
funcline addr: 20544
['xc_jni_init', 17448, 20540, 20544, ['    xc_crash_spot.time_zone = xc_common_time_zone;']]
restartcode
['xc_jni_init', 17448, 20544, 20544, ['    xc_crash_spot.dump_all_threads_count_max = dump_all_threads_count_max;']]
code
funcline addr: 20548
['xc_jni_init', 17448, 20544, 20548, ['    xc_crash_spot.dump_all_threads_count_max = dump_all_threads_count_max;']]
restartcode
['xc_jni_init', 17448, 20548, 20548, ['    return __builtin_strlen(s);']]
code
funcline addr: 20552
['xc_jni_init', 17448, 20548, 20552, ['    return __builtin_strlen(s);']]
restartcode
['xc_jni_init', 17448, 20552, 20552, ['    xc_crash_spot.kernel_version_len = strlen(xc_common_kernel_version);']]
code
funcline addr: 20556
funcline addr: 20560
['xc_jni_init', 17448, 20552, 20560, ['    xc_crash_spot.kernel_version_len = strlen(xc_common_kernel_version);']]
restartcode
['xc_jni_init', 17448, 20560, 20560, ['    xc_crash_spot.os_version_len = strlen(xc_common_os_version);']]
code
funcline addr: 20564
funcline addr: 20568
['xc_jni_init', 17448, 20560, 20568, ['    xc_crash_spot.os_version_len = strlen(xc_common_os_version);']]
restartcode
['xc_jni_init', 17448, 20568, 20568, ['    xc_crash_spot.abi_list_len = strlen(xc_common_abi_list);']]
code
funcline addr: 20572
funcline addr: 20576
['xc_jni_init', 17448, 20568, 20576, ['    xc_crash_spot.abi_list_len = strlen(xc_common_abi_list);']]
restartcode
['xc_jni_init', 17448, 20576, 20576, ['    xc_crash_spot.kernel_version_len = strlen(xc_common_kernel_version);']]
code
funcline addr: 20580
funcline addr: 20584
['xc_jni_init', 17448, 20576, 20584, ['    xc_crash_spot.kernel_version_len = strlen(xc_common_kernel_version);']]
restartcode
['xc_jni_init', 17448, 20584, 20584, ['    xc_crash_spot.manufacturer_len = strlen(xc_common_manufacturer);']]
code
funcline addr: 20588
funcline addr: 20592
['xc_jni_init', 17448, 20584, 20592, ['    xc_crash_spot.manufacturer_len = strlen(xc_common_manufacturer);']]
restartcode
['xc_jni_init', 17448, 20592, 20592, ['    xc_crash_spot.abi_list_len = strlen(xc_common_abi_list);']]
code
funcline addr: 20596
funcline addr: 20600
['xc_jni_init', 17448, 20592, 20600, ['    xc_crash_spot.abi_list_len = strlen(xc_common_abi_list);']]
restartcode
['xc_jni_init', 17448, 20600, 20600, ['    xc_crash_spot.brand_len = strlen(xc_common_brand);']]
code
funcline addr: 20604
funcline addr: 20608
['xc_jni_init', 17448, 20600, 20608, ['    xc_crash_spot.brand_len = strlen(xc_common_brand);']]
restartcode
['xc_jni_init', 17448, 20608, 20608, ['    xc_crash_spot.manufacturer_len = strlen(xc_common_manufacturer);']]
code
funcline addr: 20612
funcline addr: 20616
['xc_jni_init', 17448, 20608, 20616, ['    xc_crash_spot.manufacturer_len = strlen(xc_common_manufacturer);']]
restartcode
['xc_jni_init', 17448, 20616, 20616, ['    xc_crash_spot.model_len = strlen(xc_common_model);']]
code
funcline addr: 20620
funcline addr: 20624
['xc_jni_init', 17448, 20616, 20624, ['    xc_crash_spot.model_len = strlen(xc_common_model);']]
restartcode
['xc_jni_init', 17448, 20624, 20624, ['    xc_crash_spot.brand_len = strlen(xc_common_brand);']]
code
funcline addr: 20628
funcline addr: 20632
['xc_jni_init', 17448, 20624, 20632, ['    xc_crash_spot.brand_len = strlen(xc_common_brand);']]
restartcode
['xc_jni_init', 17448, 20632, 20632, ['    xc_crash_spot.build_fingerprint_len = strlen(xc_common_build_fingerprint);']]
code
funcline addr: 20636
funcline addr: 20640
['xc_jni_init', 17448, 20632, 20640, ['    xc_crash_spot.build_fingerprint_len = strlen(xc_common_build_fingerprint);']]
restartcode
['xc_jni_init', 17448, 20640, 20640, ['    xc_crash_spot.model_len = strlen(xc_common_model);']]
code
funcline addr: 20644
funcline addr: 20648
['xc_jni_init', 17448, 20640, 20648, ['    xc_crash_spot.model_len = strlen(xc_common_model);']]
restartcode
['xc_jni_init', 17448, 20648, 20648, ['    xc_crash_spot.app_id_len = strlen(xc_common_app_id);']]
code
funcline addr: 20652
funcline addr: 20656
['xc_jni_init', 17448, 20648, 20656, ['    xc_crash_spot.app_id_len = strlen(xc_common_app_id);']]
restartcode
['xc_jni_init', 17448, 20656, 20656, ['    xc_crash_spot.build_fingerprint_len = strlen(xc_common_build_fingerprint);']]
code
funcline addr: 20660
funcline addr: 20664
['xc_jni_init', 17448, 20656, 20664, ['    xc_crash_spot.build_fingerprint_len = strlen(xc_common_build_fingerprint);']]
restartcode
['xc_jni_init', 17448, 20664, 20664, ['    xc_crash_spot.app_version_len = strlen(xc_common_app_version);']]
code
funcline addr: 20668
funcline addr: 20672
funcline addr: 20676
['xc_jni_init', 17448, 20664, 20676, ['    xc_crash_spot.app_version_len = strlen(xc_common_app_version);']]
restartcode
['xc_jni_init', 17448, 20676, 20676, ['    xc_crash_spot.app_id_len = strlen(xc_common_app_id);']]
code
funcline addr: 20680
funcline addr: 20684
['xc_jni_init', 17448, 20676, 20684, ['    xc_crash_spot.app_id_len = strlen(xc_common_app_id);']]
restartcode
['xc_jni_init', 17448, 20684, 20684, ['    xc_crash_spot.app_version_len = strlen(xc_common_app_version);']]
code
funcline addr: 20688
['xc_jni_init', 17448, 20684, 20688, ['    xc_crash_spot.app_version_len = strlen(xc_common_app_version);']]
restartcode
['xc_jni_init', 17448, 20688, 20688, ['    if(NULL == whitelist || 0 == whitelist_len) return;']]
code
funcline addr: 20692
funcline addr: 20696
funcline addr: 20700
funcline addr: 20704
['xc_jni_init', 17448, 20688, 20704, ['    if(NULL == whitelist || 0 == whitelist_len) return;']]
restartcode
['xc_jni_init', 17448, 20704, 20704, ['    for(i = 0; i < whitelist_len; i++)']]
code
funcline addr: 20708
funcline addr: 20712
['xc_jni_init', 17448, 20704, 20712, ['    for(i = 0; i < whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 20712, 20712, ['        if(NULL == whitelist[i]) continue;']]
code
funcline addr: 20716
funcline addr: 20720
funcline addr: 20724
['xc_jni_init', 17448, 20712, 20724, ['        if(NULL == whitelist[i]) continue;']]
restartcode
['xc_jni_init', 17448, 20724, 20724, ['        if(0 == len) continue;']]
code
funcline addr: 20728
['xc_jni_init', 17448, 20724, 20728, ['        if(0 == len) continue;']]
restartcode
['xc_jni_init', 17448, 20728, 20728, ['']]
code
['xc_jni_init', 17448, 20728, 20728, ['static const char xcc_b64_table[65] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";']]
code
['xc_jni_init', 17448, 20728, 20728, ['']]
code
['xc_jni_init', 17448, 20728, 20728, ['size_t xcc_b64_encode_max_len(size_t in_len)']]
code
['xc_jni_init', 17448, 20728, 20728, ['{']]
code
['xc_jni_init', 17448, 20728, 20728, ['    return in_len * 4 / 3 + 4 + 1;']]
code
funcline addr: 20732
funcline addr: 20736
funcline addr: 20740
funcline addr: 20744
funcline addr: 20748
['xc_jni_init', 17448, 20728, 20748, ['    return in_len * 4 / 3 + 4 + 1;']]
restartcode
['xc_jni_init', 17448, 20748, 20748, ['        total_encoded_len += xcc_b64_encode_max_len(len);']]
code
funcline addr: 20752
funcline addr: 20756
['xc_jni_init', 17448, 20748, 20756, ['        total_encoded_len += xcc_b64_encode_max_len(len);']]
restartcode
['xc_jni_init', 17448, 20756, 20756, ['    for(i = 0; i < whitelist_len; i++)']]
code
funcline addr: 20760
funcline addr: 20764
['xc_jni_init', 17448, 20756, 20764, ['    for(i = 0; i < whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 20764, 20764, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 20768
funcline addr: 20772
funcline addr: 20776
funcline addr: 20780
funcline addr: 20784
funcline addr: 20788
['xc_jni_init', 17448, 20764, 20788, ['    if(NULL == (xc_crash_dumper_pathname = xc_util_strdupcat(xc_common_app_lib_dir, "/"XCC_UTIL_XCRASH_DUMPER_FILENAME))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 20788, 20788, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
code
funcline addr: 20792
['xc_jni_init', 17448, 20788, 20792, ['    if(!env || !(*env) || (!crash_enable && ! trace_enable) || api_level < 0 ||']]
restartcode
['xc_jni_init', 17448, 20792, 20792, ['    if(trace_enable)']]
code
funcline addr: 20796
funcline addr: 20800
['xc_jni_init', 17448, 20792, 20800, ['    if(trace_enable)']]
restartcode
['xc_jni_init', 17448, 20800, 20800, ['{']]
code
['xc_jni_init', 17448, 20800, 20800, ['    int r;']]
code
['xc_jni_init', 17448, 20800, 20800, ['    pthread_t thd;']]
code
['xc_jni_init', 17448, 20800, 20800, ['']]
code
['xc_jni_init', 17448, 20800, 20800, ['    //capture SIGQUIT only for ART']]
code
['xc_jni_init', 17448, 20800, 20800, ['    if(xc_common_api_level < 21) return 0;']]
code
funcline addr: 20804
funcline addr: 20808
funcline addr: 20812
['xc_jni_init', 17448, 20800, 20812, ['    if(xc_common_api_level < 21) return 0;']]
restartcode
['xc_jni_init', 17448, 20812, 20812, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
code
funcline addr: 20816
funcline addr: 20820
funcline addr: 20824
funcline addr: 20828
funcline addr: 20832
funcline addr: 20836
['xc_jni_init', 17448, 20812, 20836, ['    if(os_version        && c_os_version)        (*env)->ReleaseStringUTFChars(env, os_version,        c_os_version);']]
restartcode
['xc_jni_init', 17448, 20836, 20836, ['                            trace_dump_network_info ? 1 : 0);']]
code
funcline addr: 20840
funcline addr: 20844
['xc_jni_init', 17448, 20836, 20844, ['                            trace_dump_network_info ? 1 : 0);']]
restartcode
['xc_jni_init', 17448, 20844, 20844, ['                            trace_dump_fds ? 1 : 0,']]
code
funcline addr: 20848
['xc_jni_init', 17448, 20844, 20848, ['                            trace_dump_fds ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 20848, 20848, ['']]
code
['xc_jni_init', 17448, 20848, 20848, ['    //is Android Lollipop (5.x)?']]
code
['xc_jni_init', 17448, 20848, 20848, ['    xc_trace_is_lollipop = ((21 == xc_common_api_level || 22 == xc_common_api_level) ? 1 : 0);']]
code
funcline addr: 20852
funcline addr: 20856
['xc_jni_init', 17448, 20848, 20856, ['    xc_trace_is_lollipop = ((21 == xc_common_api_level || 22 == xc_common_api_level) ? 1 : 0);']]
restartcode
['xc_jni_init', 17448, 20856, 20856, ['                            trace_rethrow ? 1 : 0,']]
code
funcline addr: 20860
funcline addr: 20864
funcline addr: 20868
['xc_jni_init', 17448, 20856, 20868, ['                            trace_rethrow ? 1 : 0,']]
restartcode
['xc_jni_init', 17448, 20868, 20868, ['']]
code
['xc_jni_init', 17448, 20868, 20868, ['    xc_trace_dump_status = XC_TRACE_DUMP_NOT_START;']]
code
['xc_jni_init', 17448, 20868, 20868, ['    xc_trace_rethrow = rethrow;']]
code
['xc_jni_init', 17448, 20868, 20868, ['    xc_trace_logcat_system_lines = logcat_system_lines;']]
code
['xc_jni_init', 17448, 20868, 20868, ['    xc_trace_logcat_events_lines = logcat_events_lines;']]
code
funcline addr: 20872
funcline addr: 20876
['xc_jni_init', 17448, 20868, 20876, ['    xc_trace_logcat_events_lines = logcat_events_lines;']]
restartcode
['xc_jni_init', 17448, 20876, 20876, ['    if(NULL == xc_common_cb_class) return;']]
code
funcline addr: 20880
['xc_jni_init', 17448, 20876, 20880, ['    if(NULL == xc_common_cb_class) return;']]
restartcode
['xc_jni_init', 17448, 20880, 20880, ['    xc_trace_rethrow = rethrow;']]
code
funcline addr: 20884
funcline addr: 20888
['xc_jni_init', 17448, 20880, 20888, ['    xc_trace_rethrow = rethrow;']]
restartcode
['xc_jni_init', 17448, 20888, 20888, ['    xc_trace_is_lollipop = ((21 == xc_common_api_level || 22 == xc_common_api_level) ? 1 : 0);']]
code
funcline addr: 20892
funcline addr: 20896
funcline addr: 20900
['xc_jni_init', 17448, 20888, 20900, ['    xc_trace_is_lollipop = ((21 == xc_common_api_level || 22 == xc_common_api_level) ? 1 : 0);']]
restartcode
['xc_jni_init', 17448, 20900, 20900, ['    xc_trace_logcat_system_lines = logcat_system_lines;']]
code
funcline addr: 20904
['xc_jni_init', 17448, 20900, 20904, ['    xc_trace_logcat_system_lines = logcat_system_lines;']]
restartcode
['xc_jni_init', 17448, 20904, 20904, ['    xc_trace_logcat_main_lines = logcat_main_lines;']]
code
funcline addr: 20908
['xc_jni_init', 17448, 20904, 20908, ['    xc_trace_logcat_main_lines = logcat_main_lines;']]
restartcode
['xc_jni_init', 17448, 20908, 20908, ['    xc_trace_dump_fds = dump_fds;']]
code
['xc_jni_init', 17448, 20908, 20908, ['    xc_trace_dump_network_info = dump_network_info;']]
code
funcline addr: 20912
['xc_jni_init', 17448, 20908, 20912, ['    xc_trace_dump_network_info = dump_network_info;']]
restartcode
['xc_jni_init', 17448, 20912, 20912, ['    if(NULL == xc_common_cb_class) return;']]
code
funcline addr: 20916
['xc_jni_init', 17448, 20912, 20916, ['    if(NULL == xc_common_cb_class) return;']]
restartcode
['xc_jni_init', 17448, 20916, 20916, ['    xc_trace_cb_method = (*env)->GetStaticMethodID(env, xc_common_cb_class, XC_TRACE_CALLBACK_METHOD_NAME, XC_TRACE_CALLBACK_METHOD_SIGNATURE);']]
code
funcline addr: 20920
funcline addr: 20924
funcline addr: 20928
funcline addr: 20932
funcline addr: 20936
funcline addr: 20940
funcline addr: 20944
funcline addr: 20948
funcline addr: 20952
funcline addr: 20956
['xc_jni_init', 17448, 20916, 20956, ['    xc_trace_cb_method = (*env)->GetStaticMethodID(env, xc_common_cb_class, XC_TRACE_CALLBACK_METHOD_NAME, XC_TRACE_CALLBACK_METHOD_SIGNATURE);']]
restartcode
['xc_jni_init', 17448, 20956, 20956, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_trace_cb_method, err);']]
code
funcline addr: 20960
funcline addr: 20964
funcline addr: 20968
funcline addr: 20972
funcline addr: 20976
funcline addr: 20980
funcline addr: 20984
funcline addr: 20988
['xc_jni_init', 17448, 20956, 20988, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_trace_cb_method, err);']]
restartcode
['xc_jni_init', 17448, 20988, 20988, ['    xc_trace_cb_method = NULL;']]
code
funcline addr: 20992
funcline addr: 20996
funcline addr: 21000
['xc_jni_init', 17448, 20988, 21000, ['    xc_trace_cb_method = NULL;']]
restartcode
['xc_jni_init', 17448, 21000, 21000, ['    if(0 == total_encoded_len) return;']]
code
funcline addr: 21004
funcline addr: 21008
['xc_jni_init', 17448, 21000, 21008, ['    if(0 == total_encoded_len) return;']]
restartcode
['xc_jni_init', 17448, 21008, 21008, ['    if(NULL == (total_encoded_whitelist = calloc(1, total_encoded_len))) return;']]
code
funcline addr: 21012
['xc_jni_init', 17448, 21008, 21012, ['    if(NULL == (total_encoded_whitelist = calloc(1, total_encoded_len))) return;']]
restartcode
['xc_jni_init', 17448, 21012, 21012, ["    total_encoded_len += whitelist_len; //separator ('|')"]]
code
funcline addr: 21016
['xc_jni_init', 17448, 21012, 21016, ["    total_encoded_len += whitelist_len; //separator ('|')"]]
restartcode
['xc_jni_init', 17448, 21016, 21016, ["    total_encoded_len += 1; //terminating null byte ('\\0')"]]
code
funcline addr: 21020
funcline addr: 21024
['xc_jni_init', 17448, 21016, 21024, ["    total_encoded_len += 1; //terminating null byte ('\\0')"]]
restartcode
['xc_jni_init', 17448, 21024, 21024, ['    if(NULL == (total_encoded_whitelist = calloc(1, total_encoded_len))) return;']]
code
funcline addr: 21028
funcline addr: 21032
funcline addr: 21036
funcline addr: 21040
funcline addr: 21044
['xc_jni_init', 17448, 21024, 21044, ['    if(NULL == (total_encoded_whitelist = calloc(1, total_encoded_len))) return;']]
restartcode
['xc_jni_init', 17448, 21044, 21044, ['    for(i = 0; i < whitelist_len; i++)']]
code
funcline addr: 21048
funcline addr: 21052
['xc_jni_init', 17448, 21044, 21052, ['    for(i = 0; i < whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 21052, 21052, ['        if(NULL == whitelist[i]) continue;']]
code
funcline addr: 21056
funcline addr: 21060
funcline addr: 21064
['xc_jni_init', 17448, 21052, 21064, ['        if(NULL == whitelist[i]) continue;']]
restartcode
['xc_jni_init', 17448, 21064, 21064, ['        if(0 == len) continue;']]
code
funcline addr: 21068
['xc_jni_init', 17448, 21064, 21068, ['        if(0 == len) continue;']]
restartcode
['xc_jni_init', 17448, 21068, 21068, ['{']]
code
['xc_jni_init', 17448, 21068, 21068, ['    const uint8_t *start, *end;']]
code
['xc_jni_init', 17448, 21068, 21068, ['    char *out, *p;']]
code
['xc_jni_init', 17448, 21068, 21068, ['    size_t olen;']]
code
['xc_jni_init', 17448, 21068, 21068, ['']]
code
['xc_jni_init', 17448, 21068, 21068, ['    olen = in_len * 4 / 3 + 4 + 1;']]
code
funcline addr: 21072
funcline addr: 21076
funcline addr: 21080
funcline addr: 21084
funcline addr: 21088
['xc_jni_init', 17448, 21068, 21088, ['    olen = in_len * 4 / 3 + 4 + 1;']]
restartcode
['xc_jni_init', 17448, 21088, 21088, ['    if(olen < in_len) return NULL;']]
code
funcline addr: 21092
funcline addr: 21096
funcline addr: 21100
funcline addr: 21104
funcline addr: 21108
['xc_jni_init', 17448, 21088, 21108, ['    if(olen < in_len) return NULL;']]
restartcode
['xc_jni_init', 17448, 21108, 21108, ['    if(NULL == (out = malloc(olen))) return NULL;']]
code
funcline addr: 21112
funcline addr: 21116
funcline addr: 21120
funcline addr: 21124
funcline addr: 21128
funcline addr: 21132
['xc_jni_init', 17448, 21108, 21132, ['    if(NULL == (out = malloc(olen))) return NULL;']]
restartcode
['xc_jni_init', 17448, 21132, 21132, ['    ']]
code
['xc_jni_init', 17448, 21132, 21132, ['    start = in;']]
code
['xc_jni_init', 17448, 21132, 21132, ['    end = in + in_len;']]
code
funcline addr: 21136
funcline addr: 21140
['xc_jni_init', 17448, 21132, 21140, ['    end = in + in_len;']]
restartcode
['xc_jni_init', 17448, 21140, 21140, ['    p = out;']]
code
['xc_jni_init', 17448, 21140, 21140, ['    while (end - start >= 3)']]
code
funcline addr: 21144
funcline addr: 21148
funcline addr: 21152
['xc_jni_init', 17448, 21140, 21152, ['    while (end - start >= 3)']]
restartcode
['xc_jni_init', 17448, 21152, 21152, ['    {']]
code
['xc_jni_init', 17448, 21152, 21152, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
code
funcline addr: 21156
funcline addr: 21160
funcline addr: 21164
['xc_jni_init', 17448, 21152, 21164, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
restartcode
['xc_jni_init', 17448, 21164, 21164, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21168
funcline addr: 21172
['xc_jni_init', 17448, 21164, 21172, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21172, 21172, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
code
funcline addr: 21176
['xc_jni_init', 17448, 21172, 21176, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
restartcode
['xc_jni_init', 17448, 21176, 21176, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21180
funcline addr: 21184
funcline addr: 21188
['xc_jni_init', 17448, 21176, 21188, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21188, 21188, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
code
funcline addr: 21192
funcline addr: 21196
['xc_jni_init', 17448, 21188, 21196, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
restartcode
['xc_jni_init', 17448, 21196, 21196, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21200
['xc_jni_init', 17448, 21196, 21200, ['        *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21200, 21200, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
code
funcline addr: 21204
['xc_jni_init', 17448, 21200, 21204, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
restartcode
['xc_jni_init', 17448, 21204, 21204, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
code
['xc_jni_init', 17448, 21204, 21204, ['        start += 3;']]
code
funcline addr: 21208
['xc_jni_init', 17448, 21204, 21208, ['        start += 3;']]
restartcode
['xc_jni_init', 17448, 21208, 21208, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
code
funcline addr: 21212
['xc_jni_init', 17448, 21208, 21212, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
restartcode
['xc_jni_init', 17448, 21212, 21212, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
code
funcline addr: 21216
['xc_jni_init', 17448, 21212, 21216, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
restartcode
['xc_jni_init', 17448, 21216, 21216, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
code
funcline addr: 21220
['xc_jni_init', 17448, 21216, 21220, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
restartcode
['xc_jni_init', 17448, 21220, 21220, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
code
funcline addr: 21224
['xc_jni_init', 17448, 21220, 21224, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
restartcode
['xc_jni_init', 17448, 21224, 21224, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
code
funcline addr: 21228
['xc_jni_init', 17448, 21224, 21228, ['        *p++ = xcc_b64_table[((start[1] & 0x0f) << 2) | (start[2] >> 6)];']]
restartcode
['xc_jni_init', 17448, 21228, 21228, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
code
funcline addr: 21232
funcline addr: 21236
funcline addr: 21240
['xc_jni_init', 17448, 21228, 21240, ['        *p++ = xcc_b64_table[start[2] & 0x3f];']]
restartcode
['xc_jni_init', 17448, 21240, 21240, ['    }']]
code
['xc_jni_init', 17448, 21240, 21240, ['']]
code
['xc_jni_init', 17448, 21240, 21240, ['    if (end - start > 0)']]
code
funcline addr: 21244
funcline addr: 21248
['xc_jni_init', 17448, 21240, 21248, ['    if (end - start > 0)']]
restartcode
['xc_jni_init', 17448, 21248, 21248, ['    {']]
code
['xc_jni_init', 17448, 21248, 21248, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
code
funcline addr: 21252
funcline addr: 21256
funcline addr: 21260
['xc_jni_init', 17448, 21248, 21260, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
restartcode
['xc_jni_init', 17448, 21260, 21260, ['        if(end - start == 1)']]
code
funcline addr: 21264
['xc_jni_init', 17448, 21260, 21264, ['        if(end - start == 1)']]
restartcode
['xc_jni_init', 17448, 21264, 21264, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
code
funcline addr: 21268
funcline addr: 21272
funcline addr: 21276
funcline addr: 21280
funcline addr: 21284
['xc_jni_init', 17448, 21264, 21284, ['        *p++ = xcc_b64_table[start[0] >> 2];']]
restartcode
['xc_jni_init', 17448, 21284, 21284, ['        if(end - start == 1)']]
code
funcline addr: 21288
['xc_jni_init', 17448, 21284, 21288, ['        if(end - start == 1)']]
restartcode
['xc_jni_init', 17448, 21288, 21288, ['        {']]
code
['xc_jni_init', 17448, 21288, 21288, ['            *p++ = xcc_b64_table[(start[0] & 0x03) << 4];']]
code
funcline addr: 21292
funcline addr: 21296
funcline addr: 21300
funcline addr: 21304
funcline addr: 21308
funcline addr: 21312
['xc_jni_init', 17448, 21288, 21312, ['            *p++ = xcc_b64_table[(start[0] & 0x03) << 4];']]
restartcode
['xc_jni_init', 17448, 21312, 21312, ["            *p++ = '=';"]]
code
['xc_jni_init', 17448, 21312, 21312, ['        }']]
code
['xc_jni_init', 17448, 21312, 21312, ['        else //end - start == 2']]
code
['xc_jni_init', 17448, 21312, 21312, ['        {']]
code
['xc_jni_init', 17448, 21312, 21312, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21316
funcline addr: 21320
funcline addr: 21324
funcline addr: 21328
funcline addr: 21332
['xc_jni_init', 17448, 21312, 21332, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21332, 21332, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
code
funcline addr: 21336
['xc_jni_init', 17448, 21332, 21336, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
restartcode
['xc_jni_init', 17448, 21336, 21336, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21340
['xc_jni_init', 17448, 21336, 21340, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21340, 21340, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
code
funcline addr: 21344
funcline addr: 21348
['xc_jni_init', 17448, 21340, 21348, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
restartcode
['xc_jni_init', 17448, 21348, 21348, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
code
funcline addr: 21352
['xc_jni_init', 17448, 21348, 21352, ['            *p++ = xcc_b64_table[((start[0] & 0x03) << 4) | (start[1] >> 4)];']]
restartcode
['xc_jni_init', 17448, 21352, 21352, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
code
funcline addr: 21356
['xc_jni_init', 17448, 21352, 21356, ['            *p++ = xcc_b64_table[(start[1] & 0x0f) << 2];']]
restartcode
['xc_jni_init', 17448, 21356, 21356, ['        }']]
code
['xc_jni_init', 17448, 21356, 21356, ["        *p++ = '=';"]]
code
funcline addr: 21360
funcline addr: 21364
funcline addr: 21368
funcline addr: 21372
funcline addr: 21376
['xc_jni_init', 17448, 21356, 21376, ["        *p++ = '=';"]]
restartcode
['xc_jni_init', 17448, 21376, 21376, ['    }']]
code
['xc_jni_init', 17448, 21376, 21376, ['']]
code
['xc_jni_init', 17448, 21376, 21376, ["    *p = '\\0';"]]
code
['xc_jni_init', 17448, 21376, 21376, ['    ']]
code
['xc_jni_init', 17448, 21376, 21376, ['    if(NULL != out_len) *out_len = (size_t)(p - out);']]
code
funcline addr: 21380
funcline addr: 21384
['xc_jni_init', 17448, 21376, 21384, ['    if(NULL != out_len) *out_len = (size_t)(p - out);']]
restartcode
['xc_jni_init', 17448, 21384, 21384, ["    *p = '\\0';"]]
code
funcline addr: 21388
['xc_jni_init', 17448, 21384, 21388, ["    *p = '\\0';"]]
restartcode
['xc_jni_init', 17448, 21388, 21388, ['            if(cur_encoded_len + encoded_len + 1 >= total_encoded_len) return; //impossible']]
code
funcline addr: 21392
funcline addr: 21396
funcline addr: 21400
funcline addr: 21404
funcline addr: 21408
funcline addr: 21412
funcline addr: 21416
funcline addr: 21420
['xc_jni_init', 17448, 21388, 21420, ['            if(cur_encoded_len + encoded_len + 1 >= total_encoded_len) return; //impossible']]
restartcode
['xc_jni_init', 17448, 21420, 21420, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 21424
funcline addr: 21428
['xc_jni_init', 17448, 21420, 21428, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xc_jni_init', 17448, 21428, 21428, ['            memcpy(total_encoded_whitelist + cur_encoded_len, tmp, encoded_len);']]
code
funcline addr: 21432
funcline addr: 21436
funcline addr: 21440
funcline addr: 21444
funcline addr: 21448
['xc_jni_init', 17448, 21428, 21448, ['            memcpy(total_encoded_whitelist + cur_encoded_len, tmp, encoded_len);']]
restartcode
['xc_jni_init', 17448, 21448, 21448, ['            cur_encoded_len += encoded_len;']]
code
funcline addr: 21452
funcline addr: 21456
['xc_jni_init', 17448, 21448, 21456, ['            cur_encoded_len += encoded_len;']]
restartcode
['xc_jni_init', 17448, 21456, 21456, ['            cur_encoded_len += 1;']]
code
funcline addr: 21460
funcline addr: 21464
['xc_jni_init', 17448, 21456, 21464, ['            cur_encoded_len += 1;']]
restartcode
['xc_jni_init', 17448, 21464, 21464, ['            free(tmp);']]
code
funcline addr: 21468
funcline addr: 21472
['xc_jni_init', 17448, 21464, 21472, ['            free(tmp);']]
restartcode
['xc_jni_init', 17448, 21472, 21472, ['    for(i = 0; i < whitelist_len; i++)']]
code
funcline addr: 21476
funcline addr: 21480
['xc_jni_init', 17448, 21472, 21480, ['    for(i = 0; i < whitelist_len; i++)']]
restartcode
['xc_jni_init', 17448, 21480, 21480, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_trace_cb_method, err);']]
code
funcline addr: 21484
funcline addr: 21488
funcline addr: 21492
['xc_jni_init', 17448, 21480, 21492, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_trace_cb_method, err);']]
restartcode
['xc_jni_init', 17448, 21492, 21492, ['']]
code
['xc_jni_init', 17448, 21492, 21492, ['    //init for JNI callback']]
code
['xc_jni_init', 17448, 21492, 21492, ['    xc_trace_init_callback(env);']]
code
['xc_jni_init', 17448, 21492, 21492, ['']]
code
['xc_jni_init', 17448, 21492, 21492, ['    //create event FD']]
code
['xc_jni_init', 17448, 21492, 21492, ['    if(0 > (xc_trace_notifier = eventfd(0, EFD_CLOEXEC))) return XCC_ERRNO_SYS;']]
code
funcline addr: 21496
funcline addr: 21500
funcline addr: 21504
['xc_jni_init', 17448, 21492, 21504, ['    if(0 > (xc_trace_notifier = eventfd(0, EFD_CLOEXEC))) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 21504, 21504, ['    int              r;']]
code
['xc_jni_init', 17448, 21504, 21504, ['    sigset_t         set;']]
code
['xc_jni_init', 17448, 21504, 21504, ['    struct sigaction act;']]
code
['xc_jni_init', 17448, 21504, 21504, ['']]
code
['xc_jni_init', 17448, 21504, 21504, ['    //un-block the SIGQUIT mask for current thread, hope this is the main thread']]
code
['xc_jni_init', 17448, 21504, 21504, ['    sigemptyset(&set);']]
code
funcline addr: 21508
funcline addr: 21512
['xc_jni_init', 17448, 21504, 21512, ['    sigemptyset(&set);']]
restartcode
['xc_jni_init', 17448, 21512, 21512, ['    sigaddset(&set, SIGQUIT);']]
code
funcline addr: 21516
funcline addr: 21520
funcline addr: 21524
['xc_jni_init', 17448, 21512, 21524, ['    sigaddset(&set, SIGQUIT);']]
restartcode
['xc_jni_init', 17448, 21524, 21524, ['    if(0 != (r = pthread_sigmask(SIG_UNBLOCK, &set, &xcc_signal_trace_oldset))) return r;']]
code
funcline addr: 21528
funcline addr: 21532
funcline addr: 21536
funcline addr: 21540
funcline addr: 21544
funcline addr: 21548
funcline addr: 21552
funcline addr: 21556
['xc_jni_init', 17448, 21524, 21556, ['    if(0 != (r = pthread_sigmask(SIG_UNBLOCK, &set, &xcc_signal_trace_oldset))) return r;']]
restartcode
['xc_jni_init', 17448, 21556, 21556, ['']]
code
['xc_jni_init', 17448, 21556, 21556, ['    //register new signal handler for SIGQUIT']]
code
['xc_jni_init', 17448, 21556, 21556, ['    memset(&act, 0, sizeof(act));']]
code
['xc_jni_init', 17448, 21556, 21556, ['    sigfillset(&act.sa_mask);']]
code
['xc_jni_init', 17448, 21556, 21556, ['    act.sa_sigaction = handler;']]
code
funcline addr: 21560
funcline addr: 21564
['xc_jni_init', 17448, 21556, 21564, ['    act.sa_sigaction = handler;']]
restartcode
['xc_jni_init', 17448, 21564, 21564, ['    act.sa_flags = SA_RESTART | SA_SIGINFO;']]
code
['xc_jni_init', 17448, 21564, 21564, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
code
funcline addr: 21568
['xc_jni_init', 17448, 21564, 21568, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
restartcode
['xc_jni_init', 17448, 21568, 21568, ['    act.sa_sigaction = handler;']]
code
funcline addr: 21572
funcline addr: 21576
['xc_jni_init', 17448, 21568, 21576, ['    act.sa_sigaction = handler;']]
restartcode
['xc_jni_init', 17448, 21576, 21576, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
code
funcline addr: 21580
funcline addr: 21584
funcline addr: 21588
['xc_jni_init', 17448, 21576, 21588, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
restartcode
['xc_jni_init', 17448, 21588, 21588, ['    act.sa_sigaction = handler;']]
code
funcline addr: 21592
['xc_jni_init', 17448, 21588, 21592, ['    act.sa_sigaction = handler;']]
restartcode
['xc_jni_init', 17448, 21592, 21592, ['    act.sa_flags = SA_RESTART | SA_SIGINFO;']]
code
funcline addr: 21596
['xc_jni_init', 17448, 21592, 21596, ['    act.sa_flags = SA_RESTART | SA_SIGINFO;']]
restartcode
['xc_jni_init', 17448, 21596, 21596, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
code
funcline addr: 21600
funcline addr: 21604
['xc_jni_init', 17448, 21596, 21604, ['    if(0 != sigaction(SIGQUIT, &act, &xcc_signal_trace_oldact))']]
restartcode
['xc_jni_init', 17448, 21604, 21604, ['    {']]
code
['xc_jni_init', 17448, 21604, 21604, ['        pthread_sigmask(SIG_SETMASK, &xcc_signal_trace_oldset, NULL);']]
code
funcline addr: 21608
funcline addr: 21612
funcline addr: 21616
funcline addr: 21620
funcline addr: 21624
['xc_jni_init', 17448, 21604, 21624, ['        pthread_sigmask(SIG_SETMASK, &xcc_signal_trace_oldset, NULL);']]
restartcode
['xc_jni_init', 17448, 21624, 21624, ['        return XCC_ERRNO_SYS;']]
code
funcline addr: 21628
funcline addr: 21632
funcline addr: 21636
funcline addr: 21640
funcline addr: 21644
funcline addr: 21648
['xc_jni_init', 17448, 21624, 21648, ['        return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 21648, 21648, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_crash_cb_method, err);']]
code
funcline addr: 21652
funcline addr: 21656
funcline addr: 21660
['xc_jni_init', 17448, 21648, 21660, ['    XC_JNI_CHECK_NULL_AND_PENDING_EXCEPTION(xc_crash_cb_method, err);']]
restartcode
['xc_jni_init', 17448, 21660, 21660, ['    if(0 > (xc_crash_cb_notifier = eventfd(0, EFD_CLOEXEC))) goto err;']]
code
funcline addr: 21664
funcline addr: 21668
funcline addr: 21672
['xc_jni_init', 17448, 21660, 21672, ['    if(0 > (xc_crash_cb_notifier = eventfd(0, EFD_CLOEXEC))) goto err;']]
restartcode
['xc_jni_init', 17448, 21672, 21672, ['    if(0 != pthread_create(&xc_crash_cb_thd, NULL, xc_crash_callback_thread, NULL)) goto err;']]
code
funcline addr: 21676
funcline addr: 21680
funcline addr: 21684
funcline addr: 21688
funcline addr: 21692
funcline addr: 21696
funcline addr: 21700
['xc_jni_init', 17448, 21672, 21700, ['    if(0 != pthread_create(&xc_crash_cb_thd, NULL, xc_crash_callback_thread, NULL)) goto err;']]
restartcode
['xc_jni_init', 17448, 21700, 21700, ['']]
code
['xc_jni_init', 17448, 21700, 21700, ['    //register signal handler']]
code
['xc_jni_init', 17448, 21700, 21700, ['    if(0 != (r = xcc_signal_trace_register(xc_trace_handler))) goto err2;']]
code
['xc_jni_init', 17448, 21700, 21700, ['']]
code
['xc_jni_init', 17448, 21700, 21700, ['    //create thread for dump trace']]
code
['xc_jni_init', 17448, 21700, 21700, ['    if(0 != (r = pthread_create(&thd, NULL, xc_trace_dumper, NULL))) goto err1;']]
code
funcline addr: 21704
funcline addr: 21708
funcline addr: 21712
funcline addr: 21716
funcline addr: 21720
funcline addr: 21724
funcline addr: 21728
funcline addr: 21732
['xc_jni_init', 17448, 21700, 21732, ['    if(0 != (r = pthread_create(&thd, NULL, xc_trace_dumper, NULL))) goto err1;']]
restartcode
['xc_jni_init', 17448, 21732, 21732, ['    return 0;']]
code
['xc_jni_init', 17448, 21732, 21732, ['}']]
code
['xc_jni_init', 17448, 21732, 21732, ['']]
code
['xc_jni_init', 17448, 21732, 21732, ['void xcc_signal_trace_unregister(void)']]
code
['xc_jni_init', 17448, 21732, 21732, ['{']]
code
['xc_jni_init', 17448, 21732, 21732, ['    pthread_sigmask(SIG_SETMASK, &xcc_signal_trace_oldset, NULL);']]
code
funcline addr: 21736
funcline addr: 21740
funcline addr: 21744
funcline addr: 21748
['xc_jni_init', 17448, 21732, 21748, ['    pthread_sigmask(SIG_SETMASK, &xcc_signal_trace_oldset, NULL);']]
restartcode
['xc_jni_init', 17448, 21748, 21748, ['    sigaction(SIGQUIT, &xcc_signal_trace_oldact, NULL);']]
code
funcline addr: 21752
funcline addr: 21756
funcline addr: 21760
funcline addr: 21764
funcline addr: 21768
['xc_jni_init', 17448, 21748, 21768, ['    sigaction(SIGQUIT, &xcc_signal_trace_oldact, NULL);']]
restartcode
['xc_jni_init', 17448, 21768, 21768, ['    return 0;']]
code
['xc_jni_init', 17448, 21768, 21768, ['']]
code
['xc_jni_init', 17448, 21768, 21768, [' err1:']]
code
['xc_jni_init', 17448, 21768, 21768, ['    xcc_signal_trace_unregister();']]
code
['xc_jni_init', 17448, 21768, 21768, [' err2:']]
code
['xc_jni_init', 17448, 21768, 21768, ['    close(xc_trace_notifier);']]
code
funcline addr: 21772
funcline addr: 21776
funcline addr: 21780
['xc_jni_init', 17448, 21768, 21780, ['    close(xc_trace_notifier);']]
restartcode
['xc_jni_init', 17448, 21780, 21780, ['    xc_trace_notifier = -1;']]
code
funcline addr: 21784
funcline addr: 21788
funcline addr: 21792
['xc_jni_init', 17448, 21780, 21792, ['    xc_trace_notifier = -1;']]
restartcode
['xc_jni_init', 17448, 21792, 21792, ["    if(cur_encoded_len > 0 && '|' == total_encoded_whitelist[cur_encoded_len - 1])"]]
code
funcline addr: 21796
funcline addr: 21800
funcline addr: 21804
funcline addr: 21808
funcline addr: 21812
funcline addr: 21816
funcline addr: 21820
funcline addr: 21824
funcline addr: 21828
['xc_jni_init', 17448, 21792, 21828, ["    if(cur_encoded_len > 0 && '|' == total_encoded_whitelist[cur_encoded_len - 1])"]]
restartcode
['xc_jni_init', 17448, 21828, 21828, ["        total_encoded_whitelist[cur_encoded_len - 1] = '\\0';"]]
code
funcline addr: 21832
['xc_jni_init', 17448, 21828, 21832, ["        total_encoded_whitelist[cur_encoded_len - 1] = '\\0';"]]
restartcode
['xc_jni_init', 17448, 21832, 21832, ['    if(0 == cur_encoded_len)']]
code
funcline addr: 21836
funcline addr: 21840
['xc_jni_init', 17448, 21832, 21840, ['    if(0 == cur_encoded_len)']]
restartcode
['xc_jni_init', 17448, 21840, 21840, ['    xc_crash_spot.dump_all_threads_whitelist_len = cur_encoded_len;']]
code
funcline addr: 21844
['xc_jni_init', 17448, 21840, 21844, ['    xc_crash_spot.dump_all_threads_whitelist_len = cur_encoded_len;']]
restartcode
['xc_jni_init', 17448, 21844, 21844, ['    xc_crash_dump_all_threads_whitelist = total_encoded_whitelist;']]
code
funcline addr: 21848
['xc_jni_init', 17448, 21844, 21848, ['    xc_crash_dump_all_threads_whitelist = total_encoded_whitelist;']]
restartcode
['xc_jni_init', 17448, 21848, 21848, ['    xc_crash_spot.dump_all_threads_whitelist_len = cur_encoded_len;']]
code
funcline addr: 21852
funcline addr: 21856
['xc_jni_init', 17448, 21848, 21856, ['    xc_crash_spot.dump_all_threads_whitelist_len = cur_encoded_len;']]
restartcode
['xc_jni_init', 17448, 21856, 21856, ['    xc_crash_dump_all_threads_whitelist = total_encoded_whitelist;']]
code
funcline addr: 21860
funcline addr: 21864
funcline addr: 21868
['xc_jni_init', 17448, 21856, 21868, ['    xc_crash_dump_all_threads_whitelist = total_encoded_whitelist;']]
restartcode
['xc_jni_init', 17448, 21868, 21868, ['        free(total_encoded_whitelist);']]
code
funcline addr: 21872
['xc_jni_init', 17448, 21868, 21872, ['        free(total_encoded_whitelist);']]
restartcode
['xc_jni_init', 17448, 21872, 21872, ['    xc_crash_init_dump_all_threads_whitelist(dump_all_threads_whitelist, dump_all_threads_whitelist_len);']]
code
['xc_jni_init', 17448, 21872, 21872, ['']]
code
['xc_jni_init', 17448, 21872, 21872, ['    //for clone and fork']]
code
['xc_jni_init', 17448, 21872, 21872, ['#ifndef __i386__']]
code
['xc_jni_init', 17448, 21872, 21872, ['    if(NULL == (xc_crash_child_stack = calloc(XC_CRASH_CHILD_STACK_LEN, 1))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 21876
funcline addr: 21880
funcline addr: 21884
funcline addr: 21888
funcline addr: 21892
funcline addr: 21896
['xc_jni_init', 17448, 21872, 21896, ['    if(NULL == (xc_crash_child_stack = calloc(XC_CRASH_CHILD_STACK_LEN, 1))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 21896, 21896, ['    xc_crash_child_stack = (void *)(((uint8_t *)xc_crash_child_stack) + XC_CRASH_CHILD_STACK_LEN);']]
code
funcline addr: 21900
['xc_jni_init', 17448, 21896, 21900, ['    xc_crash_child_stack = (void *)(((uint8_t *)xc_crash_child_stack) + XC_CRASH_CHILD_STACK_LEN);']]
restartcode
['xc_jni_init', 17448, 21900, 21900, ['    if(NULL == (ss.ss_sp = calloc(1, XCC_SIGNAL_CRASH_STACK_SIZE))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 21904
funcline addr: 21908
funcline addr: 21912
funcline addr: 21916
funcline addr: 21920
funcline addr: 21924
funcline addr: 21928
['xc_jni_init', 17448, 21900, 21928, ['    if(NULL == (ss.ss_sp = calloc(1, XCC_SIGNAL_CRASH_STACK_SIZE))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_jni_init', 17448, 21928, 21928, ['    if(0 != sigaltstack(&ss, NULL)) return XCC_ERRNO_SYS;']]
code
funcline addr: 21932
funcline addr: 21936
['xc_jni_init', 17448, 21928, 21936, ['    if(0 != sigaltstack(&ss, NULL)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 21936, 21936, ['    ss.ss_size  = XCC_SIGNAL_CRASH_STACK_SIZE;']]
code
funcline addr: 21940
['xc_jni_init', 17448, 21936, 21940, ['    ss.ss_size  = XCC_SIGNAL_CRASH_STACK_SIZE;']]
restartcode
['xc_jni_init', 17448, 21940, 21940, ['    ss.ss_flags = 0;']]
code
funcline addr: 21944
['xc_jni_init', 17448, 21940, 21944, ['    ss.ss_flags = 0;']]
restartcode
['xc_jni_init', 17448, 21944, 21944, ['    if(0 != sigaltstack(&ss, NULL)) return XCC_ERRNO_SYS;']]
code
funcline addr: 21948
funcline addr: 21952
funcline addr: 21956
['xc_jni_init', 17448, 21944, 21956, ['    if(0 != sigaltstack(&ss, NULL)) return XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 21956, 21956, ['    act.sa_sigaction = handler;']]
code
funcline addr: 21960
funcline addr: 21964
funcline addr: 21968
funcline addr: 21972
funcline addr: 21976
funcline addr: 21980
['xc_jni_init', 17448, 21956, 21980, ['    act.sa_sigaction = handler;']]
restartcode
['xc_jni_init', 17448, 21980, 21980, ['    act.sa_flags = SA_RESTART | SA_SIGINFO | SA_ONSTACK;']]
code
funcline addr: 21984
['xc_jni_init', 17448, 21980, 21984, ['    act.sa_flags = SA_RESTART | SA_SIGINFO | SA_ONSTACK;']]
restartcode
['xc_jni_init', 17448, 21984, 21984, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
code
funcline addr: 21988
funcline addr: 21992
funcline addr: 21996
['xc_jni_init', 17448, 21984, 21996, ['    for(i = 0; i < sizeof(xcc_signal_crash_info) / sizeof(xcc_signal_crash_info[0]); i++)']]
restartcode
['xc_jni_init', 17448, 21996, 21996, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &act, &(xcc_signal_crash_info[i].oldact)))']]
code
funcline addr: 22000
funcline addr: 22004
funcline addr: 22008
funcline addr: 22012
funcline addr: 22016
funcline addr: 22020
funcline addr: 22024
funcline addr: 22028
funcline addr: 22032
funcline addr: 22036
funcline addr: 22040
funcline addr: 22044
funcline addr: 22048
funcline addr: 22052
funcline addr: 22056
['xc_jni_init', 17448, 21996, 22056, ['        if(0 != sigaction(xcc_signal_crash_info[i].signum, &act, &(xcc_signal_crash_info[i].oldact)))']]
restartcode
['xc_jni_init', 17448, 22056, 22056, ['    XC_COMMON_DUP_STR(process_name);']]
code
funcline addr: 22060
funcline addr: 22064
funcline addr: 22068
funcline addr: 22072
funcline addr: 22076
funcline addr: 22080
funcline addr: 22084
funcline addr: 22088
funcline addr: 22092
['xc_jni_init', 17448, 22056, 22092, ['    XC_COMMON_DUP_STR(process_name);']]
restartcode
['xc_jni_init', 17448, 22092, 22092, ['    if((xc_common_fd_null = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR))) < 0)']]
code
funcline addr: 22096
funcline addr: 22100
funcline addr: 22104
funcline addr: 22108
funcline addr: 22112
funcline addr: 22116
funcline addr: 22120
funcline addr: 22124
funcline addr: 22128
funcline addr: 22132
funcline addr: 22136
funcline addr: 22140
funcline addr: 22144
funcline addr: 22148
['xc_jni_init', 17448, 22092, 22148, ['    if((xc_common_fd_null = XCC_UTIL_TEMP_FAILURE_RETRY(open("/dev/null", O_RDWR))) < 0)']]
restartcode
['xc_jni_init', 17448, 22148, 22148, ['    if(0 == mkdir(dir, S_IRWXU) || EEXIST == errno) return 0;']]
code
funcline addr: 22152
funcline addr: 22156
funcline addr: 22160
funcline addr: 22164
funcline addr: 22168
funcline addr: 22172
['xc_jni_init', 17448, 22148, 22172, ['    if(0 == mkdir(dir, S_IRWXU) || EEXIST == errno) return 0;']]
restartcode
['xc_jni_init', 17448, 22172, 22172, ['    xc_common_open_prepared_fd(1);']]
code
funcline addr: 22176
funcline addr: 22180
['xc_jni_init', 17448, 22172, 22180, ['    xc_common_open_prepared_fd(1);']]
restartcode
['xc_jni_init', 17448, 22180, 22180, ['    xc_common_open_prepared_fd(0);']]
code
funcline addr: 22184
funcline addr: 22188
funcline addr: 22192
['xc_jni_init', 17448, 22180, 22192, ['    xc_common_open_prepared_fd(0);']]
restartcode
['xc_jni_init', 17448, 22192, 22192, ['    if(0 != xc_common_init((int)api_level, ']]
code
funcline addr: 22196
funcline addr: 22200
funcline addr: 22204
funcline addr: 22208
['xc_jni_init', 17448, 22192, 22208, ['    if(0 != xc_common_init((int)api_level, ']]
restartcode
['xc_jni_init', 17448, 22208, 22208, ['    xc_crash_cb_method = NULL;']]
code
funcline addr: 22212
funcline addr: 22216
['xc_jni_init', 17448, 22208, 22216, ['    xc_crash_cb_method = NULL;']]
restartcode
['xc_jni_init', 17448, 22216, 22216, ['        r = XCC_ERRNO_SYS;']]
code
funcline addr: 22220
funcline addr: 22224
funcline addr: 22228
funcline addr: 22232
funcline addr: 22236
funcline addr: 22240
['xc_jni_init', 17448, 22216, 22240, ['        r = XCC_ERRNO_SYS;']]
restartcode
['xc_jni_init', 17448, 22240, 22240, ['    return __builtin_strlen(s);']]
code
funcline addr: 22244
['xc_jni_init', 17448, 22240, 22244, ['    return __builtin_strlen(s);']]
restartcode
['xc_jni_init', 17448, 22244, 22244, ['    if(0 == len) return XCC_ERRNO_INVAL;']]
code
funcline addr: 22248
funcline addr: 22252
['xc_jni_init', 17448, 22244, 22252, ['    if(0 == len) return XCC_ERRNO_INVAL;']]
restartcode
['xc_jni_init', 17448, 22252, 22252, ["    if('/' != dir[0]) return XCC_ERRNO_INVAL;"]]
code
funcline addr: 22256
funcline addr: 22260
funcline addr: 22264
funcline addr: 22268
funcline addr: 22272
['xc_jni_init', 17448, 22252, 22272, ["    if('/' != dir[0]) return XCC_ERRNO_INVAL;"]]
restartcode
['xc_jni_init', 17448, 22272, 22272, ['    memcpy(buf, dir, len + 1);']]
code
funcline addr: 22276
['xc_jni_init', 17448, 22272, 22276, ['    memcpy(buf, dir, len + 1);']]
restartcode
['xc_jni_init', 17448, 22276, 22276, ['    return __builtin___memcpy_chk(dst, src, copy_amount, bos_dst);']]
code
funcline addr: 22280
funcline addr: 22284
funcline addr: 22288
funcline addr: 22292
['xc_jni_init', 17448, 22276, 22292, ['    return __builtin___memcpy_chk(dst, src, copy_amount, bos_dst);']]
restartcode
['xc_jni_init', 17448, 22292, 22292, ["    if(buf[len - 1] == '/') buf[len - 1] = '\\0';"]]
code
funcline addr: 22296
funcline addr: 22300
funcline addr: 22304
funcline addr: 22308
funcline addr: 22312
funcline addr: 22316
funcline addr: 22320
['xc_jni_init', 17448, 22292, 22320, ["    if(buf[len - 1] == '/') buf[len - 1] = '\\0';"]]
restartcode
['xc_jni_init', 17448, 22320, 22320, ['    for(p = buf + 1; *p; p++)']]
code
funcline addr: 22324
funcline addr: 22328
funcline addr: 22332
funcline addr: 22336
funcline addr: 22340
funcline addr: 22344
funcline addr: 22348
funcline addr: 22352
['xc_jni_init', 17448, 22320, 22352, ['    for(p = buf + 1; *p; p++)']]
restartcode
['xc_jni_init', 17448, 22352, 22352, ['            if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
code
funcline addr: 22356
funcline addr: 22360
['xc_jni_init', 17448, 22352, 22360, ['            if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
restartcode
['xc_jni_init', 17448, 22360, 22360, ["            *p = '\\0';"]]
code
funcline addr: 22364
funcline addr: 22368
['xc_jni_init', 17448, 22360, 22368, ["            *p = '\\0';"]]
restartcode
['xc_jni_init', 17448, 22368, 22368, ['            if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
code
funcline addr: 22372
funcline addr: 22376
funcline addr: 22380
funcline addr: 22384
funcline addr: 22388
['xc_jni_init', 17448, 22368, 22388, ['            if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
restartcode
['xc_jni_init', 17448, 22388, 22388, ["            *p = '/';"]]
code
funcline addr: 22392
funcline addr: 22396
funcline addr: 22400
['xc_jni_init', 17448, 22388, 22400, ["            *p = '/';"]]
restartcode
['xc_jni_init', 17448, 22400, 22400, ['    for(p = buf + 1; *p; p++)']]
code
funcline addr: 22404
funcline addr: 22408
funcline addr: 22412
funcline addr: 22416
['xc_jni_init', 17448, 22400, 22416, ['    for(p = buf + 1; *p; p++)']]
restartcode
['xc_jni_init', 17448, 22416, 22416, ['    if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
code
funcline addr: 22420
funcline addr: 22424
funcline addr: 22428
funcline addr: 22432
funcline addr: 22436
funcline addr: 22440
funcline addr: 22444
funcline addr: 22448
funcline addr: 22452
funcline addr: 22456
funcline addr: 22460
funcline addr: 22464
funcline addr: 22468
funcline addr: 22472
['xc_jni_init', 17448, 22416, 22472, ['    if(0 != mkdir(buf, S_IRWXU) && EEXIST != errno) return errno;']]
restartcode
['xc_jni_init', 17448, 22472, 22472, ['']]
code
funchead startaddr: 00000000000057cc,funcname: xc_jni_notify_java_crashed
['xc_jni_notify_java_crashed', 22476, 22476, 22476, ['    xc_common_java_crashed = 1;']]
code
funcline addr: 22476
funcline addr: 22480
funcline addr: 22484
['xc_jni_notify_java_crashed', 22476, 22476, 22484, ['    xc_common_java_crashed = 1;']]
restartcode
['xc_jni_notify_java_crashed', 22476, 22484, 22484, ['}']]
code
funcline addr: 22488
['xc_jni_notify_java_crashed', 22476, 22484, 22488, ['}']]
restartcode
['xc_jni_notify_java_crashed', 22476, 22488, 22488, ['']]
code
funchead startaddr: 00000000000057dc,funcname: xc_jni_test_crash
['xc_jni_test_crash', 22492, 22492, 22492, ['{']]
code
funcline addr: 22492
['xc_jni_test_crash', 22492, 22492, 22492, ['{']]
restartcode
['xc_jni_test_crash', 22492, 22492, 22492, ['    xc_test_crash(run_in_new_thread);']]
code
funcline addr: 22496
['xc_jni_test_crash', 22492, 22492, 22496, ['    xc_test_crash(run_in_new_thread);']]
restartcode
['xc_jni_test_crash', 22492, 22496, 22496, ['']]
code
funchead startaddr: 00000000000057e4,funcname: xc_test_call_4
['xc_test_call_4', 22500, 22500, 22500, [' end:']]
code
['xc_test_call_4', 22500, 22500, 22500, ['    if(NULL != libc) xc_dl_destroy(&libc);']]
code
['xc_test_call_4', 22500, 22500, 22500, ['}']]
code
['xc_test_call_4', 22500, 22500, 22500, ['']]
code
['xc_test_call_4', 22500, 22500, 22500, ['int xc_test_call_4(int v)']]
code
['xc_test_call_4', 22500, 22500, 22500, ['{']]
code
funcline addr: 22500
funcline addr: 22504
['xc_test_call_4', 22500, 22500, 22504, ['{']]
restartcode
['xc_test_call_4', 22500, 22504, 22504, ['    int *a = NULL;']]
code
['xc_test_call_4', 22500, 22504, 22504, ['']]
code
['xc_test_call_4', 22500, 22504, 22504, ['    xc_test_set_abort_msg();']]
code
funcline addr: 22508
['xc_test_call_4', 22500, 22504, 22508, ['    xc_test_set_abort_msg();']]
restartcode
['xc_test_call_4', 22500, 22508, 22508, ['    ']]
code
['xc_test_call_4', 22500, 22508, 22508, ['    *a = v; // crash!']]
code
['xc_test_call_4', 22500, 22508, 22508, ['    (*a)++;']]
code
funcline addr: 22512
['xc_test_call_4', 22500, 22508, 22512, ['    (*a)++;']]
restartcode
['xc_test_call_4', 22500, 22512, 22512, ['']]
code
funchead startaddr: 00000000000057f4,funcname: xc_test_set_abort_msg
['xc_test_set_abort_msg', 22516, 22516, 22516, ['{']]
code
funcline addr: 22516
funcline addr: 22520
funcline addr: 22524
funcline addr: 22528
funcline addr: 22532
funcline addr: 22536
funcline addr: 22540
funcline addr: 22544
['xc_test_set_abort_msg', 22516, 22516, 22544, ['{']]
restartcode
['xc_test_set_abort_msg', 22516, 22544, 22544, ['    xc_dl_t                           *libc          = NULL;']]
code
funcline addr: 22548
['xc_test_set_abort_msg', 22516, 22544, 22548, ['    xc_dl_t                           *libc          = NULL;']]
restartcode
['xc_test_set_abort_msg', 22516, 22548, 22548, ['    if(xc_common_api_level >= 29) libc = xc_dl_create(XCC_UTIL_LIBC_APEX);']]
code
funcline addr: 22552
funcline addr: 22556
funcline addr: 22560
funcline addr: 22564
funcline addr: 22568
funcline addr: 22572
['xc_test_set_abort_msg', 22516, 22548, 22572, ['    if(xc_common_api_level >= 29) libc = xc_dl_create(XCC_UTIL_LIBC_APEX);']]
restartcode
['xc_test_set_abort_msg', 22516, 22572, 22572, ['    if(NULL == libc && NULL == (libc = xc_dl_create(XCC_UTIL_LIBC))) goto end;']]
code
funcline addr: 22576
funcline addr: 22580
funcline addr: 22584
funcline addr: 22588
funcline addr: 22592
funcline addr: 22596
['xc_test_set_abort_msg', 22516, 22572, 22596, ['    if(NULL == libc && NULL == (libc = xc_dl_create(XCC_UTIL_LIBC))) goto end;']]
restartcode
['xc_test_set_abort_msg', 22516, 22596, 22596, ['    if(NULL == (set_abort_msg = (xcc_util_libc_set_abort_message_t)xc_dl_sym(libc, XCC_UTIL_LIBC_SET_ABORT_MSG))) goto end;']]
code
funcline addr: 22600
funcline addr: 22604
funcline addr: 22608
funcline addr: 22612
funcline addr: 22616
['xc_test_set_abort_msg', 22516, 22596, 22616, ['    if(NULL == (set_abort_msg = (xcc_util_libc_set_abort_message_t)xc_dl_sym(libc, XCC_UTIL_LIBC_SET_ABORT_MSG))) goto end;']]
restartcode
['xc_test_set_abort_msg', 22516, 22616, 22616, ['    set_abort_msg(XC_TEST_ABORT_MSG);']]
code
funcline addr: 22620
funcline addr: 22624
funcline addr: 22628
['xc_test_set_abort_msg', 22516, 22616, 22628, ['    set_abort_msg(XC_TEST_ABORT_MSG);']]
restartcode
['xc_test_set_abort_msg', 22516, 22628, 22628, ['    if(NULL != libc) xc_dl_destroy(&libc);']]
code
funcline addr: 22632
funcline addr: 22636
funcline addr: 22640
funcline addr: 22644
funcline addr: 22648
['xc_test_set_abort_msg', 22516, 22628, 22648, ['    if(NULL != libc) xc_dl_destroy(&libc);']]
restartcode
['xc_test_set_abort_msg', 22516, 22648, 22648, ['}']]
code
funcline addr: 22652
funcline addr: 22656
funcline addr: 22660
funcline addr: 22664
funcline addr: 22668
['xc_test_set_abort_msg', 22516, 22648, 22668, ['}']]
restartcode
['xc_test_set_abort_msg', 22516, 22668, 22668, ['']]
code
funchead startaddr: 0000000000005890,funcname: xc_test_call_3
['xc_test_call_3', 22672, 22672, 22672, ['']]
code
['xc_test_call_3', 22672, 22672, 22672, ['    return v;']]
code
['xc_test_call_3', 22672, 22672, 22672, ['}']]
code
['xc_test_call_3', 22672, 22672, 22672, ['']]
code
['xc_test_call_3', 22672, 22672, 22672, ['int xc_test_call_3(int v)']]
code
['xc_test_call_3', 22672, 22672, 22672, ['{']]
code
funcline addr: 22672
funcline addr: 22676
['xc_test_call_3', 22672, 22672, 22676, ['{']]
restartcode
['xc_test_call_3', 22672, 22676, 22676, ['    int r = xc_test_call_4(v + 1);']]
code
funcline addr: 22680
['xc_test_call_3', 22672, 22676, 22680, ['    int r = xc_test_call_4(v + 1);']]
restartcode
['xc_test_call_3', 22672, 22680, 22680, ['']]
code
funchead startaddr: 000000000000589c,funcname: xc_test_call_2
['xc_test_call_2', 22684, 22684, 22684, ['    return r;']]
code
['xc_test_call_2', 22684, 22684, 22684, ['}']]
code
['xc_test_call_2', 22684, 22684, 22684, ['']]
code
['xc_test_call_2', 22684, 22684, 22684, ['int xc_test_call_2(int v)']]
code
['xc_test_call_2', 22684, 22684, 22684, ['{']]
code
funcline addr: 22684
funcline addr: 22688
['xc_test_call_2', 22684, 22684, 22688, ['{']]
restartcode
['xc_test_call_2', 22684, 22688, 22688, ['    int r = xc_test_call_3(v + 1);']]
code
funcline addr: 22692
funcline addr: 22696
['xc_test_call_2', 22684, 22688, 22696, ['    int r = xc_test_call_3(v + 1);']]
restartcode
['xc_test_call_2', 22684, 22696, 22696, ['']]
code
funchead startaddr: 00000000000058ac,funcname: xc_test_call_1
['xc_test_call_1', 22700, 22700, 22700, ['    return r;']]
code
['xc_test_call_1', 22700, 22700, 22700, ['}']]
code
['xc_test_call_1', 22700, 22700, 22700, ['']]
code
['xc_test_call_1', 22700, 22700, 22700, ['void xc_test_call_1(void)']]
code
['xc_test_call_1', 22700, 22700, 22700, ['{']]
code
funcline addr: 22700
funcline addr: 22704
['xc_test_call_1', 22700, 22700, 22704, ['{']]
restartcode
['xc_test_call_1', 22700, 22704, 22704, ['    int r = xc_test_call_2(1);']]
code
funcline addr: 22708
funcline addr: 22712
['xc_test_call_1', 22700, 22704, 22712, ['    int r = xc_test_call_2(1);']]
restartcode
['xc_test_call_1', 22700, 22712, 22712, ['']]
code
funchead startaddr: 00000000000058bc,funcname: xc_test_crash
['xc_test_crash', 22716, 22716, 22716, ['']]
code
['xc_test_crash', 22716, 22716, 22716, ['    return NULL;']]
code
['xc_test_crash', 22716, 22716, 22716, ['}']]
code
['xc_test_crash', 22716, 22716, 22716, ['']]
code
['xc_test_crash', 22716, 22716, 22716, ['void xc_test_crash(int run_in_new_thread)']]
code
['xc_test_crash', 22716, 22716, 22716, ['{']]
code
funcline addr: 22716
funcline addr: 22720
funcline addr: 22724
funcline addr: 22728
funcline addr: 22732
funcline addr: 22736
['xc_test_crash', 22716, 22716, 22736, ['{']]
restartcode
['xc_test_crash', 22716, 22736, 22736, ['    pthread_t tid;']]
code
['xc_test_crash', 22716, 22736, 22736, ['    ']]
code
['xc_test_crash', 22716, 22736, 22736, ['    pthread_create(&tid, NULL, &xc_test_keep_logging, NULL);']]
code
funcline addr: 22740
funcline addr: 22744
funcline addr: 22748
funcline addr: 22752
funcline addr: 22756
funcline addr: 22760
funcline addr: 22764
funcline addr: 22768
['xc_test_crash', 22716, 22736, 22768, ['    pthread_create(&tid, NULL, &xc_test_keep_logging, NULL);']]
restartcode
['xc_test_crash', 22716, 22768, 22768, ['    usleep(1000 * 10);']]
code
funcline addr: 22772
funcline addr: 22776
['xc_test_crash', 22716, 22768, 22776, ['    usleep(1000 * 10);']]
restartcode
['xc_test_crash', 22716, 22776, 22776, ['']]
code
['xc_test_crash', 22716, 22776, 22776, ['    if(run_in_new_thread)']]
code
funcline addr: 22780
['xc_test_crash', 22716, 22776, 22780, ['    if(run_in_new_thread)']]
restartcode
['xc_test_crash', 22716, 22780, 22780, ['        pthread_create(&tid, NULL, &xc_test_new_thread, NULL);']]
code
funcline addr: 22784
funcline addr: 22788
funcline addr: 22792
funcline addr: 22796
funcline addr: 22800
funcline addr: 22804
funcline addr: 22808
['xc_test_crash', 22716, 22780, 22808, ['        pthread_create(&tid, NULL, &xc_test_new_thread, NULL);']]
restartcode
['xc_test_crash', 22716, 22808, 22808, ['    else']]
code
['xc_test_crash', 22716, 22808, 22808, ['        xc_test_call_1();']]
code
['xc_test_crash', 22716, 22808, 22808, ['}']]
code
funcline addr: 22812
funcline addr: 22816
funcline addr: 22820
funcline addr: 22824
['xc_test_crash', 22716, 22808, 22824, ['}']]
restartcode
['xc_test_crash', 22716, 22824, 22824, ['        xc_test_call_1();']]
code
funcline addr: 22828
funcline addr: 22832
['xc_test_crash', 22716, 22824, 22832, ['        xc_test_call_1();']]
restartcode
['xc_test_crash', 22716, 22832, 22832, ['']]
code
funchead startaddr: 0000000000005934,funcname: xc_test_keep_logging
['xc_test_keep_logging', 22836, 22836, 22836, ['{']]
code
funcline addr: 22836
funcline addr: 22840
funcline addr: 22844
funcline addr: 22848
['xc_test_keep_logging', 22836, 22836, 22848, ['{']]
restartcode
['xc_test_keep_logging', 22836, 22848, 22848, ['    pthread_detach(pthread_self());']]
code
funcline addr: 22852
funcline addr: 22856
funcline addr: 22860
['xc_test_keep_logging', 22836, 22848, 22860, ['    pthread_detach(pthread_self());']]
restartcode
['xc_test_keep_logging', 22836, 22860, 22860, ['    pthread_setname_np(pthread_self(), "xcrash_test_log");']]
code
funcline addr: 22864
funcline addr: 22868
funcline addr: 22872
funcline addr: 22876
funcline addr: 22880
funcline addr: 22884
funcline addr: 22888
funcline addr: 22892
funcline addr: 22896
['xc_test_keep_logging', 22836, 22860, 22896, ['    pthread_setname_np(pthread_self(), "xcrash_test_log");']]
restartcode
['xc_test_keep_logging', 22836, 22896, 22896, ['    while(++i < 600)']]
code
funcline addr: 22900
funcline addr: 22904
['xc_test_keep_logging', 22836, 22896, 22904, ['    while(++i < 600)']]
restartcode
['xc_test_keep_logging', 22836, 22904, 22904, ['        XC_TEST_LOG("crashed APP\'s thread is running ...... %d", i);']]
code
funcline addr: 22908
funcline addr: 22912
funcline addr: 22916
funcline addr: 22920
funcline addr: 22924
['xc_test_keep_logging', 22836, 22904, 22924, ['        XC_TEST_LOG("crashed APP\'s thread is running ...... %d", i);']]
restartcode
['xc_test_keep_logging', 22836, 22924, 22924, ['        usleep(1000 * 100);']]
code
funcline addr: 22928
funcline addr: 22932
funcline addr: 22936
['xc_test_keep_logging', 22836, 22924, 22936, ['        usleep(1000 * 100);']]
restartcode
['xc_test_keep_logging', 22836, 22936, 22936, ['    while(++i < 600)']]
code
funcline addr: 22940
funcline addr: 22944
['xc_test_keep_logging', 22836, 22936, 22944, ['    while(++i < 600)']]
restartcode
['xc_test_keep_logging', 22836, 22944, 22944, ['    return NULL;']]
code
funcline addr: 22948
funcline addr: 22952
funcline addr: 22956
funcline addr: 22960
funcline addr: 22964
['xc_test_keep_logging', 22836, 22944, 22964, ['    return NULL;']]
restartcode
['xc_test_keep_logging', 22836, 22964, 22964, ['']]
code
funchead startaddr: 00000000000059b8,funcname: xc_test_new_thread
['xc_test_new_thread', 22968, 22968, 22968, ['{']]
code
funcline addr: 22968
funcline addr: 22972
funcline addr: 22976
['xc_test_new_thread', 22968, 22968, 22976, ['{']]
restartcode
['xc_test_new_thread', 22968, 22976, 22976, ['    pthread_detach(pthread_self());']]
code
funcline addr: 22980
funcline addr: 22984
funcline addr: 22988
['xc_test_new_thread', 22968, 22976, 22988, ['    pthread_detach(pthread_self());']]
restartcode
['xc_test_new_thread', 22968, 22988, 22988, ['    pthread_setname_np(pthread_self(), "xcrash_test_cal");']]
code
funcline addr: 22992
funcline addr: 22996
funcline addr: 23000
funcline addr: 23004
['xc_test_new_thread', 22968, 22988, 23004, ['    pthread_setname_np(pthread_self(), "xcrash_test_cal");']]
restartcode
['xc_test_new_thread', 22968, 23004, 23004, ['    xc_test_call_1();']]
code
funcline addr: 23008
['xc_test_new_thread', 22968, 23004, 23008, ['    xc_test_call_1();']]
restartcode
['xc_test_new_thread', 22968, 23008, 23008, ['']]
code
funchead startaddr: 00000000000059e4,funcname: xc_trace_handler
['xc_trace_handler', 23012, 23012, 23012, ['{']]
code
funcline addr: 23012
funcline addr: 23016
funcline addr: 23020
funcline addr: 23024
['xc_trace_handler', 23012, 23012, 23024, ['{']]
restartcode
['xc_trace_handler', 23012, 23024, 23024, ['    if(xc_trace_notifier >= 0)']]
code
funcline addr: 23028
funcline addr: 23032
funcline addr: 23036
funcline addr: 23040
['xc_trace_handler', 23012, 23024, 23040, ['    if(xc_trace_notifier >= 0)']]
restartcode
['xc_trace_handler', 23012, 23040, 23040, ['        data = 1;']]
code
funcline addr: 23044
funcline addr: 23048
funcline addr: 23052
funcline addr: 23056
funcline addr: 23060
funcline addr: 23064
['xc_trace_handler', 23012, 23040, 23064, ['        data = 1;']]
restartcode
['xc_trace_handler', 23012, 23064, 23064, ['        XCC_UTIL_TEMP_FAILURE_RETRY(write(xc_trace_notifier, &data, sizeof(data)));']]
code
funcline addr: 23068
funcline addr: 23072
funcline addr: 23076
funcline addr: 23080
funcline addr: 23084
funcline addr: 23088
funcline addr: 23092
funcline addr: 23096
['xc_trace_handler', 23012, 23064, 23096, ['        XCC_UTIL_TEMP_FAILURE_RETRY(write(xc_trace_notifier, &data, sizeof(data)));']]
restartcode
['xc_trace_handler', 23012, 23096, 23096, ['}']]
code
funcline addr: 23100
funcline addr: 23104
['xc_trace_handler', 23012, 23096, 23104, ['}']]
restartcode
['xc_trace_handler', 23012, 23104, 23104, ['']]
code
funchead startaddr: 0000000000005a44,funcname: xc_trace_dumper
['xc_trace_dumper', 23108, 23108, 23108, ['{']]
code
funcline addr: 23108
funcline addr: 23112
funcline addr: 23116
funcline addr: 23120
funcline addr: 23124
funcline addr: 23128
funcline addr: 23132
funcline addr: 23136
funcline addr: 23140
['xc_trace_dumper', 23108, 23108, 23140, ['{']]
restartcode
['xc_trace_dumper', 23108, 23140, 23140, ['    JNIEnv         *env = NULL;']]
code
funcline addr: 23144
['xc_trace_dumper', 23108, 23140, 23144, ['    JNIEnv         *env = NULL;']]
restartcode
['xc_trace_dumper', 23108, 23144, 23144, ['    pthread_detach(pthread_self());']]
code
funcline addr: 23148
funcline addr: 23152
['xc_trace_dumper', 23108, 23144, 23152, ['    pthread_detach(pthread_self());']]
restartcode
['xc_trace_dumper', 23108, 23152, 23152, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 23156
funcline addr: 23160
['xc_trace_dumper', 23108, 23152, 23160, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_trace_dumper', 23108, 23160, 23160, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
code
funcline addr: 23164
['xc_trace_dumper', 23108, 23160, 23164, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
restartcode
['xc_trace_dumper', 23108, 23164, 23164, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 23168
funcline addr: 23172
['xc_trace_dumper', 23108, 23164, 23172, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_trace_dumper', 23108, 23172, 23172, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
code
funcline addr: 23176
funcline addr: 23180
['xc_trace_dumper', 23108, 23172, 23180, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
restartcode
['xc_trace_dumper', 23108, 23180, 23180, ['    JavaVMAttachArgs attach_args = {']]
code
funcline addr: 23184
funcline addr: 23188
['xc_trace_dumper', 23108, 23180, 23188, ['    JavaVMAttachArgs attach_args = {']]
restartcode
['xc_trace_dumper', 23108, 23188, 23188, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
code
funcline addr: 23192
funcline addr: 23196
funcline addr: 23200
funcline addr: 23204
funcline addr: 23208
funcline addr: 23212
funcline addr: 23216
funcline addr: 23220
funcline addr: 23224
funcline addr: 23228
funcline addr: 23232
funcline addr: 23236
funcline addr: 23240
funcline addr: 23244
funcline addr: 23248
['xc_trace_dumper', 23108, 23188, 23248, ['    if(JNI_OK != (*xc_common_vm)->AttachCurrentThread(xc_common_vm, &env, &attach_args)) goto exit;']]
restartcode
['xc_trace_dumper', 23108, 23248, 23248, ['        XCC_UTIL_TEMP_FAILURE_RETRY(read(xc_trace_notifier, &data, sizeof(data)));']]
code
funcline addr: 23252
funcline addr: 23256
['xc_trace_dumper', 23108, 23248, 23256, ['        XCC_UTIL_TEMP_FAILURE_RETRY(read(xc_trace_notifier, &data, sizeof(data)));']]
restartcode
['xc_trace_dumper', 23108, 23256, 23256, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
code
funcline addr: 23260
funcline addr: 23264
funcline addr: 23268
funcline addr: 23272
funcline addr: 23276
funcline addr: 23280
funcline addr: 23284
['xc_trace_dumper', 23108, 23256, 23284, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
restartcode
['xc_trace_dumper', 23108, 23284, 23284, ['        if(xc_common_native_crashed || xc_common_java_crashed) break;']]
code
funcline addr: 23288
funcline addr: 23292
funcline addr: 23296
funcline addr: 23300
['xc_trace_dumper', 23108, 23284, 23300, ['        if(xc_common_native_crashed || xc_common_java_crashed) break;']]
restartcode
['xc_trace_dumper', 23108, 23300, 23300, ['        if(0 != gettimeofday(&tv, NULL)) break;']]
code
funcline addr: 23304
funcline addr: 23308
funcline addr: 23312
funcline addr: 23316
['xc_trace_dumper', 23108, 23300, 23316, ['        if(0 != gettimeofday(&tv, NULL)) break;']]
restartcode
['xc_trace_dumper', 23108, 23316, 23316, ['    if(0 > (n = scandir(xc_common_log_dir, &entry_list, xc_trace_logs_filter, alphasort))) return XCC_ERRNO_SYS;']]
code
funcline addr: 23320
funcline addr: 23324
['xc_trace_dumper', 23108, 23316, 23324, ['    if(0 > (n = scandir(xc_common_log_dir, &entry_list, xc_trace_logs_filter, alphasort))) return XCC_ERRNO_SYS;']]
restartcode
['xc_trace_dumper', 23108, 23324, 23324, ['        trace_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
code
funcline addr: 23328
['xc_trace_dumper', 23108, 23324, 23328, ['        trace_time = (uint64_t)(tv.tv_sec) * 1000 * 1000 + (uint64_t)tv.tv_usec;']]
restartcode
['xc_trace_dumper', 23108, 23328, 23328, ['    if(0 > (n = scandir(xc_common_log_dir, &entry_list, xc_trace_logs_filter, alphasort))) return XCC_ERRNO_SYS;']]
code
funcline addr: 23332
funcline addr: 23336
funcline addr: 23340
funcline addr: 23344
funcline addr: 23348
funcline addr: 23352
funcline addr: 23356
funcline addr: 23360
funcline addr: 23364
funcline addr: 23368
['xc_trace_dumper', 23108, 23328, 23368, ['    if(0 > (n = scandir(xc_common_log_dir, &entry_list, xc_trace_logs_filter, alphasort))) return XCC_ERRNO_SYS;']]
restartcode
['xc_trace_dumper', 23108, 23368, 23368, ['    for(i = 0; i < n; i++)']]
code
funcline addr: 23372
funcline addr: 23376
funcline addr: 23380
funcline addr: 23384
funcline addr: 23388
funcline addr: 23392
funcline addr: 23396
['xc_trace_dumper', 23108, 23368, 23396, ['    for(i = 0; i < n; i++)']]
restartcode
['xc_trace_dumper', 23108, 23396, 23396, ['        snprintf(pathname, sizeof(pathname), "%s/%s", xc_common_log_dir, entry_list[i]->d_name);']]
code
funcline addr: 23400
funcline addr: 23404
funcline addr: 23408
funcline addr: 23412
funcline addr: 23416
funcline addr: 23420
funcline addr: 23424
funcline addr: 23428
funcline addr: 23432
['xc_trace_dumper', 23108, 23396, 23432, ['        snprintf(pathname, sizeof(pathname), "%s/%s", xc_common_log_dir, entry_list[i]->d_name);']]
restartcode
['xc_trace_dumper', 23108, 23432, 23432, ['        if(0 != unlink(pathname)) r = XCC_ERRNO_SYS;']]
code
funcline addr: 23436
funcline addr: 23440
funcline addr: 23444
funcline addr: 23448
funcline addr: 23452
funcline addr: 23456
['xc_trace_dumper', 23108, 23432, 23456, ['        if(0 != unlink(pathname)) r = XCC_ERRNO_SYS;']]
restartcode
['xc_trace_dumper', 23108, 23456, 23456, ['    for(i = 0; i < n; i++)']]
code
funcline addr: 23460
funcline addr: 23464
['xc_trace_dumper', 23108, 23456, 23464, ['    for(i = 0; i < n; i++)']]
restartcode
['xc_trace_dumper', 23108, 23464, 23464, ['    free(entry_list);']]
code
funcline addr: 23468
funcline addr: 23472
funcline addr: 23476
funcline addr: 23480
['xc_trace_dumper', 23108, 23464, 23480, ['    free(entry_list);']]
restartcode
['xc_trace_dumper', 23108, 23480, 23480, ['        if(0 != xc_trace_logs_clean()) continue;']]
code
funcline addr: 23484
['xc_trace_dumper', 23108, 23480, 23484, ['        if(0 != xc_trace_logs_clean()) continue;']]
restartcode
['xc_trace_dumper', 23108, 23484, 23484, ['    return xc_common_open_log(0, trace_time, pathname, pathname_len, NULL);']]
code
funcline addr: 23488
funcline addr: 23492
funcline addr: 23496
funcline addr: 23500
funcline addr: 23504
['xc_trace_dumper', 23108, 23484, 23504, ['    return xc_common_open_log(0, trace_time, pathname, pathname_len, NULL);']]
restartcode
['xc_trace_dumper', 23108, 23504, 23504, ['        if((fd = xc_common_open_trace_log(pathname, sizeof(pathname), trace_time)) < 0) continue;']]
code
funcline addr: 23508
funcline addr: 23512
funcline addr: 23516
funcline addr: 23520
['xc_trace_dumper', 23108, 23504, 23520, ['        if((fd = xc_common_open_trace_log(pathname, sizeof(pathname), trace_time)) < 0) continue;']]
restartcode
['xc_trace_dumper', 23108, 23520, 23520, ['                             xc_common_start_time,']]
code
funcline addr: 23524
['xc_trace_dumper', 23108, 23520, 23524, ['                             xc_common_start_time,']]
restartcode
['xc_trace_dumper', 23108, 23524, 23524, ['                             xc_common_app_id,']]
code
funcline addr: 23528
['xc_trace_dumper', 23108, 23524, 23528, ['                             xc_common_app_id,']]
restartcode
['xc_trace_dumper', 23108, 23528, 23528, ['                             xc_common_api_level,']]
code
funcline addr: 23532
['xc_trace_dumper', 23108, 23528, 23532, ['                             xc_common_api_level,']]
restartcode
['xc_trace_dumper', 23108, 23532, 23532, ['                             xc_common_kernel_version,']]
code
funcline addr: 23536
['xc_trace_dumper', 23108, 23532, 23536, ['                             xc_common_kernel_version,']]
restartcode
['xc_trace_dumper', 23108, 23536, 23536, ['                             xc_common_os_version,']]
code
funcline addr: 23540
['xc_trace_dumper', 23108, 23536, 23540, ['                             xc_common_os_version,']]
restartcode
['xc_trace_dumper', 23108, 23540, 23540, ['                             xc_common_manufacturer,']]
code
funcline addr: 23544
['xc_trace_dumper', 23108, 23540, 23544, ['                             xc_common_manufacturer,']]
restartcode
['xc_trace_dumper', 23108, 23544, 23544, ['                             xc_common_model,']]
code
funcline addr: 23548
['xc_trace_dumper', 23108, 23544, 23548, ['                             xc_common_model,']]
restartcode
['xc_trace_dumper', 23108, 23548, 23548, ['    xcc_util_get_dump_header(buf, sizeof(buf),']]
code
funcline addr: 23552
funcline addr: 23556
funcline addr: 23560
funcline addr: 23564
funcline addr: 23568
funcline addr: 23572
funcline addr: 23576
funcline addr: 23580
['xc_trace_dumper', 23108, 23548, 23580, ['    xcc_util_get_dump_header(buf, sizeof(buf),']]
restartcode
['xc_trace_dumper', 23108, 23580, 23580, ['    if(0 != (r = xcc_util_write_str(fd, buf))) return r;']]
code
funcline addr: 23584
funcline addr: 23588
funcline addr: 23592
funcline addr: 23596
funcline addr: 23600
funcline addr: 23604
funcline addr: 23608
funcline addr: 23612
funcline addr: 23616
funcline addr: 23620
['xc_trace_dumper', 23108, 23580, 23620, ['    if(0 != (r = xcc_util_write_str(fd, buf))) return r;']]
restartcode
['xc_trace_dumper', 23108, 23620, 23620, ['    return xcc_util_write_format(fd, "pid: %d  >>> %s <<<\\n\\n", xc_common_process_id, xc_common_process_name);']]
code
funcline addr: 23624
funcline addr: 23628
funcline addr: 23632
funcline addr: 23636
funcline addr: 23640
funcline addr: 23644
funcline addr: 23648
['xc_trace_dumper', 23108, 23620, 23648, ['    return xcc_util_write_format(fd, "pid: %d  >>> %s <<<\\n\\n", xc_common_process_id, xc_common_process_name);']]
restartcode
['xc_trace_dumper', 23108, 23648, 23648, ['        if(0 != xc_trace_write_header(fd, trace_time)) goto end;']]
code
funcline addr: 23652
['xc_trace_dumper', 23108, 23648, 23652, ['        if(0 != xc_trace_write_header(fd, trace_time)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 23652, 23652, ['        if(0 != xcc_util_write_format(fd, XCC_UTIL_THREAD_SEP"Cmd line: %s\\n", xc_common_process_name)) goto end;']]
code
funcline addr: 23656
funcline addr: 23660
funcline addr: 23664
funcline addr: 23668
funcline addr: 23672
funcline addr: 23676
funcline addr: 23680
['xc_trace_dumper', 23108, 23652, 23680, ['        if(0 != xcc_util_write_format(fd, XCC_UTIL_THREAD_SEP"Cmd line: %s\\n", xc_common_process_name)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 23680, 23680, ['        if(0 != xcc_util_write_str(fd, "Mode: ART DumpForSigQuit\\n")) goto end;']]
code
funcline addr: 23684
funcline addr: 23688
funcline addr: 23692
funcline addr: 23696
funcline addr: 23700
funcline addr: 23704
['xc_trace_dumper', 23108, 23680, 23704, ['        if(0 != xcc_util_write_str(fd, "Mode: ART DumpForSigQuit\\n")) goto end;']]
restartcode
['xc_trace_dumper', 23108, 23704, 23704, ['    xc_common_open_prepared_fd(is_crash);']]
code
funcline addr: 23708
funcline addr: 23712
['xc_trace_dumper', 23108, 23704, 23712, ['    xc_common_open_prepared_fd(is_crash);']]
restartcode
['xc_trace_dumper', 23108, 23712, 23712, ['        if(xc_trace_rethrow && (XC_TRACE_DUMP_ART_CRASH != xc_trace_dump_status)) xc_trace_send_sigquit();']]
code
funcline addr: 23716
funcline addr: 23720
funcline addr: 23724
funcline addr: 23728
funcline addr: 23732
['xc_trace_dumper', 23108, 23712, 23732, ['        if(xc_trace_rethrow && (XC_TRACE_DUMP_ART_CRASH != xc_trace_dump_status)) xc_trace_send_sigquit();']]
restartcode
['xc_trace_dumper', 23108, 23732, 23732, ['    if(XC_TRACE_SIGNAL_CATCHER_TID_UNLOAD == xc_trace_signal_catcher_tid)']]
code
funcline addr: 23736
funcline addr: 23740
funcline addr: 23744
funcline addr: 23748
['xc_trace_dumper', 23108, 23732, 23748, ['    if(XC_TRACE_SIGNAL_CATCHER_TID_UNLOAD == xc_trace_signal_catcher_tid)']]
restartcode
['xc_trace_dumper', 23108, 23748, 23748, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
code
funcline addr: 23752
funcline addr: 23756
funcline addr: 23760
['xc_trace_dumper', 23108, 23748, 23760, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
restartcode
['xc_trace_dumper', 23108, 23760, 23760, ['    xc_trace_signal_catcher_tid = XC_TRACE_SIGNAL_CATCHER_TID_UNKNOWN;']]
code
funcline addr: 23764
funcline addr: 23768
['xc_trace_dumper', 23108, 23760, 23768, ['    xc_trace_signal_catcher_tid = XC_TRACE_SIGNAL_CATCHER_TID_UNKNOWN;']]
restartcode
['xc_trace_dumper', 23108, 23768, 23768, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
code
funcline addr: 23772
funcline addr: 23776
funcline addr: 23780
funcline addr: 23784
['xc_trace_dumper', 23108, 23768, 23784, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
restartcode
['xc_trace_dumper', 23108, 23784, 23784, ['    xc_trace_signal_catcher_tid = XC_TRACE_SIGNAL_CATCHER_TID_UNKNOWN;']]
code
funcline addr: 23788
['xc_trace_dumper', 23108, 23784, 23788, ['    xc_trace_signal_catcher_tid = XC_TRACE_SIGNAL_CATCHER_TID_UNKNOWN;']]
restartcode
['xc_trace_dumper', 23108, 23788, 23788, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
code
funcline addr: 23792
['xc_trace_dumper', 23108, 23788, 23792, ['    snprintf(buf, sizeof(buf), "/proc/%d/task", xc_common_process_id);']]
restartcode
['xc_trace_dumper', 23108, 23792, 23792, ['    if(NULL == (dir = opendir(buf))) return;']]
code
funcline addr: 23796
funcline addr: 23800
funcline addr: 23804
funcline addr: 23808
funcline addr: 23812
funcline addr: 23816
['xc_trace_dumper', 23108, 23792, 23816, ['    if(NULL == (dir = opendir(buf))) return;']]
restartcode
['xc_trace_dumper', 23108, 23816, 23816, ['    while(NULL != (ent = readdir(dir)))']]
code
funcline addr: 23820
funcline addr: 23824
funcline addr: 23828
['xc_trace_dumper', 23108, 23816, 23828, ['    while(NULL != (ent = readdir(dir)))']]
restartcode
['xc_trace_dumper', 23108, 23828, 23828, ['        if(0 != xcc_util_atoi(ent->d_name, &tid)) continue;']]
code
funcline addr: 23832
funcline addr: 23836
funcline addr: 23840
funcline addr: 23844
funcline addr: 23848
funcline addr: 23852
['xc_trace_dumper', 23108, 23828, 23852, ['        if(0 != xcc_util_atoi(ent->d_name, &tid)) continue;']]
restartcode
['xc_trace_dumper', 23108, 23852, 23852, ['        xcc_util_get_thread_name(tid, buf, sizeof(buf));']]
code
funcline addr: 23856
funcline addr: 23860
funcline addr: 23864
['xc_trace_dumper', 23108, 23852, 23864, ['        xcc_util_get_thread_name(tid, buf, sizeof(buf));']]
restartcode
['xc_trace_dumper', 23108, 23864, 23864, ['        if(0 != strcmp(buf, XC_TRACE_SIGNAL_CATCHER_THREAD_NAME)) continue;']]
code
funcline addr: 23868
funcline addr: 23872
funcline addr: 23876
funcline addr: 23880
funcline addr: 23884
funcline addr: 23888
['xc_trace_dumper', 23108, 23864, 23888, ['        if(0 != strcmp(buf, XC_TRACE_SIGNAL_CATCHER_THREAD_NAME)) continue;']]
restartcode
['xc_trace_dumper', 23108, 23888, 23888, ['        snprintf(buf, sizeof(buf), "/proc/%d/status", tid);']]
code
funcline addr: 23892
funcline addr: 23896
funcline addr: 23900
funcline addr: 23904
funcline addr: 23908
funcline addr: 23912
['xc_trace_dumper', 23108, 23888, 23912, ['        snprintf(buf, sizeof(buf), "/proc/%d/status", tid);']]
restartcode
['xc_trace_dumper', 23108, 23912, 23912, ['        sigblk = 0;']]
code
funcline addr: 23916
['xc_trace_dumper', 23108, 23912, 23916, ['        sigblk = 0;']]
restartcode
['xc_trace_dumper', 23108, 23916, 23916, ['        snprintf(buf, sizeof(buf), "/proc/%d/status", tid);']]
code
funcline addr: 23920
['xc_trace_dumper', 23108, 23916, 23920, ['        snprintf(buf, sizeof(buf), "/proc/%d/status", tid);']]
restartcode
['xc_trace_dumper', 23108, 23920, 23920, ['        if(NULL == (f = fopen(buf, "r"))) break;']]
code
funcline addr: 23924
funcline addr: 23928
funcline addr: 23932
funcline addr: 23936
funcline addr: 23940
funcline addr: 23944
['xc_trace_dumper', 23108, 23920, 23944, ['        if(NULL == (f = fopen(buf, "r"))) break;']]
restartcode
['xc_trace_dumper', 23108, 23944, 23944, ['']]
code
['xc_trace_dumper', 23108, 23944, 23944, ['    if (!__bos_dynamic_check_impl_and(bos, >=, (size_t)size, size >= 0)) {']]
code
['xc_trace_dumper', 23108, 23944, 23944, ['        return __fgets_chk(dest, size, stream, bos);']]
code
['xc_trace_dumper', 23108, 23944, 23944, ['    }']]
code
['xc_trace_dumper', 23108, 23944, 23944, ['#endif /* __ANDROID_API__ >= __ANDROID_API_J_MR1__ */']]
code
['xc_trace_dumper', 23108, 23944, 23944, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
code
funcline addr: 23948
funcline addr: 23952
funcline addr: 23956
funcline addr: 23960
['xc_trace_dumper', 23108, 23944, 23960, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
restartcode
['xc_trace_dumper', 23108, 23960, 23960, ['        while(fgets(buf, sizeof(buf), f))']]
code
funcline addr: 23964
['xc_trace_dumper', 23108, 23960, 23964, ['        while(fgets(buf, sizeof(buf), f))']]
restartcode
['xc_trace_dumper', 23108, 23964, 23964, ['            if(1 == sscanf(buf, "SigBlk: %"SCNx64, &sigblk)) break;']]
code
funcline addr: 23968
funcline addr: 23972
funcline addr: 23976
funcline addr: 23980
funcline addr: 23984
funcline addr: 23988
['xc_trace_dumper', 23108, 23964, 23988, ['            if(1 == sscanf(buf, "SigBlk: %"SCNx64, &sigblk)) break;']]
restartcode
['xc_trace_dumper', 23108, 23988, 23988, ['        fclose(f);']]
code
funcline addr: 23992
funcline addr: 23996
['xc_trace_dumper', 23108, 23988, 23996, ['        fclose(f);']]
restartcode
['xc_trace_dumper', 23108, 23996, 23996, ['        if(XC_TRACE_SIGNAL_CATCHER_THREAD_SIGBLK != sigblk) continue;']]
code
funcline addr: 24000
funcline addr: 24004
funcline addr: 24008
['xc_trace_dumper', 23108, 23996, 24008, ['        if(XC_TRACE_SIGNAL_CATCHER_THREAD_SIGBLK != sigblk) continue;']]
restartcode
['xc_trace_dumper', 23108, 24008, 24008, ['        xc_trace_signal_catcher_tid = tid;']]
code
funcline addr: 24012
funcline addr: 24016
funcline addr: 24020
['xc_trace_dumper', 23108, 24008, 24020, ['        xc_trace_signal_catcher_tid = tid;']]
restartcode
['xc_trace_dumper', 23108, 24020, 24020, ['    closedir(dir);']]
code
funcline addr: 24024
funcline addr: 24028
funcline addr: 24032
funcline addr: 24036
['xc_trace_dumper', 23108, 24020, 24036, ['    closedir(dir);']]
restartcode
['xc_trace_dumper', 23108, 24036, 24036, ['    if(xc_trace_signal_catcher_tid >= 0)']]
code
funcline addr: 24040
funcline addr: 24044
funcline addr: 24048
['xc_trace_dumper', 23108, 24036, 24048, ['    if(xc_trace_signal_catcher_tid >= 0)']]
restartcode
['xc_trace_dumper', 23108, 24048, 24048, ['        syscall(SYS_tgkill, xc_common_process_id, xc_trace_signal_catcher_tid, SIGQUIT);']]
code
funcline addr: 24052
funcline addr: 24056
funcline addr: 24060
funcline addr: 24064
funcline addr: 24068
['xc_trace_dumper', 23108, 24048, 24068, ['        syscall(SYS_tgkill, xc_common_process_id, xc_trace_signal_catcher_tid, SIGQUIT);']]
restartcode
['xc_trace_dumper', 23108, 24068, 24068, ['        if(NULL == xc_trace_cb_method) continue;']]
code
funcline addr: 24072
['xc_trace_dumper', 23108, 24068, 24072, ['        if(NULL == xc_trace_cb_method) continue;']]
restartcode
['xc_trace_dumper', 23108, 24072, 24072, ['        xc_trace_dump_status = XC_TRACE_DUMP_END;']]
code
funcline addr: 24076
funcline addr: 24080
['xc_trace_dumper', 23108, 24072, 24080, ['        xc_trace_dump_status = XC_TRACE_DUMP_END;']]
restartcode
['xc_trace_dumper', 23108, 24080, 24080, ['        if(NULL == xc_trace_cb_method) continue;']]
code
funcline addr: 24084
['xc_trace_dumper', 23108, 24080, 24084, ['        if(NULL == xc_trace_cb_method) continue;']]
restartcode
['xc_trace_dumper', 23108, 24084, 24084, ['        if(NULL == (j_pathname = (*env)->NewStringUTF(env, pathname))) continue;']]
code
funcline addr: 24088
funcline addr: 24092
funcline addr: 24096
funcline addr: 24100
funcline addr: 24104
['xc_trace_dumper', 23108, 24084, 24104, ['        if(NULL == (j_pathname = (*env)->NewStringUTF(env, pathname))) continue;']]
restartcode
['xc_trace_dumper', 23108, 24104, 24104, ['        (*env)->CallStaticVoidMethod(env, xc_common_cb_class, xc_trace_cb_method, j_pathname, NULL);']]
code
funcline addr: 24108
funcline addr: 24112
funcline addr: 24116
funcline addr: 24120
funcline addr: 24124
funcline addr: 24128
funcline addr: 24132
['xc_trace_dumper', 23108, 24104, 24132, ['        (*env)->CallStaticVoidMethod(env, xc_common_cb_class, xc_trace_cb_method, j_pathname, NULL);']]
restartcode
['xc_trace_dumper', 23108, 24132, 24132, ['        XC_JNI_IGNORE_PENDING_EXCEPTION();']]
code
funcline addr: 24136
funcline addr: 24140
funcline addr: 24144
funcline addr: 24148
funcline addr: 24152
funcline addr: 24156
funcline addr: 24160
funcline addr: 24164
['xc_trace_dumper', 23108, 24132, 24164, ['        XC_JNI_IGNORE_PENDING_EXCEPTION();']]
restartcode
['xc_trace_dumper', 23108, 24164, 24164, ['        (*env)->DeleteLocalRef(env, j_pathname);']]
code
funcline addr: 24168
funcline addr: 24172
funcline addr: 24176
funcline addr: 24180
funcline addr: 24184
funcline addr: 24188
['xc_trace_dumper', 23108, 24164, 24188, ['        (*env)->DeleteLocalRef(env, j_pathname);']]
restartcode
['xc_trace_dumper', 23108, 24188, 24188, ['    if(xc_trace_symbols_loaded) return xc_trace_symbols_status;']]
code
funcline addr: 24192
funcline addr: 24196
['xc_trace_dumper', 23108, 24188, 24196, ['    if(xc_trace_symbols_loaded) return xc_trace_symbols_status;']]
restartcode
['xc_trace_dumper', 23108, 24196, 24196, ['    xc_dl_t *libcpp = NULL;']]
code
funcline addr: 24200
['xc_trace_dumper', 23108, 24196, 24200, ['    xc_dl_t *libcpp = NULL;']]
restartcode
['xc_trace_dumper', 23108, 24200, 24200, ['    xc_dl_t *libart = NULL;']]
code
funcline addr: 24204
['xc_trace_dumper', 23108, 24200, 24204, ['    xc_dl_t *libart = NULL;']]
restartcode
['xc_trace_dumper', 23108, 24204, 24204, ['    if(xc_trace_symbols_loaded) return xc_trace_symbols_status;']]
code
funcline addr: 24208
funcline addr: 24212
funcline addr: 24216
funcline addr: 24220
funcline addr: 24224
['xc_trace_dumper', 23108, 24204, 24224, ['    if(xc_trace_symbols_loaded) return xc_trace_symbols_status;']]
restartcode
['xc_trace_dumper', 23108, 24224, 24224, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
code
funcline addr: 24228
funcline addr: 24232
['xc_trace_dumper', 23108, 24224, 24232, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
restartcode
['xc_trace_dumper', 23108, 24232, 24232, ['    xc_trace_symbols_loaded = 1;']]
code
funcline addr: 24236
funcline addr: 24240
['xc_trace_dumper', 23108, 24232, 24240, ['    xc_trace_symbols_loaded = 1;']]
restartcode
['xc_trace_dumper', 23108, 24240, 24240, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
code
funcline addr: 24244
funcline addr: 24248
funcline addr: 24252
['xc_trace_dumper', 23108, 24240, 24252, ['    if(xc_common_api_level >= 29) libcpp = xc_dl_create(XCC_UTIL_LIBCPP_APEX);']]
restartcode
['xc_trace_dumper', 23108, 24252, 24252, ['    if(NULL == libcpp && NULL == (libcpp = xc_dl_create(XCC_UTIL_LIBCPP))) goto end;']]
code
funcline addr: 24256
funcline addr: 24260
funcline addr: 24264
funcline addr: 24268
funcline addr: 24272
['xc_trace_dumper', 23108, 24252, 24272, ['    if(NULL == libcpp && NULL == (libcpp = xc_dl_create(XCC_UTIL_LIBCPP))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24272, 24272, ['    if(NULL == (xc_trace_libcpp_cerr = xc_dl_sym(libcpp, XCC_UTIL_LIBCPP_CERR))) goto end;']]
code
funcline addr: 24276
funcline addr: 24280
funcline addr: 24284
funcline addr: 24288
funcline addr: 24292
funcline addr: 24296
['xc_trace_dumper', 23108, 24272, 24296, ['    if(NULL == (xc_trace_libcpp_cerr = xc_dl_sym(libcpp, XCC_UTIL_LIBCPP_CERR))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24296, 24296, ['    if(xc_common_api_level >= 30) ']]
code
funcline addr: 24300
funcline addr: 24304
funcline addr: 24308
funcline addr: 24312
['xc_trace_dumper', 23108, 24296, 24312, ['    if(xc_common_api_level >= 30) ']]
restartcode
['xc_trace_dumper', 23108, 24312, 24312, ['    else if(xc_common_api_level == 29) ']]
code
funcline addr: 24316
funcline addr: 24320
funcline addr: 24324
funcline addr: 24328
['xc_trace_dumper', 23108, 24312, 24328, ['    else if(xc_common_api_level == 29) ']]
restartcode
['xc_trace_dumper', 23108, 24328, 24328, ['    if(NULL == libart && NULL == (libart = xc_dl_create(XCC_UTIL_LIBART))) goto end;']]
code
funcline addr: 24332
funcline addr: 24336
funcline addr: 24340
funcline addr: 24344
funcline addr: 24348
['xc_trace_dumper', 23108, 24328, 24348, ['    if(NULL == libart && NULL == (libart = xc_dl_create(XCC_UTIL_LIBART))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24348, 24348, ['    if(NULL == (xc_trace_libart_runtime_instance = (void **)xc_dl_sym(libart, XCC_UTIL_LIBART_RUNTIME_INSTANCE))) goto end;']]
code
funcline addr: 24352
funcline addr: 24356
funcline addr: 24360
funcline addr: 24364
funcline addr: 24368
funcline addr: 24372
funcline addr: 24376
['xc_trace_dumper', 23108, 24348, 24376, ['    if(NULL == (xc_trace_libart_runtime_instance = (void **)xc_dl_sym(libart, XCC_UTIL_LIBART_RUNTIME_INSTANCE))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24376, 24376, ['    if(NULL == (xc_trace_libart_runtime_dump = (xcc_util_libart_runtime_dump_t)xc_dl_sym(libart, XCC_UTIL_LIBART_RUNTIME_DUMP))) goto end;']]
code
funcline addr: 24380
funcline addr: 24384
funcline addr: 24388
funcline addr: 24392
funcline addr: 24396
funcline addr: 24400
funcline addr: 24404
['xc_trace_dumper', 23108, 24376, 24404, ['    if(NULL == (xc_trace_libart_runtime_dump = (xcc_util_libart_runtime_dump_t)xc_dl_sym(libart, XCC_UTIL_LIBART_RUNTIME_DUMP))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24404, 24404, ['    if(xc_trace_is_lollipop)']]
code
funcline addr: 24408
funcline addr: 24412
funcline addr: 24416
['xc_trace_dumper', 23108, 24404, 24416, ['    if(xc_trace_is_lollipop)']]
restartcode
['xc_trace_dumper', 23108, 24416, 24416, ['        if(NULL == (xc_trace_libart_dbg_suspend = (xcc_util_libart_dbg_suspend_t)xc_dl_sym(libart, XCC_UTIL_LIBART_DBG_SUSPEND))) goto end;']]
code
funcline addr: 24420
funcline addr: 24424
funcline addr: 24428
funcline addr: 24432
funcline addr: 24436
funcline addr: 24440
funcline addr: 24444
['xc_trace_dumper', 23108, 24416, 24444, ['        if(NULL == (xc_trace_libart_dbg_suspend = (xcc_util_libart_dbg_suspend_t)xc_dl_sym(libart, XCC_UTIL_LIBART_DBG_SUSPEND))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24444, 24444, ['        if(NULL == (xc_trace_libart_dbg_resume = (xcc_util_libart_dbg_resume_t)xc_dl_sym(libart, XCC_UTIL_LIBART_DBG_RESUME))) goto end;']]
code
funcline addr: 24448
funcline addr: 24452
funcline addr: 24456
funcline addr: 24460
funcline addr: 24464
funcline addr: 24468
funcline addr: 24472
['xc_trace_dumper', 23108, 24444, 24472, ['        if(NULL == (xc_trace_libart_dbg_resume = (xcc_util_libart_dbg_resume_t)xc_dl_sym(libart, XCC_UTIL_LIBART_DBG_RESUME))) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24472, 24472, ['    xc_trace_symbols_status = 0;']]
code
funcline addr: 24476
funcline addr: 24480
funcline addr: 24484
['xc_trace_dumper', 23108, 24472, 24484, ['    xc_trace_symbols_status = 0;']]
restartcode
['xc_trace_dumper', 23108, 24484, 24484, ['    if(NULL != libcpp) xc_dl_destroy(&libcpp);']]
code
funcline addr: 24488
funcline addr: 24492
['xc_trace_dumper', 23108, 24484, 24492, ['    if(NULL != libcpp) xc_dl_destroy(&libcpp);']]
restartcode
['xc_trace_dumper', 23108, 24492, 24492, ['    if(NULL != libart) xc_dl_destroy(&libart);']]
code
funcline addr: 24496
funcline addr: 24500
funcline addr: 24504
funcline addr: 24508
funcline addr: 24512
funcline addr: 24516
funcline addr: 24520
funcline addr: 24524
funcline addr: 24528
['xc_trace_dumper', 23108, 24492, 24528, ['    if(NULL != libart) xc_dl_destroy(&libart);']]
restartcode
['xc_trace_dumper', 23108, 24528, 24528, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
code
funcline addr: 24532
funcline addr: 24536
funcline addr: 24540
funcline addr: 24544
funcline addr: 24548
funcline addr: 24552
funcline addr: 24556
funcline addr: 24560
funcline addr: 24564
funcline addr: 24568
funcline addr: 24572
['xc_trace_dumper', 23108, 24528, 24572, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
restartcode
['xc_trace_dumper', 23108, 24572, 24572, ['    while(fgets(line, sizeof(line), f))']]
code
funcline addr: 24576
funcline addr: 24580
['xc_trace_dumper', 23108, 24572, 24580, ['    while(fgets(line, sizeof(line), f))']]
restartcode
['xc_trace_dumper', 23108, 24580, 24580, ['        if(2 != sscanf(line, "%"SCNxPTR"-%"SCNxPTR" r", &start, &end)) continue;']]
code
funcline addr: 24584
funcline addr: 24588
funcline addr: 24592
['xc_trace_dumper', 23108, 24580, 24592, ['        if(2 != sscanf(line, "%"SCNxPTR"-%"SCNxPTR" r", &start, &end)) continue;']]
restartcode
['xc_trace_dumper', 23108, 24592, 24592, ['        if(0 != r_cerr && (uintptr_t)xc_trace_libcpp_cerr >= start && (uintptr_t)xc_trace_libcpp_cerr < end)']]
code
funcline addr: 24596
funcline addr: 24600
funcline addr: 24604
funcline addr: 24608
funcline addr: 24612
funcline addr: 24616
funcline addr: 24620
funcline addr: 24624
['xc_trace_dumper', 23108, 24592, 24624, ['        if(0 != r_cerr && (uintptr_t)xc_trace_libcpp_cerr >= start && (uintptr_t)xc_trace_libcpp_cerr < end)']]
restartcode
['xc_trace_dumper', 23108, 24624, 24624, ['        if(0 != r_runtime_instance && (uintptr_t)xc_trace_libart_runtime_instance >= start && (uintptr_t)xc_trace_libart_runtime_instance < end)']]
code
funcline addr: 24628
funcline addr: 24632
funcline addr: 24636
funcline addr: 24640
funcline addr: 24644
funcline addr: 24648
funcline addr: 24652
funcline addr: 24656
['xc_trace_dumper', 23108, 24624, 24656, ['        if(0 != r_runtime_instance && (uintptr_t)xc_trace_libart_runtime_instance >= start && (uintptr_t)xc_trace_libart_runtime_instance < end)']]
restartcode
['xc_trace_dumper', 23108, 24656, 24656, ['        if(0 != r_runtime_dump && (uintptr_t)xc_trace_libart_runtime_dump >= start && (uintptr_t)xc_trace_libart_runtime_dump < end)']]
code
funcline addr: 24660
funcline addr: 24664
funcline addr: 24668
funcline addr: 24672
funcline addr: 24676
funcline addr: 24680
funcline addr: 24684
['xc_trace_dumper', 23108, 24656, 24684, ['        if(0 != r_runtime_dump && (uintptr_t)xc_trace_libart_runtime_dump >= start && (uintptr_t)xc_trace_libart_runtime_dump < end)']]
restartcode
['xc_trace_dumper', 23108, 24684, 24684, ['        if(xc_trace_is_lollipop)']]
code
funcline addr: 24688
funcline addr: 24692
funcline addr: 24696
['xc_trace_dumper', 23108, 24684, 24696, ['        if(xc_trace_is_lollipop)']]
restartcode
['xc_trace_dumper', 23108, 24696, 24696, ['            if(0 != r_dbg_suspend && (uintptr_t)xc_trace_libart_dbg_suspend >= start && (uintptr_t)xc_trace_libart_dbg_suspend < end)']]
code
funcline addr: 24700
funcline addr: 24704
funcline addr: 24708
funcline addr: 24712
funcline addr: 24716
funcline addr: 24720
funcline addr: 24724
['xc_trace_dumper', 23108, 24696, 24724, ['            if(0 != r_dbg_suspend && (uintptr_t)xc_trace_libart_dbg_suspend >= start && (uintptr_t)xc_trace_libart_dbg_suspend < end)']]
restartcode
['xc_trace_dumper', 23108, 24724, 24724, ['            if(0 != r_dbg_resume && (uintptr_t)xc_trace_libart_dbg_resume >= start && (uintptr_t)xc_trace_libart_dbg_resume < end)']]
code
funcline addr: 24728
funcline addr: 24732
funcline addr: 24736
funcline addr: 24740
funcline addr: 24744
funcline addr: 24748
funcline addr: 24752
['xc_trace_dumper', 23108, 24724, 24752, ['            if(0 != r_dbg_resume && (uintptr_t)xc_trace_libart_dbg_resume >= start && (uintptr_t)xc_trace_libart_dbg_resume < end)']]
restartcode
['xc_trace_dumper', 23108, 24752, 24752, ['        if(0 == r_cerr && 0 == r_runtime_instance && 0 == r_runtime_dump &&']]
code
funcline addr: 24756
funcline addr: 24760
funcline addr: 24764
funcline addr: 24768
funcline addr: 24772
['xc_trace_dumper', 23108, 24752, 24772, ['        if(0 == r_cerr && 0 == r_runtime_instance && 0 == r_runtime_dump &&']]
restartcode
['xc_trace_dumper', 23108, 24772, 24772, ['           (!xc_trace_is_lollipop || (0 == r_dbg_suspend && 0 == r_dbg_resume)))']]
code
funcline addr: 24776
funcline addr: 24780
funcline addr: 24784
funcline addr: 24788
['xc_trace_dumper', 23108, 24772, 24788, ['           (!xc_trace_is_lollipop || (0 == r_dbg_suspend && 0 == r_dbg_resume)))']]
restartcode
['xc_trace_dumper', 23108, 24788, 24788, ['    if(0 != r) goto end;']]
code
funcline addr: 24792
funcline addr: 24796
funcline addr: 24800
funcline addr: 24804
['xc_trace_dumper', 23108, 24788, 24804, ['    if(0 != r) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24804, 24804, ['            if(0 != xcc_util_write_str(fd, "Failed to load symbols.\\n")) goto end;']]
code
funcline addr: 24808
funcline addr: 24812
funcline addr: 24816
funcline addr: 24820
funcline addr: 24824
funcline addr: 24828
['xc_trace_dumper', 23108, 24804, 24828, ['            if(0 != xcc_util_write_str(fd, "Failed to load symbols.\\n")) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24828, 24828, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
code
funcline addr: 24832
funcline addr: 24836
funcline addr: 24840
funcline addr: 24844
['xc_trace_dumper', 23108, 24828, 24844, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
restartcode
['xc_trace_dumper', 23108, 24844, 24844, ['    rewind(f);']]
code
funcline addr: 24848
funcline addr: 24852
funcline addr: 24856
['xc_trace_dumper', 23108, 24844, 24856, ['    rewind(f);']]
restartcode
['xc_trace_dumper', 23108, 24856, 24856, ['    while(fgets(line, sizeof(line), f))']]
code
funcline addr: 24860
funcline addr: 24864
['xc_trace_dumper', 23108, 24856, 24864, ['    while(fgets(line, sizeof(line), f))']]
restartcode
['xc_trace_dumper', 23108, 24864, 24864, ['        if(2 != sscanf(line, "%"SCNxPTR"-%"SCNxPTR" r", &start, &end)) continue;']]
code
funcline addr: 24868
funcline addr: 24872
['xc_trace_dumper', 23108, 24864, 24872, ['        if(2 != sscanf(line, "%"SCNxPTR"-%"SCNxPTR" r", &start, &end)) continue;']]
restartcode
['xc_trace_dumper', 23108, 24872, 24872, ['        if((uintptr_t)(*xc_trace_libart_runtime_instance) >= start && (uintptr_t)(*xc_trace_libart_runtime_instance) < end)']]
code
funcline addr: 24876
funcline addr: 24880
funcline addr: 24884
funcline addr: 24888
funcline addr: 24892
funcline addr: 24896
funcline addr: 24900
funcline addr: 24904
funcline addr: 24908
funcline addr: 24912
['xc_trace_dumper', 23108, 24872, 24912, ['        if((uintptr_t)(*xc_trace_libart_runtime_instance) >= start && (uintptr_t)(*xc_trace_libart_runtime_instance) < end)']]
restartcode
['xc_trace_dumper', 23108, 24912, 24912, ['    fclose(f);']]
code
funcline addr: 24916
funcline addr: 24920
funcline addr: 24924
['xc_trace_dumper', 23108, 24912, 24924, ['    fclose(f);']]
restartcode
['xc_trace_dumper', 23108, 24924, 24924, ['        if(0 != xc_trace_check_address_valid())']]
code
funcline addr: 24928
['xc_trace_dumper', 23108, 24924, 24928, ['        if(0 != xc_trace_check_address_valid())']]
restartcode
['xc_trace_dumper', 23108, 24928, 24928, ['            if(0 != xcc_util_write_str(fd, "Failed to check runtime address.\\n")) goto end;']]
code
funcline addr: 24932
funcline addr: 24936
funcline addr: 24940
funcline addr: 24944
funcline addr: 24948
funcline addr: 24952
funcline addr: 24956
['xc_trace_dumper', 23108, 24928, 24956, ['            if(0 != xcc_util_write_str(fd, "Failed to check runtime address.\\n")) goto end;']]
restartcode
['xc_trace_dumper', 23108, 24956, 24956, ['        if(dup2(fd, STDERR_FILENO) < 0)']]
code
funcline addr: 24960
funcline addr: 24964
funcline addr: 24968
funcline addr: 24972
['xc_trace_dumper', 23108, 24956, 24972, ['        if(dup2(fd, STDERR_FILENO) < 0)']]
restartcode
['xc_trace_dumper', 23108, 24972, 24972, ['        xc_trace_dump_status = XC_TRACE_DUMP_ON_GOING;']]
code
funcline addr: 24976
['xc_trace_dumper', 23108, 24972, 24976, ['        xc_trace_dump_status = XC_TRACE_DUMP_ON_GOING;']]
restartcode
['xc_trace_dumper', 23108, 24976, 24976, ['        if(sigsetjmp(jmpenv, 1) == 0) ']]
code
funcline addr: 24980
funcline addr: 24984
['xc_trace_dumper', 23108, 24976, 24984, ['        if(sigsetjmp(jmpenv, 1) == 0) ']]
restartcode
['xc_trace_dumper', 23108, 24984, 24984, ['        xc_trace_dump_status = XC_TRACE_DUMP_ON_GOING;']]
code
funcline addr: 24988
['xc_trace_dumper', 23108, 24984, 24988, ['        xc_trace_dump_status = XC_TRACE_DUMP_ON_GOING;']]
restartcode
['xc_trace_dumper', 23108, 24988, 24988, ['        if(sigsetjmp(jmpenv, 1) == 0) ']]
code
funcline addr: 24992
funcline addr: 24996
['xc_trace_dumper', 23108, 24988, 24996, ['        if(sigsetjmp(jmpenv, 1) == 0) ']]
restartcode
['xc_trace_dumper', 23108, 24996, 24996, ['            fflush(NULL);']]
code
funcline addr: 25000
funcline addr: 25004
['xc_trace_dumper', 23108, 24996, 25004, ['            fflush(NULL);']]
restartcode
['xc_trace_dumper', 23108, 25004, 25004, ['            XCD_LOG_WARN("longjmp to skip dumping trace\\n");']]
code
funcline addr: 25008
funcline addr: 25012
funcline addr: 25016
funcline addr: 25020
funcline addr: 25024
funcline addr: 25028
funcline addr: 25032
funcline addr: 25036
['xc_trace_dumper', 23108, 25004, 25036, ['            XCD_LOG_WARN("longjmp to skip dumping trace\\n");']]
restartcode
['xc_trace_dumper', 23108, 25036, 25036, ['            if(0 != xcc_util_write_str(fd, "Failed to duplicate FD.\\n")) goto end;']]
code
funcline addr: 25040
funcline addr: 25044
funcline addr: 25048
funcline addr: 25052
['xc_trace_dumper', 23108, 25036, 25052, ['            if(0 != xcc_util_write_str(fd, "Failed to duplicate FD.\\n")) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25052, 25052, ['            if(xc_trace_is_lollipop)']]
code
funcline addr: 25056
funcline addr: 25060
funcline addr: 25064
['xc_trace_dumper', 23108, 25052, 25064, ['            if(xc_trace_is_lollipop)']]
restartcode
['xc_trace_dumper', 23108, 25064, 25064, ['                xc_trace_libart_dbg_suspend();']]
code
funcline addr: 25068
funcline addr: 25072
funcline addr: 25076
funcline addr: 25080
funcline addr: 25084
funcline addr: 25088
['xc_trace_dumper', 23108, 25064, 25088, ['                xc_trace_libart_dbg_suspend();']]
restartcode
['xc_trace_dumper', 23108, 25088, 25088, ['            xc_trace_libart_runtime_dump(*xc_trace_libart_runtime_instance, xc_trace_libcpp_cerr);']]
code
funcline addr: 25092
funcline addr: 25096
funcline addr: 25100
funcline addr: 25104
funcline addr: 25108
['xc_trace_dumper', 23108, 25088, 25108, ['            xc_trace_libart_runtime_dump(*xc_trace_libart_runtime_instance, xc_trace_libcpp_cerr);']]
restartcode
['xc_trace_dumper', 23108, 25108, 25108, ['            if(xc_trace_is_lollipop)']]
code
funcline addr: 25112
funcline addr: 25116
funcline addr: 25120
['xc_trace_dumper', 23108, 25108, 25120, ['            if(xc_trace_is_lollipop)']]
restartcode
['xc_trace_dumper', 23108, 25120, 25120, ['                xc_trace_libart_dbg_resume();']]
code
funcline addr: 25124
funcline addr: 25128
funcline addr: 25132
['xc_trace_dumper', 23108, 25120, 25132, ['                xc_trace_libart_dbg_resume();']]
restartcode
['xc_trace_dumper', 23108, 25132, 25132, ['        dup2(xc_common_fd_null, STDERR_FILENO);']]
code
funcline addr: 25136
funcline addr: 25140
funcline addr: 25144
['xc_trace_dumper', 23108, 25132, 25144, ['        dup2(xc_common_fd_null, STDERR_FILENO);']]
restartcode
['xc_trace_dumper', 23108, 25144, 25144, ['        if(0 != xcc_util_write_str(fd, "\\n"XCC_UTIL_THREAD_END"\\n")) goto end;']]
code
funcline addr: 25148
funcline addr: 25152
funcline addr: 25156
funcline addr: 25160
funcline addr: 25164
funcline addr: 25168
['xc_trace_dumper', 23108, 25144, 25168, ['        if(0 != xcc_util_write_str(fd, "\\n"XCC_UTIL_THREAD_END"\\n")) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25168, 25168, ['        if(0 != xcc_util_record_logcat(fd, xc_common_process_id, xc_common_api_level, xc_trace_logcat_system_lines, xc_trace_logcat_events_lines, xc_trace_logcat_main_lines)) goto end;']]
code
funcline addr: 25172
funcline addr: 25176
funcline addr: 25180
funcline addr: 25184
funcline addr: 25188
['xc_trace_dumper', 23108, 25168, 25188, ['        if(0 != xcc_util_record_logcat(fd, xc_common_process_id, xc_common_api_level, xc_trace_logcat_system_lines, xc_trace_logcat_events_lines, xc_trace_logcat_main_lines)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25188, 25188, ['        if(xc_trace_dump_fds)']]
code
funcline addr: 25192
funcline addr: 25196
funcline addr: 25200
['xc_trace_dumper', 23108, 25188, 25200, ['        if(xc_trace_dump_fds)']]
restartcode
['xc_trace_dumper', 23108, 25200, 25200, ['            if(0 != xcc_util_record_fds(fd, xc_common_process_id)) goto end;']]
code
funcline addr: 25204
funcline addr: 25208
funcline addr: 25212
funcline addr: 25216
funcline addr: 25220
['xc_trace_dumper', 23108, 25200, 25220, ['            if(0 != xcc_util_record_fds(fd, xc_common_process_id)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25220, 25220, ['        if(xc_trace_dump_network_info)']]
code
funcline addr: 25224
funcline addr: 25228
funcline addr: 25232
funcline addr: 25236
['xc_trace_dumper', 23108, 25220, 25236, ['        if(xc_trace_dump_network_info)']]
restartcode
['xc_trace_dumper', 23108, 25236, 25236, ['            if(0 != xcc_util_record_network_info(fd, xc_common_process_id, xc_common_api_level)) goto end;']]
code
funcline addr: 25240
funcline addr: 25244
funcline addr: 25248
['xc_trace_dumper', 23108, 25236, 25248, ['            if(0 != xcc_util_record_network_info(fd, xc_common_process_id, xc_common_api_level)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25248, 25248, ['        if(0 != xcc_meminfo_record(fd, xc_common_process_id)) goto end;']]
code
funcline addr: 25252
funcline addr: 25256
funcline addr: 25260
funcline addr: 25264
funcline addr: 25268
['xc_trace_dumper', 23108, 25248, 25268, ['        if(0 != xcc_meminfo_record(fd, xc_common_process_id)) goto end;']]
restartcode
['xc_trace_dumper', 23108, 25268, 25268, ['    (*xc_common_vm)->DetachCurrentThread(xc_common_vm);']]
code
funcline addr: 25272
funcline addr: 25276
funcline addr: 25280
funcline addr: 25284
funcline addr: 25288
['xc_trace_dumper', 23108, 25268, 25288, ['    (*xc_common_vm)->DetachCurrentThread(xc_common_vm);']]
restartcode
['xc_trace_dumper', 23108, 25288, 25288, ['    close(xc_trace_notifier);']]
code
funcline addr: 25292
['xc_trace_dumper', 23108, 25288, 25292, ['    close(xc_trace_notifier);']]
restartcode
['xc_trace_dumper', 23108, 25292, 25292, ['    xc_trace_notifier = -1;']]
code
funcline addr: 25296
['xc_trace_dumper', 23108, 25292, 25296, ['    xc_trace_notifier = -1;']]
restartcode
['xc_trace_dumper', 23108, 25296, 25296, ['    close(xc_trace_notifier);']]
code
funcline addr: 25300
funcline addr: 25304
funcline addr: 25308
funcline addr: 25312
['xc_trace_dumper', 23108, 25296, 25312, ['    close(xc_trace_notifier);']]
restartcode
['xc_trace_dumper', 23108, 25312, 25312, ['    return NULL;']]
code
funcline addr: 25316
funcline addr: 25320
funcline addr: 25324
funcline addr: 25328
funcline addr: 25332
['xc_trace_dumper', 23108, 25312, 25332, ['    return NULL;']]
restartcode
['xc_trace_dumper', 23108, 25332, 25332, ['']]
code
funchead startaddr: 00000000000062f8,funcname: xc_trace_logs_filter
['xc_trace_logs_filter', 25336, 25336, 25336, ['{']]
code
funcline addr: 25336
funcline addr: 25340
funcline addr: 25344
funcline addr: 25348
['xc_trace_logs_filter', 25336, 25336, 25348, ['{']]
restartcode
['xc_trace_logs_filter', 25336, 25348, 25348, ['    if(DT_REG != entry->d_type) return 0;']]
code
funcline addr: 25352
funcline addr: 25356
funcline addr: 25360
['xc_trace_logs_filter', 25336, 25348, 25360, ['    if(DT_REG != entry->d_type) return 0;']]
restartcode
['xc_trace_logs_filter', 25336, 25360, 25360, ['    len = strlen(entry->d_name);']]
code
funcline addr: 25364
funcline addr: 25368
['xc_trace_logs_filter', 25336, 25360, 25368, ['    len = strlen(entry->d_name);']]
restartcode
['xc_trace_logs_filter', 25336, 25368, 25368, ['    return __builtin_strlen(s);']]
code
funcline addr: 25372
funcline addr: 25376
['xc_trace_logs_filter', 25336, 25368, 25376, ['    return __builtin_strlen(s);']]
restartcode
['xc_trace_logs_filter', 25336, 25376, 25376, ['    if(len < XC_COMMON_LOG_NAME_MIN_TRACE) return 0;']]
code
funcline addr: 25380
funcline addr: 25384
['xc_trace_logs_filter', 25336, 25376, 25384, ['    if(len < XC_COMMON_LOG_NAME_MIN_TRACE) return 0;']]
restartcode
['xc_trace_logs_filter', 25336, 25384, 25384, ['    if(0 != memcmp(entry->d_name, XC_COMMON_LOG_PREFIX"_", XC_COMMON_LOG_PREFIX_LEN + 1)) return 0;']]
code
funcline addr: 25388
funcline addr: 25392
funcline addr: 25396
funcline addr: 25400
funcline addr: 25404
funcline addr: 25408
funcline addr: 25412
funcline addr: 25416
['xc_trace_logs_filter', 25336, 25384, 25416, ['    if(0 != memcmp(entry->d_name, XC_COMMON_LOG_PREFIX"_", XC_COMMON_LOG_PREFIX_LEN + 1)) return 0;']]
restartcode
['xc_trace_logs_filter', 25336, 25416, 25416, ['}']]
code
funcline addr: 25420
funcline addr: 25424
['xc_trace_logs_filter', 25336, 25416, 25424, ['}']]
restartcode
['xc_trace_logs_filter', 25336, 25424, 25424, ['    if(0 != memcmp(entry->d_name + (len - XC_COMMON_LOG_SUFFIX_TRACE_LEN), XC_COMMON_LOG_SUFFIX_TRACE, XC_COMMON_LOG_SUFFIX_TRACE_LEN)) return 0;']]
code
funcline addr: 25428
funcline addr: 25432
funcline addr: 25436
funcline addr: 25440
funcline addr: 25444
funcline addr: 25448
funcline addr: 25452
funcline addr: 25456
funcline addr: 25460
['xc_trace_logs_filter', 25336, 25424, 25460, ['    if(0 != memcmp(entry->d_name + (len - XC_COMMON_LOG_SUFFIX_TRACE_LEN), XC_COMMON_LOG_SUFFIX_TRACE, XC_COMMON_LOG_SUFFIX_TRACE_LEN)) return 0;']]
restartcode
['xc_trace_logs_filter', 25336, 25460, 25460, ['']]
code
funchead startaddr: 0000000000006378,funcname: _ZL8snprintfPcU17pass_object_size1mPKcz
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25464, 25464, ['        __overloadable {']]
code
funcline addr: 25464
funcline addr: 25468
funcline addr: 25472
funcline addr: 25476
funcline addr: 25480
funcline addr: 25484
funcline addr: 25488
funcline addr: 25492
funcline addr: 25496
funcline addr: 25500
funcline addr: 25504
funcline addr: 25508
funcline addr: 25512
funcline addr: 25516
funcline addr: 25520
funcline addr: 25524
funcline addr: 25528
funcline addr: 25532
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25464, 25532, ['        __overloadable {']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25532, 25532, ['    va_start(va, format);']]
code
funcline addr: 25536
funcline addr: 25540
funcline addr: 25544
funcline addr: 25548
funcline addr: 25552
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25532, 25552, ['    va_start(va, format);']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25552, 25552, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
code
funcline addr: 25556
funcline addr: 25560
funcline addr: 25564
funcline addr: 25568
funcline addr: 25572
funcline addr: 25576
funcline addr: 25580
funcline addr: 25584
funcline addr: 25588
funcline addr: 25592
funcline addr: 25596
funcline addr: 25600
funcline addr: 25604
funcline addr: 25608
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25552, 25608, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz', 25464, 25608, 25608, ['']]
code
funchead startaddr: 000000000000640c,funcname: _ZL8snprintfPcU17pass_object_size1mPKcz.108
['_ZL8snprintfPcU17pass_object_size1mPKcz.108', 25612, 25612, 25612, ['        __overloadable {']]
code
funcline addr: 25612
funcline addr: 25616
funcline addr: 25620
funcline addr: 25624
funcline addr: 25628
['_ZL8snprintfPcU17pass_object_size1mPKcz.108', 25612, 25612, 25628, ['        __overloadable {']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz.108', 25612, 25628, 25628, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
code
funcline addr: 25632
funcline addr: 25636
funcline addr: 25640
funcline addr: 25644
funcline addr: 25648
funcline addr: 25652
funcline addr: 25656
funcline addr: 25660
funcline addr: 25664
funcline addr: 25668
funcline addr: 25672
funcline addr: 25676
funcline addr: 25680
['_ZL8snprintfPcU17pass_object_size1mPKcz.108', 25612, 25628, 25680, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz.108', 25612, 25680, 25680, ['']]
code
funchead startaddr: 0000000000006454,funcname: xcc_fmt_vsnprintf
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['        }']]
code
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['    }']]
code
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['}']]
code
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['']]
code
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['size_t xcc_fmt_vsnprintf(char *buffer, size_t buffer_size, const char *format, va_list args)']]
code
['xcc_fmt_vsnprintf', 25684, 25684, 25684, ['{']]
code
funcline addr: 25684
funcline addr: 25688
funcline addr: 25692
funcline addr: 25696
funcline addr: 25700
funcline addr: 25704
funcline addr: 25708
funcline addr: 25712
funcline addr: 25716
funcline addr: 25720
funcline addr: 25724
funcline addr: 25728
['xcc_fmt_vsnprintf', 25684, 25684, 25728, ['{']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25728, 25728, ['    self->total = 0;']]
code
funcline addr: 25732
['xcc_fmt_vsnprintf', 25684, 25728, 25732, ['    self->total = 0;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25732, 25732, ['    self->avail = buffer_size;']]
code
funcline addr: 25736
['xcc_fmt_vsnprintf', 25684, 25732, 25736, ['    self->avail = buffer_size;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25736, 25736, ["    if(self->avail > 0) self->pos[0] = '\\0';"]]
code
funcline addr: 25740
funcline addr: 25744
['xcc_fmt_vsnprintf', 25684, 25736, 25744, ["    if(self->avail > 0) self->pos[0] = '\\0';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25744, 25744, ['    xcc_fmt_stream_t stream;']]
code
['xcc_fmt_vsnprintf', 25684, 25744, 25744, ['    xcc_fmt_stream_init(&stream, buffer, buffer_size);']]
code
['xcc_fmt_vsnprintf', 25684, 25744, 25744, ['    xcc_fmt_stream_vformat(&stream, format, args);']]
code
funcline addr: 25748
funcline addr: 25752
['xcc_fmt_vsnprintf', 25684, 25744, 25752, ['    xcc_fmt_stream_vformat(&stream, format, args);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25752, 25752, ['        mm = nn;']]
code
funcline addr: 25756
['xcc_fmt_vsnprintf', 25684, 25752, 25756, ['        mm = nn;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25756, 25756, ['    int nn = 0;']]
code
funcline addr: 25760
funcline addr: 25764
funcline addr: 25768
funcline addr: 25772
funcline addr: 25776
funcline addr: 25780
['xcc_fmt_vsnprintf', 25684, 25756, 25780, ['    int nn = 0;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25780, 25780, ['        char   buffer[32]; //temporary buffer used to format numbers']]
code
funcline addr: 25784
['xcc_fmt_vsnprintf', 25684, 25780, 25784, ['        char   buffer[32]; //temporary buffer used to format numbers']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25784, 25784, ['        do']]
code
funcline addr: 25788
funcline addr: 25792
['xcc_fmt_vsnprintf', 25684, 25784, 25792, ['        do']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25792, 25792, ['            c = format[mm];']]
code
funcline addr: 25796
['xcc_fmt_vsnprintf', 25684, 25792, 25796, ['            c = format[mm];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25796, 25796, ["            if(c == '\\0' || c == '%') break;"]]
code
funcline addr: 25800
funcline addr: 25804
funcline addr: 25808
['xcc_fmt_vsnprintf', 25684, 25796, 25808, ["            if(c == '\\0' || c == '%') break;"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25808, 25808, ['        }while(1);']]
code
funcline addr: 25812
funcline addr: 25816
['xcc_fmt_vsnprintf', 25684, 25808, 25816, ['        }while(1);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25816, 25816, ['            c = format[mm];']]
code
funcline addr: 25820
['xcc_fmt_vsnprintf', 25684, 25816, 25820, ['            c = format[mm];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25820, 25820, ['        if(mm > nn)']]
code
funcline addr: 25824
['xcc_fmt_vsnprintf', 25684, 25820, 25824, ['        if(mm > nn)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25824, 25824, ['            c = format[mm];']]
code
funcline addr: 25828
['xcc_fmt_vsnprintf', 25684, 25824, 25828, ['            c = format[mm];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25828, 25828, ['        if(mm > nn)']]
code
funcline addr: 25832
['xcc_fmt_vsnprintf', 25684, 25828, 25832, ['        if(mm > nn)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25832, 25832, ['            xcc_fmt_stream_send(self, format + nn, mm - nn);']]
code
funcline addr: 25836
funcline addr: 25840
funcline addr: 25844
['xcc_fmt_vsnprintf', 25684, 25832, 25844, ['            xcc_fmt_stream_send(self, format + nn, mm - nn);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25844, 25844, ["        if (c == '\\0') break;"]]
code
funcline addr: 25848
funcline addr: 25852
['xcc_fmt_vsnprintf', 25684, 25844, 25852, ["        if (c == '\\0') break;"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25852, 25852, ['            nn = mm;']]
code
funcline addr: 25856
['xcc_fmt_vsnprintf', 25684, 25852, 25856, ['            nn = mm;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25856, 25856, ["        if (c == '\\0') break;"]]
code
funcline addr: 25860
funcline addr: 25864
funcline addr: 25868
funcline addr: 25872
['xcc_fmt_vsnprintf', 25684, 25856, 25872, ["        if (c == '\\0') break;"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25872, 25872, ['        nn++;// skip it']]
code
funcline addr: 25876
funcline addr: 25880
['xcc_fmt_vsnprintf', 25684, 25872, 25880, ['        nn++;// skip it']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25880, 25880, ["            if (c == '\\0')"]]
code
funcline addr: 25884
funcline addr: 25888
['xcc_fmt_vsnprintf', 25684, 25880, 25888, ["            if (c == '\\0')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25888, 25888, ['            c = format[nn++];']]
code
funcline addr: 25892
funcline addr: 25896
funcline addr: 25900
funcline addr: 25904
['xcc_fmt_vsnprintf', 25684, 25888, 25904, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25904, 25904, ["            if (c == '\\0')"]]
code
funcline addr: 25908
funcline addr: 25912
funcline addr: 25916
funcline addr: 25920
funcline addr: 25924
funcline addr: 25928
funcline addr: 25932
funcline addr: 25936
funcline addr: 25940
['xcc_fmt_vsnprintf', 25684, 25904, 25940, ["            if (c == '\\0')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25940, 25940, ['            c = format[nn++];']]
code
funcline addr: 25944
funcline addr: 25948
funcline addr: 25952
funcline addr: 25956
funcline addr: 25960
funcline addr: 25964
funcline addr: 25968
funcline addr: 25972
funcline addr: 25976
['xcc_fmt_vsnprintf', 25684, 25940, 25976, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25976, 25976, ["            if (c == '\\0')"]]
code
funcline addr: 25980
['xcc_fmt_vsnprintf', 25684, 25976, 25980, ["            if (c == '\\0')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25980, 25980, ["        if((c >= '0' && c <= '9'))"]]
code
funcline addr: 25984
['xcc_fmt_vsnprintf', 25684, 25980, 25984, ["        if((c >= '0' && c <= '9'))"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25984, 25984, ['            c = format[nn++];']]
code
funcline addr: 25988
funcline addr: 25992
['xcc_fmt_vsnprintf', 25684, 25984, 25992, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 25992, 25992, ["        if((c >= '0' && c <= '9'))"]]
code
funcline addr: 25996
['xcc_fmt_vsnprintf', 25684, 25992, 25996, ["        if((c >= '0' && c <= '9'))"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 25996, 25996, ['            nn--;']]
code
funcline addr: 26000
['xcc_fmt_vsnprintf', 25684, 25996, 26000, ['            nn--;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26000, 26000, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
code
funcline addr: 26004
funcline addr: 26008
['xcc_fmt_vsnprintf', 25684, 26000, 26008, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26008, 26008, ['            nn--;']]
code
funcline addr: 26012
['xcc_fmt_vsnprintf', 25684, 26008, 26012, ['            nn--;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26012, 26012, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
code
funcline addr: 26016
['xcc_fmt_vsnprintf', 25684, 26012, 26016, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26016, 26016, ['            c = format[nn++];']]
code
funcline addr: 26020
['xcc_fmt_vsnprintf', 25684, 26016, 26020, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26020, 26020, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
code
funcline addr: 26024
funcline addr: 26028
funcline addr: 26032
funcline addr: 26036
['xcc_fmt_vsnprintf', 25684, 26020, 26036, ['            width = (int)(xcc_fmt_parse_decimal(format, &nn));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26036, 26036, ["        if(c == '.')"]]
code
funcline addr: 26040
funcline addr: 26044
['xcc_fmt_vsnprintf', 25684, 26036, 26044, ["        if(c == '.')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26044, 26044, ['            prec = (int)(xcc_fmt_parse_decimal(format, &nn));']]
code
funcline addr: 26048
funcline addr: 26052
funcline addr: 26056
['xcc_fmt_vsnprintf', 25684, 26044, 26056, ['            prec = (int)(xcc_fmt_parse_decimal(format, &nn));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26056, 26056, ['            c = format[nn++];']]
code
funcline addr: 26060
['xcc_fmt_vsnprintf', 25684, 26056, 26060, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26060, 26060, ['            prec = (int)(xcc_fmt_parse_decimal(format, &nn));']]
code
funcline addr: 26064
funcline addr: 26068
funcline addr: 26072
funcline addr: 26076
['xcc_fmt_vsnprintf', 25684, 26060, 26076, ['            prec = (int)(xcc_fmt_parse_decimal(format, &nn));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26076, 26076, ['        switch(c)']]
code
funcline addr: 26080
funcline addr: 26084
funcline addr: 26088
funcline addr: 26092
funcline addr: 26096
funcline addr: 26100
funcline addr: 26104
funcline addr: 26108
funcline addr: 26112
funcline addr: 26116
funcline addr: 26120
funcline addr: 26124
funcline addr: 26128
funcline addr: 26132
funcline addr: 26136
funcline addr: 26140
['xcc_fmt_vsnprintf', 25684, 26076, 26140, ['        switch(c)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26140, 26140, ["            if(format[nn] == 'h')"]]
code
funcline addr: 26144
funcline addr: 26148
funcline addr: 26152
funcline addr: 26156
funcline addr: 26160
funcline addr: 26164
['xcc_fmt_vsnprintf', 25684, 26140, 26164, ["            if(format[nn] == 'h')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26164, 26164, ["            if(format[nn] == 'l')"]]
code
funcline addr: 26168
funcline addr: 26172
funcline addr: 26176
funcline addr: 26180
['xcc_fmt_vsnprintf', 25684, 26164, 26180, ["            if(format[nn] == 'l')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26180, 26180, ['            c = format[nn++];']]
code
funcline addr: 26184
funcline addr: 26188
funcline addr: 26192
funcline addr: 26196
funcline addr: 26200
funcline addr: 26204
['xcc_fmt_vsnprintf', 25684, 26180, 26204, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26204, 26204, ['            c = format[nn++];']]
code
funcline addr: 26208
funcline addr: 26212
funcline addr: 26216
funcline addr: 26220
['xcc_fmt_vsnprintf', 25684, 26204, 26220, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26220, 26220, ["        if(c == 's')"]]
code
funcline addr: 26224
funcline addr: 26228
funcline addr: 26232
['xcc_fmt_vsnprintf', 25684, 26220, 26232, ["        if(c == 's')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26232, 26232, ['                value = va_arg(args, uint64_t);']]
code
funcline addr: 26236
['xcc_fmt_vsnprintf', 25684, 26232, 26236, ['                value = va_arg(args, uint64_t);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26236, 26236, ["        if(c == 's')"]]
code
funcline addr: 26240
funcline addr: 26244
funcline addr: 26248
funcline addr: 26252
funcline addr: 26256
funcline addr: 26260
funcline addr: 26264
funcline addr: 26268
funcline addr: 26272
funcline addr: 26276
funcline addr: 26280
funcline addr: 26284
funcline addr: 26288
funcline addr: 26292
funcline addr: 26296
funcline addr: 26300
funcline addr: 26304
funcline addr: 26308
funcline addr: 26312
['xcc_fmt_vsnprintf', 25684, 26236, 26312, ["        if(c == 's')"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26312, 26312, ['            switch(bytelen)']]
code
funcline addr: 26316
funcline addr: 26320
funcline addr: 26324
funcline addr: 26328
funcline addr: 26332
funcline addr: 26336
funcline addr: 26340
funcline addr: 26344
funcline addr: 26348
['xcc_fmt_vsnprintf', 25684, 26312, 26348, ['            switch(bytelen)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26348, 26348, ['                value = (uint8_t)(va_arg(args, int));']]
code
funcline addr: 26352
funcline addr: 26356
funcline addr: 26360
funcline addr: 26364
funcline addr: 26368
funcline addr: 26372
['xcc_fmt_vsnprintf', 25684, 26348, 26372, ['                value = (uint8_t)(va_arg(args, int));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26372, 26372, ['                value = (uint16_t)(va_arg(args, int));']]
code
funcline addr: 26376
funcline addr: 26380
funcline addr: 26384
funcline addr: 26388
funcline addr: 26392
funcline addr: 26396
['xcc_fmt_vsnprintf', 25684, 26372, 26396, ['                value = (uint16_t)(va_arg(args, int));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26396, 26396, ['                value = va_arg(args, uint32_t);']]
code
funcline addr: 26400
funcline addr: 26404
funcline addr: 26408
funcline addr: 26412
funcline addr: 26416
funcline addr: 26420
['xcc_fmt_vsnprintf', 25684, 26396, 26420, ['                value = va_arg(args, uint32_t);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26420, 26420, ['                value = va_arg(args, uint64_t);']]
code
funcline addr: 26424
funcline addr: 26428
funcline addr: 26432
funcline addr: 26436
funcline addr: 26440
funcline addr: 26444
['xcc_fmt_vsnprintf', 25684, 26420, 26444, ['                value = va_arg(args, uint64_t);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26444, 26444, ['            if(is_signed)']]
code
funcline addr: 26448
['xcc_fmt_vsnprintf', 25684, 26444, 26448, ['            if(is_signed)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26448, 26448, ['                int shift = (int)(64 - 8 * bytelen);']]
code
funcline addr: 26452
['xcc_fmt_vsnprintf', 25684, 26448, 26452, ['                int shift = (int)(64 - 8 * bytelen);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26452, 26452, ['                value = (uint64_t)(((int64_t)(value << shift)) >> shift);']]
code
funcline addr: 26456
funcline addr: 26460
funcline addr: 26464
['xcc_fmt_vsnprintf', 25684, 26452, 26464, ['                value = (uint64_t)(((int64_t)(value << shift)) >> shift);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26464, 26464, ['            xcc_fmt_format_integer(buffer, sizeof(buffer), value, c);']]
code
funcline addr: 26468
funcline addr: 26472
funcline addr: 26476
funcline addr: 26480
funcline addr: 26484
funcline addr: 26488
['xcc_fmt_vsnprintf', 25684, 26464, 26488, ['            xcc_fmt_format_integer(buffer, sizeof(buffer), value, c);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26488, 26488, ["        if (sign != '\\0' || prec != -1)"]]
code
funcline addr: 26492
funcline addr: 26496
funcline addr: 26500
funcline addr: 26504
funcline addr: 26508
['xcc_fmt_vsnprintf', 25684, 26488, 26508, ["        if (sign != '\\0' || prec != -1)"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26508, 26508, ['        if (slen < width && !padLeft)']]
code
funcline addr: 26512
funcline addr: 26516
funcline addr: 26520
funcline addr: 26524
['xcc_fmt_vsnprintf', 25684, 26508, 26524, ['        if (slen < width && !padLeft)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26524, 26524, ['        xcc_fmt_stream_send(self, str, slen);']]
code
funcline addr: 26528
funcline addr: 26532
funcline addr: 26536
funcline addr: 26540
['xcc_fmt_vsnprintf', 25684, 26524, 26540, ['        xcc_fmt_stream_send(self, str, slen);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26540, 26540, ['        if (slen < width && padLeft)']]
code
funcline addr: 26544
funcline addr: 26548
funcline addr: 26552
funcline addr: 26556
['xcc_fmt_vsnprintf', 25684, 26540, 26556, ['        if (slen < width && padLeft)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26556, 26556, ['        mm = nn;']]
code
funcline addr: 26560
funcline addr: 26564
['xcc_fmt_vsnprintf', 25684, 26556, 26564, ['        mm = nn;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26564, 26564, ['            uint64_t value = (uintptr_t)(va_arg(args, void*));']]
code
funcline addr: 26568
funcline addr: 26572
funcline addr: 26576
funcline addr: 26580
funcline addr: 26584
funcline addr: 26588
funcline addr: 26592
['xcc_fmt_vsnprintf', 25684, 26564, 26592, ['            uint64_t value = (uintptr_t)(va_arg(args, void*));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26592, 26592, ["            buffer[0] = '0';"]]
code
funcline addr: 26596
['xcc_fmt_vsnprintf', 25684, 26592, 26596, ["            buffer[0] = '0';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26596, 26596, ["            xcc_fmt_format_integer(buffer + 2, sizeof(buffer) - 2, value, 'x');"]]
code
funcline addr: 26600
funcline addr: 26604
funcline addr: 26608
['xcc_fmt_vsnprintf', 25684, 26596, 26608, ["            xcc_fmt_format_integer(buffer + 2, sizeof(buffer) - 2, value, 'x');"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26608, 26608, ["            buffer[0] = '0';"]]
code
funcline addr: 26612
['xcc_fmt_vsnprintf', 25684, 26608, 26612, ["            buffer[0] = '0';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26612, 26612, ["            xcc_fmt_format_integer(buffer + 2, sizeof(buffer) - 2, value, 'x');"]]
code
funcline addr: 26616
funcline addr: 26620
funcline addr: 26624
['xcc_fmt_vsnprintf', 25684, 26612, 26624, ["            xcc_fmt_format_integer(buffer + 2, sizeof(buffer) - 2, value, 'x');"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26624, 26624, ['            str = va_arg(args, const char *);']]
code
funcline addr: 26628
funcline addr: 26632
funcline addr: 26636
funcline addr: 26640
funcline addr: 26644
funcline addr: 26648
['xcc_fmt_vsnprintf', 25684, 26624, 26648, ['            str = va_arg(args, const char *);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26648, 26648, ['            if (str == NULL)']]
code
funcline addr: 26652
funcline addr: 26656
funcline addr: 26660
funcline addr: 26664
funcline addr: 26668
funcline addr: 26672
['xcc_fmt_vsnprintf', 25684, 26648, 26672, ['            if (str == NULL)']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26672, 26672, ["            buffer[0] = '%';"]]
code
funcline addr: 26676
funcline addr: 26680
funcline addr: 26684
['xcc_fmt_vsnprintf', 25684, 26672, 26684, ["            buffer[0] = '%';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26684, 26684, ['            buffer[0] = (char)(va_arg(args, int));']]
code
funcline addr: 26688
funcline addr: 26692
funcline addr: 26696
funcline addr: 26700
funcline addr: 26704
funcline addr: 26708
['xcc_fmt_vsnprintf', 25684, 26684, 26708, ['            buffer[0] = (char)(va_arg(args, int));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26708, 26708, ["            buffer[1] = '\\0';"]]
code
funcline addr: 26712
funcline addr: 26716
['xcc_fmt_vsnprintf', 25684, 26708, 26716, ["            buffer[1] = '\\0';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26716, 26716, ['            buffer[0] = (char)(va_arg(args, int));']]
code
funcline addr: 26720
funcline addr: 26724
funcline addr: 26728
funcline addr: 26732
funcline addr: 26736
funcline addr: 26740
funcline addr: 26744
funcline addr: 26748
funcline addr: 26752
funcline addr: 26756
funcline addr: 26760
funcline addr: 26764
funcline addr: 26768
funcline addr: 26772
funcline addr: 26776
funcline addr: 26780
funcline addr: 26784
funcline addr: 26788
funcline addr: 26792
funcline addr: 26796
['xcc_fmt_vsnprintf', 25684, 26716, 26796, ['            buffer[0] = (char)(va_arg(args, int));']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26796, 26796, ['                xcc_fmt_stream_send(self, &c, 1);']]
code
funcline addr: 26800
funcline addr: 26804
funcline addr: 26808
['xcc_fmt_vsnprintf', 25684, 26796, 26808, ['                xcc_fmt_stream_send(self, &c, 1);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26808, 26808, ['            c = format[nn++];']]
code
funcline addr: 26812
['xcc_fmt_vsnprintf', 25684, 26808, 26812, ['            c = format[nn++];']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26812, 26812, ["                c = '%';"]]
code
funcline addr: 26816
['xcc_fmt_vsnprintf', 25684, 26812, 26816, ["                c = '%';"]]
restartcode
['xcc_fmt_vsnprintf', 25684, 26816, 26816, ['                xcc_fmt_stream_send(self, &c, 1);']]
code
funcline addr: 26820
['xcc_fmt_vsnprintf', 25684, 26816, 26820, ['                xcc_fmt_stream_send(self, &c, 1);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26820, 26820, ['    return self->total;']]
code
funcline addr: 26824
funcline addr: 26828
funcline addr: 26832
funcline addr: 26836
funcline addr: 26840
['xcc_fmt_vsnprintf', 25684, 26820, 26840, ['    return self->total;']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26840, 26840, ['    return xcc_fmt_stream_total(&stream);']]
code
funcline addr: 26844
funcline addr: 26848
funcline addr: 26852
funcline addr: 26856
funcline addr: 26860
funcline addr: 26864
funcline addr: 26868
funcline addr: 26872
funcline addr: 26876
['xcc_fmt_vsnprintf', 25684, 26840, 26876, ['    return xcc_fmt_stream_total(&stream);']]
restartcode
['xcc_fmt_vsnprintf', 25684, 26876, 26876, ['']]
code
funchead startaddr: 0000000000006900,funcname: xcc_fmt_stream_send
['xcc_fmt_stream_send', 26880, 26880, 26880, ['{']]
code
funcline addr: 26880
funcline addr: 26884
funcline addr: 26888
funcline addr: 26892
funcline addr: 26896
funcline addr: 26900
['xcc_fmt_stream_send', 26880, 26880, 26900, ['{']]
restartcode
['xcc_fmt_stream_send', 26880, 26900, 26900, ['    if(len < 0)']]
code
funcline addr: 26904
funcline addr: 26908
funcline addr: 26912
funcline addr: 26916
['xcc_fmt_stream_send', 26880, 26900, 26916, ['    if(len < 0)']]
restartcode
['xcc_fmt_stream_send', 26880, 26916, 26916, ['    self->total += (size_t)len;']]
code
funcline addr: 26920
['xcc_fmt_stream_send', 26880, 26916, 26920, ['    self->total += (size_t)len;']]
restartcode
['xcc_fmt_stream_send', 26880, 26920, 26920, ['    if(self->avail <= 1)']]
code
funcline addr: 26924
['xcc_fmt_stream_send', 26880, 26920, 26924, ['    if(self->avail <= 1)']]
restartcode
['xcc_fmt_stream_send', 26880, 26924, 26924, ['    self->total += (size_t)len;']]
code
funcline addr: 26928
['xcc_fmt_stream_send', 26880, 26924, 26928, ['    self->total += (size_t)len;']]
restartcode
['xcc_fmt_stream_send', 26880, 26928, 26928, ['    if(self->avail <= 1)']]
code
funcline addr: 26932
['xcc_fmt_stream_send', 26880, 26928, 26932, ['    if(self->avail <= 1)']]
restartcode
['xcc_fmt_stream_send', 26880, 26932, 26932, ['    self->total += (size_t)len;']]
code
funcline addr: 26936
['xcc_fmt_stream_send', 26880, 26932, 26936, ['    self->total += (size_t)len;']]
restartcode
['xcc_fmt_stream_send', 26880, 26936, 26936, ['    if(self->avail <= 1)']]
code
funcline addr: 26940
funcline addr: 26944
['xcc_fmt_stream_send', 26880, 26936, 26944, ['    if(self->avail <= 1)']]
restartcode
['xcc_fmt_stream_send', 26880, 26944, 26944, ['    memcpy(self->pos, data, (size_t)len);']]
code
funcline addr: 26948
['xcc_fmt_stream_send', 26880, 26944, 26948, ['    memcpy(self->pos, data, (size_t)len);']]
restartcode
['xcc_fmt_stream_send', 26880, 26948, 26948, ['    if((size_t)len >= self->avail)']]
code
funcline addr: 26952
funcline addr: 26956
funcline addr: 26960
['xcc_fmt_stream_send', 26880, 26948, 26960, ['    if((size_t)len >= self->avail)']]
restartcode
['xcc_fmt_stream_send', 26880, 26960, 26960, ['    memcpy(self->pos, data, (size_t)len);']]
code
funcline addr: 26964
['xcc_fmt_stream_send', 26880, 26960, 26964, ['    memcpy(self->pos, data, (size_t)len);']]
restartcode
['xcc_fmt_stream_send', 26880, 26964, 26964, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 26968
funcline addr: 26972
['xcc_fmt_stream_send', 26880, 26964, 26972, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xcc_fmt_stream_send', 26880, 26972, 26972, ['    self->pos += len;']]
code
funcline addr: 26976
funcline addr: 26980
funcline addr: 26984
['xcc_fmt_stream_send', 26880, 26972, 26984, ['    self->pos += len;']]
restartcode
['xcc_fmt_stream_send', 26880, 26984, 26984, ["    self->pos[0] = '\\0';"]]
code
funcline addr: 26988
['xcc_fmt_stream_send', 26880, 26984, 26988, ["    self->pos[0] = '\\0';"]]
restartcode
['xcc_fmt_stream_send', 26880, 26988, 26988, ['    self->avail -= (size_t)len;']]
code
funcline addr: 26992
funcline addr: 26996
funcline addr: 27000
['xcc_fmt_stream_send', 26880, 26988, 27000, ['    self->avail -= (size_t)len;']]
restartcode
['xcc_fmt_stream_send', 26880, 27000, 27000, ['}']]
code
funcline addr: 27004
funcline addr: 27008
['xcc_fmt_stream_send', 26880, 27000, 27008, ['}']]
restartcode
['xcc_fmt_stream_send', 26880, 27008, 27008, ['']]
code
funchead startaddr: 0000000000006984,funcname: xcc_fmt_parse_decimal
['xcc_fmt_parse_decimal', 27012, 27012, 27012, ['    const char *p = format + *ppos;']]
code
funcline addr: 27012
['xcc_fmt_parse_decimal', 27012, 27012, 27012, ['    const char *p = format + *ppos;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27012, 27012, ['    unsigned result = 0;']]
code
funcline addr: 27016
funcline addr: 27020
['xcc_fmt_parse_decimal', 27012, 27012, 27020, ['    unsigned result = 0;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27020, 27020, ['    for(;;)']]
code
funcline addr: 27024
funcline addr: 27028
['xcc_fmt_parse_decimal', 27012, 27020, 27028, ['    for(;;)']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27028, 27028, ['        int ch = *p;']]
code
funcline addr: 27032
['xcc_fmt_parse_decimal', 27012, 27028, 27032, ['        int ch = *p;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27032, 27032, ['    unsigned result = 0;']]
code
funcline addr: 27036
['xcc_fmt_parse_decimal', 27012, 27032, 27036, ['    unsigned result = 0;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27036, 27036, ["        unsigned d = (unsigned)(ch - '0');"]]
code
funcline addr: 27040
funcline addr: 27044
['xcc_fmt_parse_decimal', 27012, 27036, 27044, ["        unsigned d = (unsigned)(ch - '0');"]]
restartcode
['xcc_fmt_parse_decimal', 27012, 27044, 27044, ['        if(d >= 10U)']]
code
funcline addr: 27048
funcline addr: 27052
['xcc_fmt_parse_decimal', 27012, 27044, 27052, ['        if(d >= 10U)']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27052, 27052, ['    *ppos = (int)(p - format);']]
code
funcline addr: 27056
['xcc_fmt_parse_decimal', 27012, 27052, 27056, ['    *ppos = (int)(p - format);']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27056, 27056, ['    return result;']]
code
funcline addr: 27060
['xcc_fmt_parse_decimal', 27012, 27056, 27060, ['    return result;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27060, 27060, ['    *ppos = (int)(p - format);']]
code
funcline addr: 27064
['xcc_fmt_parse_decimal', 27012, 27060, 27064, ['    *ppos = (int)(p - format);']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27064, 27064, ['    return result;']]
code
funcline addr: 27068
['xcc_fmt_parse_decimal', 27012, 27064, 27068, ['    return result;']]
restartcode
['xcc_fmt_parse_decimal', 27012, 27068, 27068, ['']]
code
funchead startaddr: 00000000000069c0,funcname: xcc_fmt_format_integer
['xcc_fmt_format_integer', 27072, 27072, 27072, ["    int is_signed = (conversion == 'd' || conversion == 'i' || conversion == 'o');"]]
code
funcline addr: 27072
funcline addr: 27076
funcline addr: 27080
funcline addr: 27084
funcline addr: 27088
funcline addr: 27092
funcline addr: 27096
funcline addr: 27100
funcline addr: 27104
['xcc_fmt_format_integer', 27072, 27072, 27104, ["    int is_signed = (conversion == 'd' || conversion == 'i' || conversion == 'o');"]]
restartcode
['xcc_fmt_format_integer', 27072, 27104, 27104, ["    if (conversion == 'x' || conversion == 'X')"]]
code
funcline addr: 27108
funcline addr: 27112
funcline addr: 27116
funcline addr: 27120
funcline addr: 27124
funcline addr: 27128
funcline addr: 27132
funcline addr: 27136
funcline addr: 27140
funcline addr: 27144
funcline addr: 27148
['xcc_fmt_format_integer', 27072, 27104, 27148, ["    if (conversion == 'x' || conversion == 'X')"]]
restartcode
['xcc_fmt_format_integer', 27072, 27148, 27148, ['    if (is_signed && (int64_t)(value) < 0)']]
code
funcline addr: 27152
funcline addr: 27156
funcline addr: 27160
funcline addr: 27164
funcline addr: 27168
funcline addr: 27172
['xcc_fmt_format_integer', 27072, 27148, 27172, ['    if (is_signed && (int64_t)(value) < 0)']]
restartcode
['xcc_fmt_format_integer', 27072, 27172, 27172, ['        buf_size -= 1;']]
code
funcline addr: 27176
['xcc_fmt_format_integer', 27072, 27172, 27176, ['        buf_size -= 1;']]
restartcode
['xcc_fmt_format_integer', 27072, 27176, 27176, ["        buf[0] = '-';"]]
code
funcline addr: 27180
['xcc_fmt_format_integer', 27072, 27176, 27180, ["        buf[0] = '-';"]]
restartcode
['xcc_fmt_format_integer', 27072, 27180, 27180, ['        value = (uint64_t)(-(int64_t)(value));']]
code
funcline addr: 27184
['xcc_fmt_format_integer', 27072, 27180, 27184, ['        value = (uint64_t)(-(int64_t)(value));']]
restartcode
['xcc_fmt_format_integer', 27072, 27184, 27184, ["    int caps = (conversion == 'X');"]]
code
funcline addr: 27188
['xcc_fmt_format_integer', 27072, 27184, 27188, ["    int caps = (conversion == 'X');"]]
restartcode
['xcc_fmt_format_integer', 27072, 27188, 27188, ['    char* end = buf + buf_size - 1;']]
code
funcline addr: 27192
funcline addr: 27196
funcline addr: 27200
funcline addr: 27204
funcline addr: 27208
funcline addr: 27212
funcline addr: 27216
funcline addr: 27220
funcline addr: 27224
['xcc_fmt_format_integer', 27072, 27188, 27224, ['    char* end = buf + buf_size - 1;']]
restartcode
['xcc_fmt_format_integer', 27072, 27224, 27224, ['    while (value)']]
code
funcline addr: 27228
funcline addr: 27232
['xcc_fmt_format_integer', 27072, 27224, 27232, ['    while (value)']]
restartcode
['xcc_fmt_format_integer', 27072, 27232, 27232, ['        if (p != end)']]
code
funcline addr: 27236
['xcc_fmt_format_integer', 27072, 27232, 27236, ['        if (p != end)']]
restartcode
['xcc_fmt_format_integer', 27072, 27236, 27236, ['        value /= (uint64_t)base;']]
code
funcline addr: 27240
funcline addr: 27244
['xcc_fmt_format_integer', 27072, 27236, 27244, ['        value /= (uint64_t)base;']]
restartcode
['xcc_fmt_format_integer', 27072, 27244, 27244, ['        if (p != end)']]
code
funcline addr: 27248
funcline addr: 27252
['xcc_fmt_format_integer', 27072, 27244, 27252, ['        if (p != end)']]
restartcode
['xcc_fmt_format_integer', 27072, 27252, 27252, ['            if (d < 10)']]
code
funcline addr: 27256
funcline addr: 27260
funcline addr: 27264
['xcc_fmt_format_integer', 27072, 27252, 27264, ['            if (d < 10)']]
restartcode
['xcc_fmt_format_integer', 27072, 27264, 27264, ['            *p++ = ch;']]
code
funcline addr: 27268
funcline addr: 27272
funcline addr: 27276
['xcc_fmt_format_integer', 27072, 27264, 27276, ['            *p++ = ch;']]
restartcode
['xcc_fmt_format_integer', 27072, 27276, 27276, ['    if (p == buf)']]
code
funcline addr: 27280
funcline addr: 27284
funcline addr: 27288
funcline addr: 27292
['xcc_fmt_format_integer', 27072, 27276, 27292, ['    if (p == buf)']]
restartcode
['xcc_fmt_format_integer', 27072, 27292, 27292, ["            *p++ = '0';"]]
code
funcline addr: 27296
funcline addr: 27300
['xcc_fmt_format_integer', 27072, 27292, 27300, ["            *p++ = '0';"]]
restartcode
['xcc_fmt_format_integer', 27072, 27300, 27300, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
code
funcline addr: 27304
funcline addr: 27308
['xcc_fmt_format_integer', 27072, 27300, 27308, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
restartcode
['xcc_fmt_format_integer', 27072, 27308, 27308, ["    *p = '\\0';"]]
code
funcline addr: 27312
['xcc_fmt_format_integer', 27072, 27308, 27312, ["    *p = '\\0';"]]
restartcode
['xcc_fmt_format_integer', 27072, 27312, 27312, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
code
funcline addr: 27316
funcline addr: 27320
funcline addr: 27324
['xcc_fmt_format_integer', 27072, 27312, 27324, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
restartcode
['xcc_fmt_format_integer', 27072, 27324, 27324, ['        buf[i] = buf[j];']]
code
funcline addr: 27328
['xcc_fmt_format_integer', 27072, 27324, 27328, ['        buf[i] = buf[j];']]
restartcode
['xcc_fmt_format_integer', 27072, 27328, 27328, ['        char ch = buf[i];']]
code
funcline addr: 27332
['xcc_fmt_format_integer', 27072, 27328, 27332, ['        char ch = buf[i];']]
restartcode
['xcc_fmt_format_integer', 27072, 27332, 27332, ['        buf[i] = buf[j];']]
code
funcline addr: 27336
['xcc_fmt_format_integer', 27072, 27332, 27336, ['        buf[i] = buf[j];']]
restartcode
['xcc_fmt_format_integer', 27072, 27336, 27336, ['        buf[j] = ch;']]
code
funcline addr: 27340
['xcc_fmt_format_integer', 27072, 27336, 27340, ['        buf[j] = ch;']]
restartcode
['xcc_fmt_format_integer', 27072, 27340, 27340, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
code
funcline addr: 27344
funcline addr: 27348
funcline addr: 27352
['xcc_fmt_format_integer', 27072, 27340, 27352, ['    for (size_t i = 0, j = length - 1; i < j; ++i, --j)']]
restartcode
['xcc_fmt_format_integer', 27072, 27352, 27352, ['}']]
code
funcline addr: 27356
['xcc_fmt_format_integer', 27072, 27352, 27356, ['}']]
restartcode
['xcc_fmt_format_integer', 27072, 27356, 27356, ['']]
code
funchead startaddr: 0000000000006ae0,funcname: xcc_fmt_stream_send_repeat
['xcc_fmt_stream_send_repeat', 27360, 27360, 27360, ['{']]
code
funcline addr: 27360
funcline addr: 27364
funcline addr: 27368
funcline addr: 27372
funcline addr: 27376
funcline addr: 27380
funcline addr: 27384
funcline addr: 27388
funcline addr: 27392
funcline addr: 27396
funcline addr: 27400
funcline addr: 27404
funcline addr: 27408
funcline addr: 27412
funcline addr: 27416
['xcc_fmt_stream_send_repeat', 27360, 27360, 27416, ['{']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27416, 27416, ['        *p++ = (char)c;']]
code
funcline addr: 27420
['xcc_fmt_stream_send_repeat', 27360, 27416, 27420, ['        *p++ = (char)c;']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27420, 27420, ['    while(n--)']]
code
funcline addr: 27424
funcline addr: 27428
funcline addr: 27432
['xcc_fmt_stream_send_repeat', 27360, 27420, 27432, ['    while(n--)']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27432, 27432, ['    while(count > 0)']]
code
funcline addr: 27436
funcline addr: 27440
['xcc_fmt_stream_send_repeat', 27360, 27432, 27440, ['    while(count > 0)']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27440, 27440, ['        if (avail > pad_size)']]
code
funcline addr: 27444
funcline addr: 27448
['xcc_fmt_stream_send_repeat', 27360, 27440, 27448, ['        if (avail > pad_size)']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27448, 27448, ['        xcc_fmt_stream_send(self, pad, avail);']]
code
funcline addr: 27452
funcline addr: 27456
funcline addr: 27460
funcline addr: 27464
['xcc_fmt_stream_send_repeat', 27360, 27448, 27464, ['        xcc_fmt_stream_send(self, pad, avail);']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27464, 27464, ['        count -= avail;']]
code
funcline addr: 27468
funcline addr: 27472
funcline addr: 27476
funcline addr: 27480
funcline addr: 27484
['xcc_fmt_stream_send_repeat', 27360, 27464, 27484, ['        count -= avail;']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27484, 27484, ['}']]
code
funcline addr: 27488
funcline addr: 27492
funcline addr: 27496
funcline addr: 27500
funcline addr: 27504
funcline addr: 27508
funcline addr: 27512
['xcc_fmt_stream_send_repeat', 27360, 27484, 27512, ['}']]
restartcode
['xcc_fmt_stream_send_repeat', 27360, 27512, 27512, ['']]
code
funchead startaddr: 0000000000006b7c,funcname: xcc_fmt_snprintf
['xcc_fmt_snprintf', 27516, 27516, 27516, ['}']]
code
['xcc_fmt_snprintf', 27516, 27516, 27516, ['']]
code
['xcc_fmt_snprintf', 27516, 27516, 27516, ['size_t xcc_fmt_snprintf(char *buffer, size_t buffer_size, const char *format, ...)']]
code
['xcc_fmt_snprintf', 27516, 27516, 27516, ['{']]
code
funcline addr: 27516
funcline addr: 27520
funcline addr: 27524
funcline addr: 27528
funcline addr: 27532
funcline addr: 27536
funcline addr: 27540
funcline addr: 27544
funcline addr: 27548
funcline addr: 27552
funcline addr: 27556
funcline addr: 27560
funcline addr: 27564
funcline addr: 27568
funcline addr: 27572
funcline addr: 27576
funcline addr: 27580
funcline addr: 27584
funcline addr: 27588
['xcc_fmt_snprintf', 27516, 27516, 27588, ['{']]
restartcode
['xcc_fmt_snprintf', 27516, 27588, 27588, ['    va_list args;']]
code
['xcc_fmt_snprintf', 27516, 27588, 27588, ['    va_start(args, format);']]
code
funcline addr: 27592
funcline addr: 27596
funcline addr: 27600
funcline addr: 27604
funcline addr: 27608
['xcc_fmt_snprintf', 27516, 27588, 27608, ['    va_start(args, format);']]
restartcode
['xcc_fmt_snprintf', 27516, 27608, 27608, ['    size_t buffer_len = xcc_fmt_vsnprintf(buffer, buffer_size, format, args);']]
code
funcline addr: 27612
funcline addr: 27616
funcline addr: 27620
funcline addr: 27624
funcline addr: 27628
funcline addr: 27632
['xcc_fmt_snprintf', 27516, 27608, 27632, ['    size_t buffer_len = xcc_fmt_vsnprintf(buffer, buffer_size, format, args);']]
restartcode
['xcc_fmt_snprintf', 27516, 27632, 27632, ['    va_end(args);']]
code
['xcc_fmt_snprintf', 27516, 27632, 27632, ['    return buffer_len;']]
code
funcline addr: 27636
funcline addr: 27640
funcline addr: 27644
funcline addr: 27648
funcline addr: 27652
['xcc_fmt_snprintf', 27516, 27632, 27652, ['    return buffer_len;']]
restartcode
['xcc_fmt_snprintf', 27516, 27652, 27652, ['']]
code
funchead startaddr: 0000000000006c08,funcname: xcc_libc_support_localtime_r
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ["/* Compute the `struct tm' representation of *T,"]]
code
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ['   offset GMTOFF seconds east of UTC,']]
code
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ['   and store year, yday, mon, mday, wday, hour, min, sec into *RESULT.']]
code
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ['   Return RESULT if successful.  */']]
code
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ['struct tm *xcc_libc_support_localtime_r(const time_t *timep, long gmtoff, struct tm *result)']]
code
['xcc_libc_support_localtime_r', 27656, 27656, 27656, ['{']]
code
funcline addr: 27656
funcline addr: 27660
funcline addr: 27664
funcline addr: 27668
['xcc_libc_support_localtime_r', 27656, 27656, 27668, ['{']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27668, 27668, ['    time_t days, rem, y;']]
code
['xcc_libc_support_localtime_r', 27656, 27668, 27668, ['    const unsigned short int *ip;']]
code
['xcc_libc_support_localtime_r', 27656, 27668, 27668, ['']]
code
['xcc_libc_support_localtime_r', 27656, 27668, 27668, ['    if(NULL == result) return NULL;']]
code
funcline addr: 27672
['xcc_libc_support_localtime_r', 27656, 27668, 27672, ['    if(NULL == result) return NULL;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27672, 27672, ['']]
code
['xcc_libc_support_localtime_r', 27656, 27672, 27672, ['    result->tm_gmtoff = gmtoff;']]
code
funcline addr: 27676
['xcc_libc_support_localtime_r', 27656, 27672, 27676, ['    result->tm_gmtoff = gmtoff;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27676, 27676, ['']]
code
['xcc_libc_support_localtime_r', 27656, 27676, 27676, ['    days = ((*timep) / XCC_LIC_SUPPORT_SECS_PER_DAY);']]
code
funcline addr: 27680
funcline addr: 27684
funcline addr: 27688
funcline addr: 27692
funcline addr: 27696
funcline addr: 27700
funcline addr: 27704
funcline addr: 27708
['xcc_libc_support_localtime_r', 27656, 27676, 27708, ['    days = ((*timep) / XCC_LIC_SUPPORT_SECS_PER_DAY);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27708, 27708, ['    rem = ((*timep) % XCC_LIC_SUPPORT_SECS_PER_DAY);']]
code
['xcc_libc_support_localtime_r', 27656, 27708, 27708, ['    rem += gmtoff;']]
code
funcline addr: 27712
['xcc_libc_support_localtime_r', 27656, 27708, 27712, ['    rem += gmtoff;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27712, 27712, ['    while (rem < 0)']]
code
funcline addr: 27716
funcline addr: 27720
funcline addr: 27724
funcline addr: 27728
funcline addr: 27732
['xcc_libc_support_localtime_r', 27656, 27712, 27732, ['    while (rem < 0)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27732, 27732, ['    {']]
code
['xcc_libc_support_localtime_r', 27656, 27732, 27732, ['        rem += XCC_LIC_SUPPORT_SECS_PER_DAY;']]
code
['xcc_libc_support_localtime_r', 27656, 27732, 27732, ['        --days;']]
code
['xcc_libc_support_localtime_r', 27656, 27732, 27732, ['    }']]
code
['xcc_libc_support_localtime_r', 27656, 27732, 27732, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
code
funcline addr: 27736
funcline addr: 27740
funcline addr: 27744
funcline addr: 27748
funcline addr: 27752
funcline addr: 27756
['xcc_libc_support_localtime_r', 27656, 27732, 27756, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27756, 27756, ['    while (rem < 0)']]
code
funcline addr: 27760
['xcc_libc_support_localtime_r', 27656, 27756, 27760, ['    while (rem < 0)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27760, 27760, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
code
funcline addr: 27764
funcline addr: 27768
['xcc_libc_support_localtime_r', 27656, 27760, 27768, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27768, 27768, ['    {']]
code
['xcc_libc_support_localtime_r', 27656, 27768, 27768, ['        rem -= XCC_LIC_SUPPORT_SECS_PER_DAY;']]
code
['xcc_libc_support_localtime_r', 27656, 27768, 27768, ['        ++days;']]
code
['xcc_libc_support_localtime_r', 27656, 27768, 27768, ['    }']]
code
['xcc_libc_support_localtime_r', 27656, 27768, 27768, ['    result->tm_hour = (int)(rem / XCC_LIC_SUPPORT_SECS_PER_HOUR);']]
code
funcline addr: 27772
funcline addr: 27776
['xcc_libc_support_localtime_r', 27656, 27768, 27776, ['    result->tm_hour = (int)(rem / XCC_LIC_SUPPORT_SECS_PER_HOUR);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27776, 27776, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
code
funcline addr: 27780
funcline addr: 27784
funcline addr: 27788
['xcc_libc_support_localtime_r', 27656, 27776, 27788, ['    while (rem >= XCC_LIC_SUPPORT_SECS_PER_DAY)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27788, 27788, ['    result->tm_hour = (int)(rem / XCC_LIC_SUPPORT_SECS_PER_HOUR);']]
code
funcline addr: 27792
['xcc_libc_support_localtime_r', 27656, 27788, 27792, ['    result->tm_hour = (int)(rem / XCC_LIC_SUPPORT_SECS_PER_HOUR);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27792, 27792, ['    rem %= XCC_LIC_SUPPORT_SECS_PER_HOUR;']]
code
['xcc_libc_support_localtime_r', 27656, 27792, 27792, ['    result->tm_min = (int)(rem / 60);']]
code
funcline addr: 27796
['xcc_libc_support_localtime_r', 27656, 27792, 27796, ['    result->tm_min = (int)(rem / 60);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27796, 27796, ['    result->tm_sec = rem % 60;']]
code
['xcc_libc_support_localtime_r', 27656, 27796, 27796, ['    /* January 1, 1970 was a Thursday.  */']]
code
['xcc_libc_support_localtime_r', 27656, 27796, 27796, ['    result->tm_wday = (4 + days) % 7;']]
code
funcline addr: 27800
funcline addr: 27804
funcline addr: 27808
funcline addr: 27812
funcline addr: 27816
funcline addr: 27820
['xcc_libc_support_localtime_r', 27656, 27796, 27820, ['    result->tm_wday = (4 + days) % 7;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27820, 27820, ['    result->tm_sec = rem % 60;']]
code
funcline addr: 27824
['xcc_libc_support_localtime_r', 27656, 27820, 27824, ['    result->tm_sec = rem % 60;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27824, 27824, ['    if (result->tm_wday < 0)']]
code
['xcc_libc_support_localtime_r', 27656, 27824, 27824, ['        result->tm_wday += 7;']]
code
funcline addr: 27828
['xcc_libc_support_localtime_r', 27656, 27824, 27828, ['        result->tm_wday += 7;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27828, 27828, ['    if (result->tm_wday < 0)']]
code
funcline addr: 27832
funcline addr: 27836
funcline addr: 27840
funcline addr: 27844
funcline addr: 27848
funcline addr: 27852
funcline addr: 27856
funcline addr: 27860
funcline addr: 27864
funcline addr: 27868
funcline addr: 27872
funcline addr: 27876
['xcc_libc_support_localtime_r', 27656, 27828, 27876, ['    if (result->tm_wday < 0)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27876, 27876, ['    y = 1970;']]
code
['xcc_libc_support_localtime_r', 27656, 27876, 27876, ['']]
code
['xcc_libc_support_localtime_r', 27656, 27876, 27876, ['    while (days < 0 || days >= (XCC_LIC_SUPPORT_ISLEAP(y) ? 366 : 365))']]
code
funcline addr: 27880
funcline addr: 27884
funcline addr: 27888
funcline addr: 27892
funcline addr: 27896
funcline addr: 27900
funcline addr: 27904
funcline addr: 27908
funcline addr: 27912
funcline addr: 27916
funcline addr: 27920
funcline addr: 27924
funcline addr: 27928
funcline addr: 27932
['xcc_libc_support_localtime_r', 27656, 27876, 27932, ['    while (days < 0 || days >= (XCC_LIC_SUPPORT_ISLEAP(y) ? 366 : 365))']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
code
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['']]
code
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['        /* Adjust DAYS and Y to match the guessed year.  */']]
code
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['        days -= ((yg - y) * 365']]
code
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
['xcc_libc_support_localtime_r', 27656, 27932, 27932, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 27936
['xcc_libc_support_localtime_r', 27656, 27932, 27936, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27936, 27936, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
code
funcline addr: 27940
['xcc_libc_support_localtime_r', 27656, 27936, 27940, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27940, 27940, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 27944
['xcc_libc_support_localtime_r', 27656, 27940, 27944, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27944, 27944, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
code
funcline addr: 27948
funcline addr: 27952
['xcc_libc_support_localtime_r', 27656, 27944, 27952, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27952, 27952, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 27956
['xcc_libc_support_localtime_r', 27656, 27952, 27956, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27956, 27956, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
funcline addr: 27960
['xcc_libc_support_localtime_r', 27656, 27956, 27960, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27960, 27960, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 27964
funcline addr: 27968
['xcc_libc_support_localtime_r', 27656, 27960, 27968, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27968, 27968, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
funcline addr: 27972
['xcc_libc_support_localtime_r', 27656, 27968, 27972, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27972, 27972, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
code
funcline addr: 27976
funcline addr: 27980
['xcc_libc_support_localtime_r', 27656, 27972, 27980, ['        time_t yg = y + days / 365 - (days % 365 < 0);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27980, 27980, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 27984
funcline addr: 27988
['xcc_libc_support_localtime_r', 27656, 27980, 27988, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 27988, 27988, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
funcline addr: 27992
funcline addr: 27996
funcline addr: 28000
funcline addr: 28004
funcline addr: 28008
funcline addr: 28012
funcline addr: 28016
['xcc_libc_support_localtime_r', 27656, 27988, 28016, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28016, 28016, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 28020
funcline addr: 28024
funcline addr: 28028
['xcc_libc_support_localtime_r', 27656, 28016, 28028, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28028, 28028, ['        days -= ((yg - y) * 365']]
code
funcline addr: 28032
['xcc_libc_support_localtime_r', 27656, 28028, 28032, ['        days -= ((yg - y) * 365']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28032, 28032, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
funcline addr: 28036
funcline addr: 28040
['xcc_libc_support_localtime_r', 27656, 28032, 28040, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28040, 28040, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 28044
['xcc_libc_support_localtime_r', 27656, 28040, 28044, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28044, 28044, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
code
funcline addr: 28048
funcline addr: 28052
funcline addr: 28056
['xcc_libc_support_localtime_r', 27656, 28044, 28056, ['                 + XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (yg - 1)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28056, 28056, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
code
funcline addr: 28060
funcline addr: 28064
['xcc_libc_support_localtime_r', 27656, 28056, 28064, ['                 - XCC_LIC_SUPPORT_LEAPS_THRU_END_OF (y - 1));']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28064, 28064, ['        days -= ((yg - y) * 365']]
code
funcline addr: 28068
funcline addr: 28072
funcline addr: 28076
funcline addr: 28080
funcline addr: 28084
funcline addr: 28088
funcline addr: 28092
['xcc_libc_support_localtime_r', 27656, 28064, 28092, ['        days -= ((yg - y) * 365']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28092, 28092, ['']]
code
['xcc_libc_support_localtime_r', 27656, 28092, 28092, ['        y = yg;']]
code
['xcc_libc_support_localtime_r', 27656, 28092, 28092, ['    }']]
code
['xcc_libc_support_localtime_r', 27656, 28092, 28092, ['    result->tm_year = (int)(y - 1900);']]
code
['xcc_libc_support_localtime_r', 27656, 28092, 28092, ['    if (result->tm_year != y - 1900)']]
code
funcline addr: 28096
['xcc_libc_support_localtime_r', 27656, 28092, 28096, ['    if (result->tm_year != y - 1900)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28096, 28096, ['    result->tm_year = (int)(y - 1900);']]
code
funcline addr: 28100
['xcc_libc_support_localtime_r', 27656, 28096, 28100, ['    result->tm_year = (int)(y - 1900);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28100, 28100, ['    if (result->tm_year != y - 1900)']]
code
funcline addr: 28104
['xcc_libc_support_localtime_r', 27656, 28100, 28104, ['    if (result->tm_year != y - 1900)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28104, 28104, ['    result->tm_year = (int)(y - 1900);']]
code
funcline addr: 28108
['xcc_libc_support_localtime_r', 27656, 28104, 28108, ['    result->tm_year = (int)(y - 1900);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28108, 28108, ['    if (result->tm_year != y - 1900)']]
code
funcline addr: 28112
['xcc_libc_support_localtime_r', 27656, 28108, 28112, ['    if (result->tm_year != y - 1900)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28112, 28112, ['    {']]
code
['xcc_libc_support_localtime_r', 27656, 28112, 28112, ['        /* The year cannot be represented due to overflow.  */']]
code
['xcc_libc_support_localtime_r', 27656, 28112, 28112, ['        errno = EOVERFLOW;']]
code
funcline addr: 28116
funcline addr: 28120
funcline addr: 28124
funcline addr: 28128
['xcc_libc_support_localtime_r', 27656, 28112, 28128, ['        errno = EOVERFLOW;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28128, 28128, ['        return NULL;']]
code
['xcc_libc_support_localtime_r', 27656, 28128, 28128, ['    }']]
code
['xcc_libc_support_localtime_r', 27656, 28128, 28128, ['    result->tm_yday = (int)days;']]
code
funcline addr: 28132
['xcc_libc_support_localtime_r', 27656, 28128, 28132, ['    result->tm_yday = (int)days;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28132, 28132, ['    ip = xcc_libc_support_mon_yday[XCC_LIC_SUPPORT_ISLEAP(y)];']]
code
funcline addr: 28136
funcline addr: 28140
funcline addr: 28144
funcline addr: 28148
funcline addr: 28152
funcline addr: 28156
funcline addr: 28160
funcline addr: 28164
funcline addr: 28168
funcline addr: 28172
funcline addr: 28176
funcline addr: 28180
funcline addr: 28184
funcline addr: 28188
['xcc_libc_support_localtime_r', 27656, 28132, 28188, ['    ip = xcc_libc_support_mon_yday[XCC_LIC_SUPPORT_ISLEAP(y)];']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28188, 28188, ['    for (y = 11; days < (long int) ip[y]; --y)']]
code
funcline addr: 28192
funcline addr: 28196
funcline addr: 28200
funcline addr: 28204
funcline addr: 28208
funcline addr: 28212
funcline addr: 28216
funcline addr: 28220
funcline addr: 28224
['xcc_libc_support_localtime_r', 27656, 28188, 28224, ['    for (y = 11; days < (long int) ip[y]; --y)']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28224, 28224, ['        continue;']]
code
['xcc_libc_support_localtime_r', 27656, 28224, 28224, ['    days -= ip[y];']]
code
funcline addr: 28228
['xcc_libc_support_localtime_r', 27656, 28224, 28228, ['    days -= ip[y];']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28228, 28228, ['    result->tm_mon = (int)y;']]
code
funcline addr: 28232
['xcc_libc_support_localtime_r', 27656, 28228, 28232, ['    result->tm_mon = (int)y;']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28232, 28232, ['    result->tm_mday = (int)(days + 1);']]
code
funcline addr: 28236
funcline addr: 28240
funcline addr: 28244
funcline addr: 28248
funcline addr: 28252
funcline addr: 28256
['xcc_libc_support_localtime_r', 27656, 28232, 28256, ['    result->tm_mday = (int)(days + 1);']]
restartcode
['xcc_libc_support_localtime_r', 27656, 28256, 28256, ['']]
code
funchead startaddr: 0000000000006e64,funcname: xcc_meminfo_record
['xcc_meminfo_record', 28260, 28260, 28260, ['']]
code
['xcc_meminfo_record', 28260, 28260, 28260, ['    return xcc_util_record_sub_section_from(log_fd, path, " Process Limits (From: /proc/PID/limits)\\n", 0);']]
code
['xcc_meminfo_record', 28260, 28260, 28260, ['}']]
code
['xcc_meminfo_record', 28260, 28260, 28260, ['']]
code
['xcc_meminfo_record', 28260, 28260, 28260, ['int xcc_meminfo_record(int log_fd, pid_t pid)']]
code
['xcc_meminfo_record', 28260, 28260, 28260, ['{']]
code
funcline addr: 28260
funcline addr: 28264
funcline addr: 28268
funcline addr: 28272
funcline addr: 28276
funcline addr: 28280
funcline addr: 28284
funcline addr: 28288
funcline addr: 28292
funcline addr: 28296
funcline addr: 28300
funcline addr: 28304
funcline addr: 28308
['xcc_meminfo_record', 28260, 28260, 28308, ['{']]
restartcode
['xcc_meminfo_record', 28260, 28308, 28308, ['    while(n--)']]
code
funcline addr: 28312
funcline addr: 28316
funcline addr: 28320
funcline addr: 28324
funcline addr: 28328
funcline addr: 28332
funcline addr: 28336
funcline addr: 28340
funcline addr: 28344
funcline addr: 28348
['xcc_meminfo_record', 28260, 28308, 28348, ['    while(n--)']]
restartcode
['xcc_meminfo_record', 28260, 28348, 28348, ['']]
code
['xcc_meminfo_record', 28260, 28348, 28348, ['    xcc_libc_support_memset(stats, 0, sizeof(stats));']]
code
['xcc_meminfo_record', 28260, 28348, 28348, ['    xcc_libc_support_memset(&total, 0, sizeof(total));']]
code
['xcc_meminfo_record', 28260, 28348, 28348, ['']]
code
['xcc_meminfo_record', 28260, 28348, 28348, ['    //load memory info from /proc/pid/smaps']]
code
['xcc_meminfo_record', 28260, 28348, 28348, ['    snprintf(path, sizeof(path), "/proc/%d/smaps", pid);']]
code
funcline addr: 28352
funcline addr: 28356
funcline addr: 28360
funcline addr: 28364
funcline addr: 28368
['xcc_meminfo_record', 28260, 28348, 28368, ['    snprintf(path, sizeof(path), "/proc/%d/smaps", pid);']]
restartcode
['xcc_meminfo_record', 28260, 28368, 28368, ['    if(NULL == (fp = fopen(path, "r"))) return 0;']]
code
funcline addr: 28372
funcline addr: 28376
funcline addr: 28380
funcline addr: 28384
funcline addr: 28388
funcline addr: 28392
['xcc_meminfo_record', 28260, 28368, 28392, ['    if(NULL == (fp = fopen(path, "r"))) return 0;']]
restartcode
['xcc_meminfo_record', 28260, 28392, 28392, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
code
funcline addr: 28396
funcline addr: 28400
funcline addr: 28404
funcline addr: 28408
['xcc_meminfo_record', 28260, 28392, 28408, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
restartcode
['xcc_meminfo_record', 28260, 28408, 28408, ['    uintptr_t  start = 0, end = 0, prev_end = 0;']]
code
funcline addr: 28412
['xcc_meminfo_record', 28260, 28408, 28412, ['    uintptr_t  start = 0, end = 0, prev_end = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28412, 28412, ['    int        pos = 0;']]
code
funcline addr: 28416
funcline addr: 28420
funcline addr: 28424
['xcc_meminfo_record', 28260, 28412, 28424, ['    int        pos = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28424, 28424, ['    if(NULL == fgets(line, sizeof(line), fp)) return;']]
code
funcline addr: 28428
funcline addr: 28432
['xcc_meminfo_record', 28260, 28424, 28432, ['    if(NULL == fgets(line, sizeof(line), fp)) return;']]
restartcode
['xcc_meminfo_record', 28260, 28432, 28432, ['    while(!done)']]
code
funcline addr: 28436
funcline addr: 28440
funcline addr: 28444
funcline addr: 28448
funcline addr: 28452
funcline addr: 28456
funcline addr: 28460
funcline addr: 28464
funcline addr: 28468
funcline addr: 28472
funcline addr: 28476
funcline addr: 28480
['xcc_meminfo_record', 28260, 28432, 28480, ['    while(!done)']]
restartcode
['xcc_meminfo_record', 28260, 28480, 28480, ['        prev_end = end;']]
code
funcline addr: 28484
['xcc_meminfo_record', 28260, 28480, 28484, ['        prev_end = end;']]
restartcode
['xcc_meminfo_record', 28260, 28484, 28484, ['        return __strlen_chk(s, bos);']]
code
funcline addr: 28488
funcline addr: 28492
funcline addr: 28496
['xcc_meminfo_record', 28260, 28484, 28496, ['        return __strlen_chk(s, bos);']]
restartcode
['xcc_meminfo_record', 28260, 28496, 28496, ['        if (len < 1) return;']]
code
funcline addr: 28500
funcline addr: 28504
['xcc_meminfo_record', 28260, 28496, 28504, ['        if (len < 1) return;']]
restartcode
['xcc_meminfo_record', 28260, 28504, 28504, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
code
funcline addr: 28508
['xcc_meminfo_record', 28260, 28504, 28508, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
restartcode
['xcc_meminfo_record', 28260, 28508, 28508, ["        line[--len] = '\\0';"]]
code
funcline addr: 28512
['xcc_meminfo_record', 28260, 28508, 28512, ["        line[--len] = '\\0';"]]
restartcode
['xcc_meminfo_record', 28260, 28512, 28512, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
code
funcline addr: 28516
funcline addr: 28520
funcline addr: 28524
funcline addr: 28528
funcline addr: 28532
['xcc_meminfo_record', 28260, 28512, 28532, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
restartcode
['xcc_meminfo_record', 28260, 28532, 28532, ["        line[--len] = '\\0';"]]
code
funcline addr: 28536
['xcc_meminfo_record', 28260, 28532, 28536, ["        line[--len] = '\\0';"]]
restartcode
['xcc_meminfo_record', 28260, 28536, 28536, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
code
funcline addr: 28540
funcline addr: 28544
funcline addr: 28548
['xcc_meminfo_record', 28260, 28536, 28548, ['        if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d%n", &start, &end, &pos) != 2)']]
restartcode
['xcc_meminfo_record', 28260, 28548, 28548, ['            name_pos = (size_t)pos;']]
code
funcline addr: 28552
funcline addr: 28556
['xcc_meminfo_record', 28260, 28548, 28556, ['            name_pos = (size_t)pos;']]
restartcode
['xcc_meminfo_record', 28260, 28556, 28556, ['            while(isspace(line[name_pos]))']]
code
funcline addr: 28560
funcline addr: 28564
funcline addr: 28568
funcline addr: 28572
funcline addr: 28576
['xcc_meminfo_record', 28260, 28556, 28576, ['            while(isspace(line[name_pos]))']]
restartcode
['xcc_meminfo_record', 28260, 28576, 28576, ['            name_len = strlen(name);']]
code
funcline addr: 28580
['xcc_meminfo_record', 28260, 28576, 28580, ['            name_len = strlen(name);']]
restartcode
['xcc_meminfo_record', 28260, 28580, 28580, ['    return __builtin_strlen(s);']]
code
funcline addr: 28584
funcline addr: 28588
funcline addr: 28592
['xcc_meminfo_record', 28260, 28580, 28592, ['    return __builtin_strlen(s);']]
restartcode
['xcc_meminfo_record', 28260, 28592, 28592, ['            if(name_len > XCC_MEMINFO_DELETE_STR_LEN &&']]
code
funcline addr: 28596
funcline addr: 28600
['xcc_meminfo_record', 28260, 28592, 28600, ['            if(name_len > XCC_MEMINFO_DELETE_STR_LEN &&']]
restartcode
['xcc_meminfo_record', 28260, 28600, 28600, ['               0 == strcmp(name + name_len - XCC_MEMINFO_DELETE_STR_LEN, XCC_MEMINFO_DELETE_STR))']]
code
funcline addr: 28604
funcline addr: 28608
funcline addr: 28612
funcline addr: 28616
['xcc_meminfo_record', 28260, 28600, 28616, ['               0 == strcmp(name + name_len - XCC_MEMINFO_DELETE_STR_LEN, XCC_MEMINFO_DELETE_STR))']]
restartcode
['xcc_meminfo_record', 28260, 28616, 28616, ['            if(name_len > XCC_MEMINFO_DELETE_STR_LEN &&']]
code
funcline addr: 28620
['xcc_meminfo_record', 28260, 28616, 28620, ['            if(name_len > XCC_MEMINFO_DELETE_STR_LEN &&']]
restartcode
['xcc_meminfo_record', 28260, 28620, 28620, ['                name_len -= XCC_MEMINFO_DELETE_STR_LEN;']]
code
funcline addr: 28624
['xcc_meminfo_record', 28260, 28620, 28624, ['                name_len -= XCC_MEMINFO_DELETE_STR_LEN;']]
restartcode
['xcc_meminfo_record', 28260, 28624, 28624, ["                name[name_len] = '\\0';"]]
code
funcline addr: 28628
funcline addr: 28632
['xcc_meminfo_record', 28260, 28624, 28632, ["                name[name_len] = '\\0';"]]
restartcode
['xcc_meminfo_record', 28260, 28632, 28632, ['            if(0 == strncmp(name, "[heap]", 6) ||']]
code
funcline addr: 28636
funcline addr: 28640
funcline addr: 28644
funcline addr: 28648
funcline addr: 28652
funcline addr: 28656
['xcc_meminfo_record', 28260, 28632, 28656, ['            if(0 == strncmp(name, "[heap]", 6) ||']]
restartcode
['xcc_meminfo_record', 28260, 28656, 28656, ['               0 == strncmp(name, "[anon:libc_malloc]", 18))']]
code
funcline addr: 28660
funcline addr: 28664
funcline addr: 28668
funcline addr: 28672
funcline addr: 28676
['xcc_meminfo_record', 28260, 28656, 28676, ['               0 == strncmp(name, "[anon:libc_malloc]", 18))']]
restartcode
['xcc_meminfo_record', 28260, 28676, 28676, ['            if(0 == strncmp(name, "[heap]", 6) ||']]
code
funcline addr: 28680
['xcc_meminfo_record', 28260, 28676, 28680, ['            if(0 == strncmp(name, "[heap]", 6) ||']]
restartcode
['xcc_meminfo_record', 28260, 28680, 28680, ['            else if(0 == strncmp(name, "[stack", 6))']]
code
funcline addr: 28684
funcline addr: 28688
funcline addr: 28692
funcline addr: 28696
funcline addr: 28700
funcline addr: 28704
['xcc_meminfo_record', 28260, 28680, 28704, ['            else if(0 == strncmp(name, "[stack", 6))']]
restartcode
['xcc_meminfo_record', 28260, 28704, 28704, ['            else if(name_len > 3 && 0 == strcmp(name + name_len - 3, ".so"))']]
code
funcline addr: 28708
funcline addr: 28712
funcline addr: 28716
funcline addr: 28720
funcline addr: 28724
funcline addr: 28728
funcline addr: 28732
funcline addr: 28736
['xcc_meminfo_record', 28260, 28704, 28736, ['            else if(name_len > 3 && 0 == strcmp(name + name_len - 3, ".so"))']]
restartcode
['xcc_meminfo_record', 28260, 28736, 28736, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".jar"))']]
code
funcline addr: 28740
funcline addr: 28744
funcline addr: 28748
funcline addr: 28752
funcline addr: 28756
funcline addr: 28760
funcline addr: 28764
funcline addr: 28768
funcline addr: 28772
['xcc_meminfo_record', 28260, 28736, 28772, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".jar"))']]
restartcode
['xcc_meminfo_record', 28260, 28772, 28772, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".apk"))']]
code
funcline addr: 28776
funcline addr: 28780
funcline addr: 28784
funcline addr: 28788
funcline addr: 28792
['xcc_meminfo_record', 28260, 28772, 28792, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".apk"))']]
restartcode
['xcc_meminfo_record', 28260, 28792, 28792, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".ttf"))']]
code
funcline addr: 28796
funcline addr: 28800
funcline addr: 28804
funcline addr: 28808
funcline addr: 28812
['xcc_meminfo_record', 28260, 28792, 28812, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".ttf"))']]
restartcode
['xcc_meminfo_record', 28260, 28812, 28812, ['            else if((name_len > 4 && NULL != strstr(name, ".dex")) ||']]
code
funcline addr: 28816
funcline addr: 28820
funcline addr: 28824
funcline addr: 28828
funcline addr: 28832
funcline addr: 28836
funcline addr: 28840
funcline addr: 28844
funcline addr: 28848
funcline addr: 28852
funcline addr: 28856
funcline addr: 28860
funcline addr: 28864
funcline addr: 28868
funcline addr: 28872
funcline addr: 28876
funcline addr: 28880
funcline addr: 28884
funcline addr: 28888
['xcc_meminfo_record', 28260, 28812, 28888, ['            else if((name_len > 4 && NULL != strstr(name, ".dex")) ||']]
restartcode
['xcc_meminfo_record', 28260, 28888, 28888, ['        shared_dirty = 0;']]
code
funcline addr: 28892
['xcc_meminfo_record', 28260, 28888, 28892, ['        shared_dirty = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28892, 28892, ['        private_clean = 0;']]
code
funcline addr: 28896
['xcc_meminfo_record', 28260, 28892, 28896, ['        private_clean = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28896, 28896, ['        shared_clean = 0;']]
code
funcline addr: 28900
['xcc_meminfo_record', 28260, 28896, 28900, ['        shared_clean = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28900, 28900, ['        swapped_out = 0;']]
code
funcline addr: 28904
['xcc_meminfo_record', 28260, 28900, 28904, ['        swapped_out = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28904, 28904, ['        swapped_out_pss = 0;']]
code
funcline addr: 28908
funcline addr: 28912
funcline addr: 28916
['xcc_meminfo_record', 28260, 28904, 28916, ['        swapped_out_pss = 0;']]
restartcode
['xcc_meminfo_record', 28260, 28916, 28916, ['            if(NULL == fgets(line, sizeof(line), fp))']]
code
funcline addr: 28920
['xcc_meminfo_record', 28260, 28916, 28920, ['            if(NULL == fgets(line, sizeof(line), fp))']]
restartcode
['xcc_meminfo_record', 28260, 28920, 28920, ['            if(line[0] == \'P\' && sscanf(line, "Pss: %zu kB", &temp) == 1)']]
code
funcline addr: 28924
funcline addr: 28928
funcline addr: 28932
funcline addr: 28936
funcline addr: 28940
funcline addr: 28944
funcline addr: 28948
funcline addr: 28952
['xcc_meminfo_record', 28260, 28920, 28952, ['            if(line[0] == \'P\' && sscanf(line, "Pss: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 28952, 28952, ['                pss = temp;']]
code
funcline addr: 28956
funcline addr: 28960
['xcc_meminfo_record', 28260, 28952, 28960, ['                pss = temp;']]
restartcode
['xcc_meminfo_record', 28260, 28960, 28960, ['            else if(line[0] == \'S\' && sscanf(line, "Shared_Clean: %zu kB", &temp) == 1)']]
code
funcline addr: 28964
funcline addr: 28968
funcline addr: 28972
funcline addr: 28976
funcline addr: 28980
funcline addr: 28984
funcline addr: 28988
funcline addr: 28992
['xcc_meminfo_record', 28260, 28960, 28992, ['            else if(line[0] == \'S\' && sscanf(line, "Shared_Clean: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 28992, 28992, ['                shared_clean = temp;']]
code
funcline addr: 28996
funcline addr: 29000
['xcc_meminfo_record', 28260, 28992, 29000, ['                shared_clean = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29000, 29000, ['            else if (line[0] == \'S\' && sscanf(line, "Shared_Dirty: %zu kB", &temp) == 1)']]
code
funcline addr: 29004
funcline addr: 29008
funcline addr: 29012
funcline addr: 29016
funcline addr: 29020
funcline addr: 29024
funcline addr: 29028
funcline addr: 29032
funcline addr: 29036
['xcc_meminfo_record', 28260, 29000, 29036, ['            else if (line[0] == \'S\' && sscanf(line, "Shared_Dirty: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 29036, 29036, ['                shared_dirty = temp;']]
code
funcline addr: 29040
funcline addr: 29044
['xcc_meminfo_record', 28260, 29036, 29044, ['                shared_dirty = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29044, 29044, ['            else if (line[0] == \'P\' && sscanf(line, "Private_Clean: %zu kB", &temp) == 1)']]
code
funcline addr: 29048
funcline addr: 29052
funcline addr: 29056
funcline addr: 29060
funcline addr: 29064
funcline addr: 29068
funcline addr: 29072
funcline addr: 29076
funcline addr: 29080
['xcc_meminfo_record', 28260, 29044, 29080, ['            else if (line[0] == \'P\' && sscanf(line, "Private_Clean: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 29080, 29080, ['                private_clean = temp;']]
code
funcline addr: 29084
funcline addr: 29088
['xcc_meminfo_record', 28260, 29080, 29088, ['                private_clean = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29088, 29088, ['            else if (line[0] == \'P\' && sscanf(line, "Private_Dirty: %zu kB", &temp) == 1)']]
code
funcline addr: 29092
funcline addr: 29096
funcline addr: 29100
funcline addr: 29104
funcline addr: 29108
funcline addr: 29112
funcline addr: 29116
funcline addr: 29120
funcline addr: 29124
['xcc_meminfo_record', 28260, 29088, 29124, ['            else if (line[0] == \'P\' && sscanf(line, "Private_Dirty: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 29124, 29124, ['                private_dirty = temp;']]
code
funcline addr: 29128
funcline addr: 29132
['xcc_meminfo_record', 28260, 29124, 29132, ['                private_dirty = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29132, 29132, ['            else if (line[0] == \'S\' && sscanf(line, "Swap: %zu kB", &temp) == 1)']]
code
funcline addr: 29136
funcline addr: 29140
funcline addr: 29144
funcline addr: 29148
funcline addr: 29152
funcline addr: 29156
funcline addr: 29160
funcline addr: 29164
funcline addr: 29168
['xcc_meminfo_record', 28260, 29132, 29168, ['            else if (line[0] == \'S\' && sscanf(line, "Swap: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 29168, 29168, ['                swapped_out = temp;']]
code
funcline addr: 29172
funcline addr: 29176
['xcc_meminfo_record', 28260, 29168, 29176, ['                swapped_out = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29176, 29176, ['            else if (line[0] == \'S\' && sscanf(line, "SwapPss: %zu kB", &temp) == 1)']]
code
funcline addr: 29180
funcline addr: 29184
funcline addr: 29188
funcline addr: 29192
funcline addr: 29196
funcline addr: 29200
funcline addr: 29204
funcline addr: 29208
funcline addr: 29212
['xcc_meminfo_record', 28260, 29176, 29212, ['            else if (line[0] == \'S\' && sscanf(line, "SwapPss: %zu kB", &temp) == 1)']]
restartcode
['xcc_meminfo_record', 28260, 29212, 29212, ['                swapped_out_pss = temp;']]
code
funcline addr: 29216
funcline addr: 29220
funcline addr: 29224
funcline addr: 29228
['xcc_meminfo_record', 28260, 29212, 29228, ['                swapped_out_pss = temp;']]
restartcode
['xcc_meminfo_record', 28260, 29228, 29228, ['            else if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d", &start, &end) == 2)']]
code
funcline addr: 29232
funcline addr: 29236
funcline addr: 29240
funcline addr: 29244
funcline addr: 29248
funcline addr: 29252
funcline addr: 29256
funcline addr: 29260
funcline addr: 29264
funcline addr: 29268
funcline addr: 29272
funcline addr: 29276
['xcc_meminfo_record', 28260, 29228, 29276, ['            else if(sscanf(line, "%"SCNxPTR"-%"SCNxPTR" %*s %*x %*x:%*x %*d", &start, &end) == 2)']]
restartcode
['xcc_meminfo_record', 28260, 29276, 29276, ['        if(!skip)']]
code
funcline addr: 29280
funcline addr: 29284
funcline addr: 29288
['xcc_meminfo_record', 28260, 29276, 29288, ['        if(!skip)']]
restartcode
['xcc_meminfo_record', 28260, 29288, 29288, ['            if(is_swappable && (pss > 0))']]
code
funcline addr: 29292
funcline addr: 29296
['xcc_meminfo_record', 28260, 29288, 29296, ['            if(is_swappable && (pss > 0))']]
restartcode
['xcc_meminfo_record', 28260, 29296, 29296, ['                if((shared_clean > 0) || (shared_dirty > 0))']]
code
funcline addr: 29300
funcline addr: 29304
['xcc_meminfo_record', 28260, 29296, 29304, ['                if((shared_clean > 0) || (shared_dirty > 0))']]
restartcode
['xcc_meminfo_record', 28260, 29304, 29304, ['                    sharing_proportion = (pss - private_clean - private_dirty) / (shared_clean + shared_dirty);']]
code
funcline addr: 29308
funcline addr: 29312
funcline addr: 29316
funcline addr: 29320
funcline addr: 29324
funcline addr: 29328
funcline addr: 29332
['xcc_meminfo_record', 28260, 29304, 29332, ['                    sharing_proportion = (pss - private_clean - private_dirty) / (shared_clean + shared_dirty);']]
restartcode
['xcc_meminfo_record', 28260, 29332, 29332, ['                swappable_pss = (size_t)((sharing_proportion * shared_clean) + private_clean);']]
code
funcline addr: 29336
funcline addr: 29340
funcline addr: 29344
funcline addr: 29348
funcline addr: 29352
funcline addr: 29356
['xcc_meminfo_record', 28260, 29332, 29356, ['                swappable_pss = (size_t)((sharing_proportion * shared_clean) + private_clean);']]
restartcode
['xcc_meminfo_record', 28260, 29356, 29356, ['            stats[which_heap].pss += pss;']]
code
funcline addr: 29360
funcline addr: 29364
funcline addr: 29368
['xcc_meminfo_record', 28260, 29356, 29368, ['            stats[which_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29368, 29368, ['            if (which_heap == HEAP_DALVIK ||']]
code
funcline addr: 29372
['xcc_meminfo_record', 28260, 29368, 29372, ['            if (which_heap == HEAP_DALVIK ||']]
restartcode
['xcc_meminfo_record', 28260, 29372, 29372, ['            stats[which_heap].pss += pss;']]
code
funcline addr: 29376
['xcc_meminfo_record', 28260, 29372, 29376, ['            stats[which_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29376, 29376, ['            stats[which_heap].swappable_pss += swappable_pss;']]
code
funcline addr: 29380
['xcc_meminfo_record', 28260, 29376, 29380, ['            stats[which_heap].swappable_pss += swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 29380, 29380, ['            stats[which_heap].pss += pss;']]
code
funcline addr: 29384
['xcc_meminfo_record', 28260, 29380, 29384, ['            stats[which_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29384, 29384, ['            stats[which_heap].private_dirty += private_dirty;']]
code
funcline addr: 29388
funcline addr: 29392
['xcc_meminfo_record', 28260, 29384, 29392, ['            stats[which_heap].private_dirty += private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29392, 29392, ['            stats[which_heap].shared_dirty += shared_dirty;']]
code
funcline addr: 29396
['xcc_meminfo_record', 28260, 29392, 29396, ['            stats[which_heap].shared_dirty += shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29396, 29396, ['            stats[which_heap].private_dirty += private_dirty;']]
code
funcline addr: 29400
['xcc_meminfo_record', 28260, 29396, 29400, ['            stats[which_heap].private_dirty += private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29400, 29400, ['            stats[which_heap].private_clean += private_clean;']]
code
funcline addr: 29404
funcline addr: 29408
['xcc_meminfo_record', 28260, 29400, 29408, ['            stats[which_heap].private_clean += private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29408, 29408, ['            stats[which_heap].shared_clean += shared_clean;']]
code
funcline addr: 29412
['xcc_meminfo_record', 28260, 29408, 29412, ['            stats[which_heap].shared_clean += shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29412, 29412, ['            stats[which_heap].private_clean += private_clean;']]
code
funcline addr: 29416
['xcc_meminfo_record', 28260, 29412, 29416, ['            stats[which_heap].private_clean += private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29416, 29416, ['            stats[which_heap].swapped_out += swapped_out;']]
code
funcline addr: 29420
funcline addr: 29424
funcline addr: 29428
['xcc_meminfo_record', 28260, 29416, 29428, ['            stats[which_heap].swapped_out += swapped_out;']]
restartcode
['xcc_meminfo_record', 28260, 29428, 29428, ['            stats[which_heap].swapped_out_pss += swapped_out_pss;']]
code
funcline addr: 29432
funcline addr: 29436
['xcc_meminfo_record', 28260, 29428, 29436, ['            stats[which_heap].swapped_out_pss += swapped_out_pss;']]
restartcode
['xcc_meminfo_record', 28260, 29436, 29436, ['            if (which_heap == HEAP_DALVIK ||']]
code
funcline addr: 29440
funcline addr: 29444
funcline addr: 29448
funcline addr: 29452
funcline addr: 29456
funcline addr: 29460
funcline addr: 29464
funcline addr: 29468
['xcc_meminfo_record', 28260, 29436, 29468, ['            if (which_heap == HEAP_DALVIK ||']]
restartcode
['xcc_meminfo_record', 28260, 29468, 29468, ['                stats[sub_heap].pss += pss;']]
code
funcline addr: 29472
funcline addr: 29476
funcline addr: 29480
['xcc_meminfo_record', 28260, 29468, 29480, ['                stats[sub_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29480, 29480, ['                stats[sub_heap].private_dirty += private_dirty;']]
code
funcline addr: 29484
['xcc_meminfo_record', 28260, 29480, 29484, ['                stats[sub_heap].private_dirty += private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29484, 29484, ['                stats[sub_heap].swapped_out += swapped_out;']]
code
funcline addr: 29488
['xcc_meminfo_record', 28260, 29484, 29488, ['                stats[sub_heap].swapped_out += swapped_out;']]
restartcode
['xcc_meminfo_record', 28260, 29488, 29488, ['                stats[sub_heap].swappable_pss += swappable_pss;']]
code
funcline addr: 29492
['xcc_meminfo_record', 28260, 29488, 29492, ['                stats[sub_heap].swappable_pss += swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 29492, 29492, ['                stats[sub_heap].private_clean += private_clean;']]
code
funcline addr: 29496
['xcc_meminfo_record', 28260, 29492, 29496, ['                stats[sub_heap].private_clean += private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29496, 29496, ['                stats[sub_heap].pss += pss;']]
code
funcline addr: 29500
['xcc_meminfo_record', 28260, 29496, 29500, ['                stats[sub_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29500, 29500, ['                stats[sub_heap].private_dirty += private_dirty;']]
code
funcline addr: 29504
['xcc_meminfo_record', 28260, 29500, 29504, ['                stats[sub_heap].private_dirty += private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29504, 29504, ['                stats[sub_heap].shared_dirty += shared_dirty;']]
code
funcline addr: 29508
['xcc_meminfo_record', 28260, 29504, 29508, ['                stats[sub_heap].shared_dirty += shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29508, 29508, ['                stats[sub_heap].private_clean += private_clean;']]
code
funcline addr: 29512
['xcc_meminfo_record', 28260, 29508, 29512, ['                stats[sub_heap].private_clean += private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29512, 29512, ['                stats[sub_heap].shared_clean += shared_clean;']]
code
funcline addr: 29516
['xcc_meminfo_record', 28260, 29512, 29516, ['                stats[sub_heap].shared_clean += shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29516, 29516, ['                stats[sub_heap].swapped_out += swapped_out;']]
code
funcline addr: 29520
['xcc_meminfo_record', 28260, 29516, 29520, ['                stats[sub_heap].swapped_out += swapped_out;']]
restartcode
['xcc_meminfo_record', 28260, 29520, 29520, ['                stats[sub_heap].swapped_out_pss += swapped_out_pss;']]
code
funcline addr: 29524
['xcc_meminfo_record', 28260, 29520, 29524, ['                stats[sub_heap].swapped_out_pss += swapped_out_pss;']]
restartcode
['xcc_meminfo_record', 28260, 29524, 29524, ['                stats[sub_heap].pss += pss;']]
code
funcline addr: 29528
['xcc_meminfo_record', 28260, 29524, 29528, ['                stats[sub_heap].pss += pss;']]
restartcode
['xcc_meminfo_record', 28260, 29528, 29528, ['                stats[sub_heap].private_dirty += private_dirty;']]
code
funcline addr: 29532
['xcc_meminfo_record', 28260, 29528, 29532, ['                stats[sub_heap].private_dirty += private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 29532, 29532, ['                stats[sub_heap].private_clean += private_clean;']]
code
funcline addr: 29536
['xcc_meminfo_record', 28260, 29532, 29536, ['                stats[sub_heap].private_clean += private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 29536, 29536, ['                stats[sub_heap].swapped_out += swapped_out;']]
code
funcline addr: 29540
['xcc_meminfo_record', 28260, 29536, 29540, ['                stats[sub_heap].swapped_out += swapped_out;']]
restartcode
['xcc_meminfo_record', 28260, 29540, 29540, ['    while(!done)']]
code
funcline addr: 29544
funcline addr: 29548
funcline addr: 29552
funcline addr: 29556
funcline addr: 29560
funcline addr: 29564
funcline addr: 29568
funcline addr: 29572
funcline addr: 29576
funcline addr: 29580
funcline addr: 29584
funcline addr: 29588
funcline addr: 29592
funcline addr: 29596
funcline addr: 29600
funcline addr: 29604
funcline addr: 29608
['xcc_meminfo_record', 28260, 29540, 29608, ['    while(!done)']]
restartcode
['xcc_meminfo_record', 28260, 29608, 29608, ['                    (name_len > 5 && 0 == strcmp(name + name_len - 5, ".odex")))']]
code
funcline addr: 29612
funcline addr: 29616
funcline addr: 29620
funcline addr: 29624
funcline addr: 29628
funcline addr: 29632
funcline addr: 29636
funcline addr: 29640
['xcc_meminfo_record', 28260, 29608, 29640, ['                    (name_len > 5 && 0 == strcmp(name + name_len - 5, ".odex")))']]
restartcode
['xcc_meminfo_record', 28260, 29640, 29640, ['            else if((name_len > 4 && NULL != strstr(name, ".dex")) ||']]
code
funcline addr: 29644
['xcc_meminfo_record', 28260, 29640, 29644, ['            else if((name_len > 4 && NULL != strstr(name, ".dex")) ||']]
restartcode
['xcc_meminfo_record', 28260, 29644, 29644, ['            else if(name_len > 5 && 0 == strcmp(name + name_len - 5, ".vdex"))']]
code
funcline addr: 29648
funcline addr: 29652
funcline addr: 29656
funcline addr: 29660
funcline addr: 29664
['xcc_meminfo_record', 28260, 29644, 29664, ['            else if(name_len > 5 && 0 == strcmp(name + name_len - 5, ".vdex"))']]
restartcode
['xcc_meminfo_record', 28260, 29664, 29664, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".oat"))']]
code
funcline addr: 29668
funcline addr: 29672
funcline addr: 29676
funcline addr: 29680
funcline addr: 29684
['xcc_meminfo_record', 28260, 29664, 29684, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".oat"))']]
restartcode
['xcc_meminfo_record', 28260, 29684, 29684, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".art"))']]
code
funcline addr: 29688
funcline addr: 29692
funcline addr: 29696
funcline addr: 29700
funcline addr: 29704
['xcc_meminfo_record', 28260, 29684, 29704, ['            else if(name_len > 4 && 0 == strcmp(name + name_len - 4, ".art"))']]
restartcode
['xcc_meminfo_record', 28260, 29704, 29704, ['            else if(0 == strncmp(name, "/dev/", 5))']]
code
funcline addr: 29708
funcline addr: 29712
funcline addr: 29716
funcline addr: 29720
funcline addr: 29724
funcline addr: 29728
['xcc_meminfo_record', 28260, 29704, 29728, ['            else if(0 == strncmp(name, "/dev/", 5))']]
restartcode
['xcc_meminfo_record', 28260, 29728, 29728, ['            else if(0 == strncmp(name, "[anon:", 6))']]
code
funcline addr: 29732
funcline addr: 29736
funcline addr: 29740
funcline addr: 29744
funcline addr: 29748
funcline addr: 29752
['xcc_meminfo_record', 28260, 29728, 29752, ['            else if(0 == strncmp(name, "[anon:", 6))']]
restartcode
['xcc_meminfo_record', 28260, 29752, 29752, ['            else if(name_len > 0)']]
code
funcline addr: 29756
funcline addr: 29760
funcline addr: 29764
funcline addr: 29768
['xcc_meminfo_record', 28260, 29752, 29768, ['            else if(name_len > 0)']]
restartcode
['xcc_meminfo_record', 28260, 29768, 29768, ['                if(0 == strncmp(name, "/dev/kgsl-3d0", 13))']]
code
funcline addr: 29772
funcline addr: 29776
funcline addr: 29780
funcline addr: 29784
funcline addr: 29788
funcline addr: 29792
['xcc_meminfo_record', 28260, 29768, 29792, ['                if(0 == strncmp(name, "/dev/kgsl-3d0", 13))']]
restartcode
['xcc_meminfo_record', 28260, 29792, 29792, ['                else if(0 == strncmp(name, "/dev/ashmem", 11))']]
code
funcline addr: 29796
funcline addr: 29800
funcline addr: 29804
funcline addr: 29808
funcline addr: 29812
funcline addr: 29816
funcline addr: 29820
funcline addr: 29824
funcline addr: 29828
funcline addr: 29832
funcline addr: 29836
['xcc_meminfo_record', 28260, 29792, 29836, ['                else if(0 == strncmp(name, "/dev/ashmem", 11))']]
restartcode
['xcc_meminfo_record', 28260, 29836, 29836, ['            else if(start == prev_end && prev_heap == HEAP_SO)']]
code
funcline addr: 29840
funcline addr: 29844
funcline addr: 29848
funcline addr: 29852
funcline addr: 29856
funcline addr: 29860
funcline addr: 29864
funcline addr: 29868
funcline addr: 29872
funcline addr: 29876
funcline addr: 29880
funcline addr: 29884
['xcc_meminfo_record', 28260, 29836, 29884, ['            else if(start == prev_end && prev_heap == HEAP_SO)']]
restartcode
['xcc_meminfo_record', 28260, 29884, 29884, ['                    if(0 == strncmp(name, "/dev/ashmem/dalvik-", 19))']]
code
funcline addr: 29888
funcline addr: 29892
funcline addr: 29896
funcline addr: 29900
funcline addr: 29904
funcline addr: 29908
['xcc_meminfo_record', 28260, 29884, 29908, ['                    if(0 == strncmp(name, "/dev/ashmem/dalvik-", 19))']]
restartcode
['xcc_meminfo_record', 28260, 29908, 29908, ['                    else if(0 == strncmp(name, "/dev/ashmem/CursorWindow", 24))']]
code
funcline addr: 29912
funcline addr: 29916
funcline addr: 29920
funcline addr: 29924
funcline addr: 29928
funcline addr: 29932
['xcc_meminfo_record', 28260, 29908, 29932, ['                    else if(0 == strncmp(name, "/dev/ashmem/CursorWindow", 24))']]
restartcode
['xcc_meminfo_record', 28260, 29932, 29932, ['                    else if(0 == strncmp(name, "/dev/ashmem/libc malloc", 23))']]
code
funcline addr: 29936
funcline addr: 29940
funcline addr: 29944
funcline addr: 29948
funcline addr: 29952
funcline addr: 29956
funcline addr: 29960
funcline addr: 29964
funcline addr: 29968
funcline addr: 29972
funcline addr: 29976
['xcc_meminfo_record', 28260, 29932, 29976, ['                    else if(0 == strncmp(name, "/dev/ashmem/libc malloc", 23))']]
restartcode
['xcc_meminfo_record', 28260, 29976, 29976, ['                        if(0 == strncmp(name, "/dev/ashmem/dalvik-LinearAlloc", 30))']]
code
funcline addr: 29980
funcline addr: 29984
funcline addr: 29988
funcline addr: 29992
funcline addr: 29996
funcline addr: 30000
['xcc_meminfo_record', 28260, 29976, 30000, ['                        if(0 == strncmp(name, "/dev/ashmem/dalvik-LinearAlloc", 30))']]
restartcode
['xcc_meminfo_record', 28260, 30000, 30000, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-alloc space", 30) ||']]
code
funcline addr: 30004
funcline addr: 30008
funcline addr: 30012
funcline addr: 30016
funcline addr: 30020
funcline addr: 30024
['xcc_meminfo_record', 28260, 30000, 30024, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-alloc space", 30) ||']]
restartcode
['xcc_meminfo_record', 28260, 30024, 30024, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-main space", 29))']]
code
funcline addr: 30028
funcline addr: 30032
funcline addr: 30036
funcline addr: 30040
funcline addr: 30044
['xcc_meminfo_record', 28260, 30024, 30044, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-main space", 29))']]
restartcode
['xcc_meminfo_record', 28260, 30044, 30044, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-alloc space", 30) ||']]
code
funcline addr: 30048
['xcc_meminfo_record', 28260, 30044, 30048, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-alloc space", 30) ||']]
restartcode
['xcc_meminfo_record', 28260, 30048, 30048, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-large object space", 37) ||']]
code
funcline addr: 30052
funcline addr: 30056
funcline addr: 30060
funcline addr: 30064
funcline addr: 30068
funcline addr: 30072
['xcc_meminfo_record', 28260, 30048, 30072, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-large object space", 37) ||']]
restartcode
['xcc_meminfo_record', 28260, 30072, 30072, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-free list large object space", 47))']]
code
funcline addr: 30076
funcline addr: 30080
funcline addr: 30084
funcline addr: 30088
funcline addr: 30092
['xcc_meminfo_record', 28260, 30072, 30092, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-free list large object space", 47))']]
restartcode
['xcc_meminfo_record', 28260, 30092, 30092, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-large object space", 37) ||']]
code
funcline addr: 30096
['xcc_meminfo_record', 28260, 30092, 30096, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-large object space", 37) ||']]
restartcode
['xcc_meminfo_record', 28260, 30096, 30096, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-non moving space", 35))']]
code
funcline addr: 30100
funcline addr: 30104
funcline addr: 30108
funcline addr: 30112
funcline addr: 30116
funcline addr: 30120
['xcc_meminfo_record', 28260, 30096, 30120, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-non moving space", 35))']]
restartcode
['xcc_meminfo_record', 28260, 30120, 30120, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-zygote space", 31))']]
code
funcline addr: 30124
funcline addr: 30128
funcline addr: 30132
funcline addr: 30136
funcline addr: 30140
funcline addr: 30144
['xcc_meminfo_record', 28260, 30120, 30144, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-zygote space", 31))']]
restartcode
['xcc_meminfo_record', 28260, 30144, 30144, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-indirect ref", 31))']]
code
funcline addr: 30148
funcline addr: 30152
funcline addr: 30156
funcline addr: 30160
funcline addr: 30164
funcline addr: 30168
['xcc_meminfo_record', 28260, 30144, 30168, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-indirect ref", 31))']]
restartcode
['xcc_meminfo_record', 28260, 30168, 30168, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-jit-code-cache", 33) ||']]
code
funcline addr: 30172
funcline addr: 30176
funcline addr: 30180
funcline addr: 30184
funcline addr: 30188
funcline addr: 30192
['xcc_meminfo_record', 28260, 30168, 30192, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-jit-code-cache", 33) ||']]
restartcode
['xcc_meminfo_record', 28260, 30192, 30192, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-data-code-cache", 34))']]
code
funcline addr: 30196
funcline addr: 30200
funcline addr: 30204
funcline addr: 30208
funcline addr: 30212
['xcc_meminfo_record', 28260, 30192, 30212, ['                                0 == strncmp(name, "/dev/ashmem/dalvik-data-code-cache", 34))']]
restartcode
['xcc_meminfo_record', 28260, 30212, 30212, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-jit-code-cache", 33) ||']]
code
funcline addr: 30216
['xcc_meminfo_record', 28260, 30212, 30216, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-jit-code-cache", 33) ||']]
restartcode
['xcc_meminfo_record', 28260, 30216, 30216, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-CompilerMetadata", 35))']]
code
funcline addr: 30220
funcline addr: 30224
funcline addr: 30228
funcline addr: 30232
funcline addr: 30236
funcline addr: 30240
funcline addr: 30244
funcline addr: 30248
funcline addr: 30252
funcline addr: 30256
funcline addr: 30260
funcline addr: 30264
funcline addr: 30268
funcline addr: 30272
funcline addr: 30276
funcline addr: 30280
funcline addr: 30284
funcline addr: 30288
funcline addr: 30292
funcline addr: 30296
funcline addr: 30300
funcline addr: 30304
funcline addr: 30308
funcline addr: 30312
funcline addr: 30316
funcline addr: 30320
funcline addr: 30324
funcline addr: 30328
funcline addr: 30332
funcline addr: 30336
funcline addr: 30340
funcline addr: 30344
['xcc_meminfo_record', 28260, 30216, 30344, ['                        else if(0 == strncmp(name, "/dev/ashmem/dalvik-CompilerMetadata", 35))']]
restartcode
['xcc_meminfo_record', 28260, 30344, 30344, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
code
funcline addr: 30348
funcline addr: 30352
funcline addr: 30356
funcline addr: 30360
funcline addr: 30364
funcline addr: 30368
funcline addr: 30372
funcline addr: 30376
funcline addr: 30380
['xcc_meminfo_record', 28260, 30344, 30380, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
restartcode
['xcc_meminfo_record', 28260, 30380, 30380, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
code
funcline addr: 30384
funcline addr: 30388
funcline addr: 30392
funcline addr: 30396
funcline addr: 30400
funcline addr: 30404
['xcc_meminfo_record', 28260, 30380, 30404, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
restartcode
['xcc_meminfo_record', 28260, 30404, 30404, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
code
funcline addr: 30408
funcline addr: 30412
funcline addr: 30416
funcline addr: 30420
funcline addr: 30424
funcline addr: 30428
funcline addr: 30432
funcline addr: 30436
funcline addr: 30440
funcline addr: 30444
funcline addr: 30448
funcline addr: 30452
funcline addr: 30456
['xcc_meminfo_record', 28260, 30404, 30456, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
restartcode
['xcc_meminfo_record', 28260, 30456, 30456, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
code
funcline addr: 30460
funcline addr: 30464
funcline addr: 30468
funcline addr: 30472
funcline addr: 30476
funcline addr: 30480
funcline addr: 30484
funcline addr: 30488
funcline addr: 30492
funcline addr: 30496
funcline addr: 30500
funcline addr: 30504
funcline addr: 30508
funcline addr: 30512
funcline addr: 30516
funcline addr: 30520
funcline addr: 30524
funcline addr: 30528
funcline addr: 30532
funcline addr: 30536
funcline addr: 30540
funcline addr: 30544
funcline addr: 30548
funcline addr: 30552
funcline addr: 30556
funcline addr: 30560
['xcc_meminfo_record', 28260, 30456, 30560, ['                if(NULL != strstr(name, "@boot") || NULL != strstr(name, "/boot"))']]
restartcode
['xcc_meminfo_record', 28260, 30560, 30560, ['    xcc_meminfo_load(fp, stats, &found_swap_pss);']]
code
['xcc_meminfo_record', 28260, 30560, 30560, ['    fclose(fp);']]
code
funcline addr: 30564
funcline addr: 30568
['xcc_meminfo_record', 28260, 30560, 30568, ['    fclose(fp);']]
restartcode
['xcc_meminfo_record', 28260, 30568, 30568, ['']]
code
['xcc_meminfo_record', 28260, 30568, 30568, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
code
['xcc_meminfo_record', 28260, 30568, 30568, ['    {']]
code
['xcc_meminfo_record', 28260, 30568, 30568, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
['xcc_meminfo_record', 28260, 30568, 30568, ['        total.swappable_pss += stats[i].swappable_pss;']]
code
funcline addr: 30572
['xcc_meminfo_record', 28260, 30568, 30572, ['        total.swappable_pss += stats[i].swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30572, 30572, ['        total.private_dirty += stats[i].private_dirty;']]
code
['xcc_meminfo_record', 28260, 30572, 30572, ['        total.shared_dirty += stats[i].shared_dirty;']]
code
funcline addr: 30576
['xcc_meminfo_record', 28260, 30572, 30576, ['        total.shared_dirty += stats[i].shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 30576, 30576, ['        total.private_clean += stats[i].private_clean;']]
code
['xcc_meminfo_record', 28260, 30576, 30576, ['        total.shared_clean += stats[i].shared_clean;']]
code
funcline addr: 30580
['xcc_meminfo_record', 28260, 30576, 30580, ['        total.shared_clean += stats[i].shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 30580, 30580, ['        total.swapped_out += stats[i].swapped_out;']]
code
['xcc_meminfo_record', 28260, 30580, 30580, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
code
funcline addr: 30584
funcline addr: 30588
funcline addr: 30592
['xcc_meminfo_record', 28260, 30580, 30592, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30592, 30592, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
code
funcline addr: 30596
funcline addr: 30600
funcline addr: 30604
['xcc_meminfo_record', 28260, 30592, 30604, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 30604, 30604, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
funcline addr: 30608
['xcc_meminfo_record', 28260, 30604, 30608, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
restartcode
['xcc_meminfo_record', 28260, 30608, 30608, ['        total.swappable_pss += stats[i].swappable_pss;']]
code
funcline addr: 30612
['xcc_meminfo_record', 28260, 30608, 30612, ['        total.swappable_pss += stats[i].swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30612, 30612, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
funcline addr: 30616
['xcc_meminfo_record', 28260, 30612, 30616, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
restartcode
['xcc_meminfo_record', 28260, 30616, 30616, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
code
funcline addr: 30620
['xcc_meminfo_record', 28260, 30616, 30620, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 30620, 30620, ['        total.swappable_pss += stats[i].swappable_pss;']]
code
funcline addr: 30624
['xcc_meminfo_record', 28260, 30620, 30624, ['        total.swappable_pss += stats[i].swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30624, 30624, ['        total.shared_dirty += stats[i].shared_dirty;']]
code
funcline addr: 30628
['xcc_meminfo_record', 28260, 30624, 30628, ['        total.shared_dirty += stats[i].shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 30628, 30628, ['        total.private_dirty += stats[i].private_dirty;']]
code
funcline addr: 30632
['xcc_meminfo_record', 28260, 30628, 30632, ['        total.private_dirty += stats[i].private_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 30632, 30632, ['        total.shared_clean += stats[i].shared_clean;']]
code
funcline addr: 30636
['xcc_meminfo_record', 28260, 30632, 30636, ['        total.shared_clean += stats[i].shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 30636, 30636, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
funcline addr: 30640
['xcc_meminfo_record', 28260, 30636, 30640, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
restartcode
['xcc_meminfo_record', 28260, 30640, 30640, ['        total.private_clean += stats[i].private_clean;']]
code
funcline addr: 30644
['xcc_meminfo_record', 28260, 30640, 30644, ['        total.private_clean += stats[i].private_clean;']]
restartcode
['xcc_meminfo_record', 28260, 30644, 30644, ['        total.shared_dirty += stats[i].shared_dirty;']]
code
funcline addr: 30648
['xcc_meminfo_record', 28260, 30644, 30648, ['        total.shared_dirty += stats[i].shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 30648, 30648, ['        total.shared_clean += stats[i].shared_clean;']]
code
funcline addr: 30652
['xcc_meminfo_record', 28260, 30648, 30652, ['        total.shared_clean += stats[i].shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 30652, 30652, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
funcline addr: 30656
['xcc_meminfo_record', 28260, 30652, 30656, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
restartcode
['xcc_meminfo_record', 28260, 30656, 30656, ['        total.swapped_out += stats[i].swapped_out;']]
code
funcline addr: 30660
['xcc_meminfo_record', 28260, 30656, 30660, ['        total.swapped_out += stats[i].swapped_out;']]
restartcode
['xcc_meminfo_record', 28260, 30660, 30660, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
code
funcline addr: 30664
['xcc_meminfo_record', 28260, 30660, 30664, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30664, 30664, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
code
funcline addr: 30668
funcline addr: 30672
['xcc_meminfo_record', 28260, 30664, 30672, ['        total.pss += (stats[i].pss + stats[i].swapped_out_pss);']]
restartcode
['xcc_meminfo_record', 28260, 30672, 30672, ['    }']]
code
['xcc_meminfo_record', 28260, 30672, 30672, ['']]
code
['xcc_meminfo_record', 28260, 30672, 30672, ['    //dump']]
code
['xcc_meminfo_record', 28260, 30672, 30672, ['    if(0 != (r = xcc_util_write_str(log_fd, "memory info:\\n"))) return r;']]
code
funcline addr: 30676
funcline addr: 30680
funcline addr: 30684
['xcc_meminfo_record', 28260, 30672, 30684, ['    if(0 != (r = xcc_util_write_str(log_fd, "memory info:\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30684, 30684, ['        total.swappable_pss += stats[i].swappable_pss;']]
code
funcline addr: 30688
['xcc_meminfo_record', 28260, 30684, 30688, ['        total.swappable_pss += stats[i].swappable_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30688, 30688, ['        total.shared_dirty += stats[i].shared_dirty;']]
code
funcline addr: 30692
['xcc_meminfo_record', 28260, 30688, 30692, ['        total.shared_dirty += stats[i].shared_dirty;']]
restartcode
['xcc_meminfo_record', 28260, 30692, 30692, ['        total.shared_clean += stats[i].shared_clean;']]
code
funcline addr: 30696
['xcc_meminfo_record', 28260, 30692, 30696, ['        total.shared_clean += stats[i].shared_clean;']]
restartcode
['xcc_meminfo_record', 28260, 30696, 30696, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
code
funcline addr: 30700
['xcc_meminfo_record', 28260, 30696, 30700, ['        total.swapped_out_pss += stats[i].swapped_out_pss;']]
restartcode
['xcc_meminfo_record', 28260, 30700, 30700, ['    if(0 != (r = xcc_util_write_str(log_fd, "memory info:\\n"))) return r;']]
code
funcline addr: 30704
funcline addr: 30708
['xcc_meminfo_record', 28260, 30700, 30708, ['    if(0 != (r = xcc_util_write_str(log_fd, "memory info:\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30708, 30708, ['    return xcc_util_record_sub_section_from(log_fd, "/proc/meminfo", " System Summary (From: /proc/meminfo)\\n", 0);']]
code
funcline addr: 30712
funcline addr: 30716
funcline addr: 30720
funcline addr: 30724
funcline addr: 30728
['xcc_meminfo_record', 28260, 30708, 30728, ['    return xcc_util_record_sub_section_from(log_fd, "/proc/meminfo", " System Summary (From: /proc/meminfo)\\n", 0);']]
restartcode
['xcc_meminfo_record', 28260, 30728, 30728, ['    if(0 != (r = xcc_meminfo_record_sys(log_fd))) return r;']]
code
funcline addr: 30732
funcline addr: 30736
['xcc_meminfo_record', 28260, 30728, 30736, ['    if(0 != (r = xcc_meminfo_record_sys(log_fd))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30736, 30736, ['    snprintf(path, sizeof(path), "/proc/%d/status", pid);']]
code
funcline addr: 30740
funcline addr: 30744
funcline addr: 30748
funcline addr: 30752
['xcc_meminfo_record', 28260, 30736, 30752, ['    snprintf(path, sizeof(path), "/proc/%d/status", pid);']]
restartcode
['xcc_meminfo_record', 28260, 30752, 30752, ['    return xcc_util_record_sub_section_from(log_fd, path, " Process Status (From: /proc/PID/status)\\n", 0);']]
code
funcline addr: 30756
funcline addr: 30760
funcline addr: 30764
funcline addr: 30768
['xcc_meminfo_record', 28260, 30752, 30768, ['    return xcc_util_record_sub_section_from(log_fd, path, " Process Status (From: /proc/PID/status)\\n", 0);']]
restartcode
['xcc_meminfo_record', 28260, 30768, 30768, ['    if(0 != (r = xcc_meminfo_record_proc_status(log_fd, pid))) return r;']]
code
funcline addr: 30772
funcline addr: 30776
['xcc_meminfo_record', 28260, 30768, 30776, ['    if(0 != (r = xcc_meminfo_record_proc_status(log_fd, pid))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30776, 30776, ['    snprintf(path, sizeof(path), "/proc/%d/limits", pid);']]
code
funcline addr: 30780
funcline addr: 30784
funcline addr: 30788
funcline addr: 30792
['xcc_meminfo_record', 28260, 30776, 30792, ['    snprintf(path, sizeof(path), "/proc/%d/limits", pid);']]
restartcode
['xcc_meminfo_record', 28260, 30792, 30792, ['    return xcc_util_record_sub_section_from(log_fd, path, " Process Limits (From: /proc/PID/limits)\\n", 0);']]
code
funcline addr: 30796
funcline addr: 30800
funcline addr: 30804
funcline addr: 30808
['xcc_meminfo_record', 28260, 30792, 30808, ['    return xcc_util_record_sub_section_from(log_fd, path, " Process Limits (From: /proc/PID/limits)\\n", 0);']]
restartcode
['xcc_meminfo_record', 28260, 30808, 30808, ['    if(0 != (r = xcc_meminfo_record_proc_limits(log_fd, pid))) return r;']]
code
funcline addr: 30812
['xcc_meminfo_record', 28260, 30808, 30812, ['    if(0 != (r = xcc_meminfo_record_proc_limits(log_fd, pid))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30812, 30812, ['    if(0 != (r = xcc_util_write_str(log_fd, " Process Details (From: /proc/PID/smaps)\\n"))) return r;']]
code
funcline addr: 30816
funcline addr: 30820
funcline addr: 30824
funcline addr: 30828
funcline addr: 30832
['xcc_meminfo_record', 28260, 30812, 30832, ['    if(0 != (r = xcc_util_write_str(log_fd, " Process Details (From: /proc/PID/smaps)\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30832, 30832, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "Pss", "Pss", "Shared", "Private", "Shared", "Private", found_swap_pss ? "SwapPss" : "Swap"))) return r;']]
code
funcline addr: 30836
funcline addr: 30840
funcline addr: 30844
funcline addr: 30848
funcline addr: 30852
funcline addr: 30856
funcline addr: 30860
funcline addr: 30864
funcline addr: 30868
funcline addr: 30872
funcline addr: 30876
funcline addr: 30880
funcline addr: 30884
funcline addr: 30888
funcline addr: 30892
funcline addr: 30896
funcline addr: 30900
funcline addr: 30904
funcline addr: 30908
['xcc_meminfo_record', 28260, 30832, 30908, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "Pss", "Pss", "Shared", "Private", "Shared", "Private", found_swap_pss ? "SwapPss" : "Swap"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30908, 30908, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "Total", "Clean", "Dirty", "Dirty", "Clean", "Clean", "Dirty"))) return r;']]
code
funcline addr: 30912
funcline addr: 30916
funcline addr: 30920
funcline addr: 30924
funcline addr: 30928
funcline addr: 30932
funcline addr: 30936
funcline addr: 30940
funcline addr: 30944
funcline addr: 30948
funcline addr: 30952
funcline addr: 30956
funcline addr: 30960
funcline addr: 30964
funcline addr: 30968
funcline addr: 30972
['xcc_meminfo_record', 28260, 30908, 30972, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "Total", "Clean", "Dirty", "Dirty", "Clean", "Clean", "Dirty"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 30972, 30972, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "------", "------", "------", "------", "------", "------", "------"))) return r;']]
code
funcline addr: 30976
funcline addr: 30980
funcline addr: 30984
funcline addr: 30988
funcline addr: 30992
funcline addr: 30996
funcline addr: 31000
funcline addr: 31004
funcline addr: 31008
funcline addr: 31012
funcline addr: 31016
funcline addr: 31020
funcline addr: 31024
funcline addr: 31028
funcline addr: 31032
['xcc_meminfo_record', 28260, 30972, 31032, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_HEAD_FMT, "", "------", "------", "------", "------", "------", "------", "------"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31032, 31032, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
code
funcline addr: 31036
funcline addr: 31040
funcline addr: 31044
funcline addr: 31048
funcline addr: 31052
['xcc_meminfo_record', 28260, 31032, 31052, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 31052, 31052, ['        if(HEAP_NATIVE == i || HEAP_DALVIK == i || HEAP_UNKNOWN == i ||']]
code
['xcc_meminfo_record', 28260, 31052, 31052, ['           0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
code
['xcc_meminfo_record', 28260, 31052, 31052, ['           0 != stats[i].private_dirty || 0 != stats[i].shared_clean || 0 != stats[i].private_clean ||']]
code
['xcc_meminfo_record', 28260, 31052, 31052, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
code
['xcc_meminfo_record', 28260, 31052, 31052, ['        {']]
code
['xcc_meminfo_record', 28260, 31052, 31052, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31056
['xcc_meminfo_record', 28260, 31052, 31056, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               stats[i].swappable_pss,']]
code
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               stats[i].shared_dirty,']]
code
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               stats[i].private_dirty,']]
code
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               stats[i].shared_clean,']]
code
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               stats[i].private_clean,']]
code
['xcc_meminfo_record', 28260, 31056, 31056, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31060
['xcc_meminfo_record', 28260, 31056, 31060, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31060, 31060, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31064
['xcc_meminfo_record', 28260, 31060, 31064, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31064, 31064, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31068
funcline addr: 31072
['xcc_meminfo_record', 28260, 31064, 31072, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31072, 31072, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31076
['xcc_meminfo_record', 28260, 31072, 31076, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31076, 31076, ['                                               stats[i].pss,']]
code
funcline addr: 31080
['xcc_meminfo_record', 28260, 31076, 31080, ['                                               stats[i].pss,']]
restartcode
['xcc_meminfo_record', 28260, 31080, 31080, ['                                               stats[i].private_dirty,']]
code
funcline addr: 31084
['xcc_meminfo_record', 28260, 31080, 31084, ['                                               stats[i].private_dirty,']]
restartcode
['xcc_meminfo_record', 28260, 31084, 31084, ['                                               stats[i].private_clean,']]
code
funcline addr: 31088
['xcc_meminfo_record', 28260, 31084, 31088, ['                                               stats[i].private_clean,']]
restartcode
['xcc_meminfo_record', 28260, 31088, 31088, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31092
funcline addr: 31096
['xcc_meminfo_record', 28260, 31088, 31096, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31096, 31096, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31100
funcline addr: 31104
funcline addr: 31108
funcline addr: 31112
funcline addr: 31116
['xcc_meminfo_record', 28260, 31096, 31116, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31116, 31116, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
code
funcline addr: 31120
funcline addr: 31124
funcline addr: 31128
funcline addr: 31132
funcline addr: 31136
['xcc_meminfo_record', 28260, 31116, 31136, ['    for(i = 0; i < _NUM_EXCLUSIVE_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 31136, 31136, ['           0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
code
funcline addr: 31140
funcline addr: 31144
funcline addr: 31148
funcline addr: 31152
funcline addr: 31156
funcline addr: 31160
['xcc_meminfo_record', 28260, 31136, 31160, ['           0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
restartcode
['xcc_meminfo_record', 28260, 31160, 31160, ['           0 != stats[i].private_dirty || 0 != stats[i].shared_clean || 0 != stats[i].private_clean ||']]
code
funcline addr: 31164
funcline addr: 31168
funcline addr: 31172
funcline addr: 31176
funcline addr: 31180
funcline addr: 31184
funcline addr: 31188
['xcc_meminfo_record', 28260, 31160, 31188, ['           0 != stats[i].private_dirty || 0 != stats[i].shared_clean || 0 != stats[i].private_clean ||']]
restartcode
['xcc_meminfo_record', 28260, 31188, 31188, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
code
funcline addr: 31192
funcline addr: 31196
funcline addr: 31200
funcline addr: 31204
['xcc_meminfo_record', 28260, 31188, 31204, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
restartcode
['xcc_meminfo_record', 28260, 31204, 31204, ['        if(HEAP_NATIVE == i || HEAP_DALVIK == i || HEAP_UNKNOWN == i ||']]
code
funcline addr: 31208
funcline addr: 31212
funcline addr: 31216
funcline addr: 31220
['xcc_meminfo_record', 28260, 31204, 31220, ['        if(HEAP_NATIVE == i || HEAP_DALVIK == i || HEAP_UNKNOWN == i ||']]
restartcode
['xcc_meminfo_record', 28260, 31220, 31220, ['        }']]
code
['xcc_meminfo_record', 28260, 31220, 31220, ['    }']]
code
['xcc_meminfo_record', 28260, 31220, 31220, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, "TOTAL",']]
code
funcline addr: 31224
funcline addr: 31228
['xcc_meminfo_record', 28260, 31220, 31228, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, "TOTAL",']]
restartcode
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       total.swappable_pss,']]
code
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       total.shared_dirty,']]
code
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       total.private_dirty,']]
code
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       total.shared_clean,']]
code
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       total.private_clean,']]
code
['xcc_meminfo_record', 28260, 31228, 31228, ['                                       found_swap_pss ? total.swapped_out_pss : total.swapped_out))) return r;']]
code
funcline addr: 31232
funcline addr: 31236
['xcc_meminfo_record', 28260, 31228, 31236, ['                                       found_swap_pss ? total.swapped_out_pss : total.swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31236, 31236, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, "TOTAL",']]
code
funcline addr: 31240
funcline addr: 31244
funcline addr: 31248
funcline addr: 31252
funcline addr: 31256
funcline addr: 31260
funcline addr: 31264
funcline addr: 31268
funcline addr: 31272
funcline addr: 31276
funcline addr: 31280
funcline addr: 31284
['xcc_meminfo_record', 28260, 31236, 31284, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, "TOTAL",']]
restartcode
['xcc_meminfo_record', 28260, 31284, 31284, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n Process Dalvik Details (From: /proc/PID/smaps)\\n"))) return r;']]
code
funcline addr: 31288
funcline addr: 31292
funcline addr: 31296
funcline addr: 31300
funcline addr: 31304
funcline addr: 31308
funcline addr: 31312
['xcc_meminfo_record', 28260, 31284, 31312, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n Process Dalvik Details (From: /proc/PID/smaps)\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31312, 31312, ['    for(i = _NUM_EXCLUSIVE_HEAP; i < _NUM_HEAP; i++)']]
code
funcline addr: 31316
funcline addr: 31320
funcline addr: 31324
funcline addr: 31328
['xcc_meminfo_record', 28260, 31312, 31328, ['    for(i = _NUM_EXCLUSIVE_HEAP; i < _NUM_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 31328, 31328, ['    {']]
code
['xcc_meminfo_record', 28260, 31328, 31328, ['        if(0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
code
funcline addr: 31332
funcline addr: 31336
funcline addr: 31340
funcline addr: 31344
funcline addr: 31348
['xcc_meminfo_record', 28260, 31328, 31348, ['        if(0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
restartcode
['xcc_meminfo_record', 28260, 31348, 31348, ['           0 != stats[i].private_dirty || 0 != stats[i].shared_clean || 0 != stats[i].private_clean ||']]
code
funcline addr: 31352
funcline addr: 31356
funcline addr: 31360
funcline addr: 31364
funcline addr: 31368
funcline addr: 31372
funcline addr: 31376
['xcc_meminfo_record', 28260, 31348, 31376, ['           0 != stats[i].private_dirty || 0 != stats[i].shared_clean || 0 != stats[i].private_clean ||']]
restartcode
['xcc_meminfo_record', 28260, 31376, 31376, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
code
['xcc_meminfo_record', 28260, 31376, 31376, ['        {']]
code
['xcc_meminfo_record', 28260, 31376, 31376, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
['xcc_meminfo_record', 28260, 31376, 31376, ['                                               stats[i].pss,']]
code
['xcc_meminfo_record', 28260, 31376, 31376, ['                                               stats[i].swappable_pss,']]
code
['xcc_meminfo_record', 28260, 31376, 31376, ['                                               stats[i].shared_dirty,']]
code
funcline addr: 31380
['xcc_meminfo_record', 28260, 31376, 31380, ['                                               stats[i].shared_dirty,']]
restartcode
['xcc_meminfo_record', 28260, 31380, 31380, ['                                               stats[i].swappable_pss,']]
code
funcline addr: 31384
funcline addr: 31388
['xcc_meminfo_record', 28260, 31380, 31388, ['                                               stats[i].swappable_pss,']]
restartcode
['xcc_meminfo_record', 28260, 31388, 31388, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31392
funcline addr: 31396
funcline addr: 31400
['xcc_meminfo_record', 28260, 31388, 31400, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31400, 31400, ['                                               stats[i].private_dirty,']]
code
['xcc_meminfo_record', 28260, 31400, 31400, ['                                               stats[i].shared_clean,']]
code
['xcc_meminfo_record', 28260, 31400, 31400, ['                                               stats[i].private_clean,']]
code
['xcc_meminfo_record', 28260, 31400, 31400, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31404
funcline addr: 31408
['xcc_meminfo_record', 28260, 31400, 31408, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31408, 31408, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31412
['xcc_meminfo_record', 28260, 31408, 31412, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31412, 31412, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31416
['xcc_meminfo_record', 28260, 31412, 31416, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31416, 31416, ['                                               stats[i].private_dirty,']]
code
funcline addr: 31420
['xcc_meminfo_record', 28260, 31416, 31420, ['                                               stats[i].private_dirty,']]
restartcode
['xcc_meminfo_record', 28260, 31420, 31420, ['                                               stats[i].private_clean,']]
code
funcline addr: 31424
['xcc_meminfo_record', 28260, 31420, 31424, ['                                               stats[i].private_clean,']]
restartcode
['xcc_meminfo_record', 28260, 31424, 31424, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
code
funcline addr: 31428
['xcc_meminfo_record', 28260, 31424, 31428, ['                                               found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31428, 31428, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
code
funcline addr: 31432
funcline addr: 31436
funcline addr: 31440
funcline addr: 31444
funcline addr: 31448
['xcc_meminfo_record', 28260, 31428, 31448, ['            if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_DATA_FMT, xcc_meminfo_label[i],']]
restartcode
['xcc_meminfo_record', 28260, 31448, 31448, ['    for(i = _NUM_EXCLUSIVE_HEAP; i < _NUM_HEAP; i++)']]
code
funcline addr: 31452
funcline addr: 31456
funcline addr: 31460
funcline addr: 31464
['xcc_meminfo_record', 28260, 31448, 31464, ['    for(i = _NUM_EXCLUSIVE_HEAP; i < _NUM_HEAP; i++)']]
restartcode
['xcc_meminfo_record', 28260, 31464, 31464, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
code
funcline addr: 31468
funcline addr: 31472
funcline addr: 31476
funcline addr: 31480
funcline addr: 31484
['xcc_meminfo_record', 28260, 31464, 31484, ['           0 != (found_swap_pss ? stats[i].swapped_out_pss : stats[i].swapped_out))']]
restartcode
['xcc_meminfo_record', 28260, 31484, 31484, ['        if(0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
code
funcline addr: 31488
funcline addr: 31492
funcline addr: 31496
funcline addr: 31500
funcline addr: 31504
funcline addr: 31508
['xcc_meminfo_record', 28260, 31484, 31508, ['        if(0 != stats[i].pss || 0 != stats[i].swappable_pss || 0 != stats[i].shared_dirty ||']]
restartcode
['xcc_meminfo_record', 28260, 31508, 31508, ['                                           total.swapped_out))) return r;']]
code
['xcc_meminfo_record', 28260, 31508, 31508, ['    }']]
code
['xcc_meminfo_record', 28260, 31508, 31508, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n\\n"))) return r;']]
code
['xcc_meminfo_record', 28260, 31508, 31508, ['    ']]
code
['xcc_meminfo_record', 28260, 31508, 31508, ['    return 0;']]
code
['xcc_meminfo_record', 28260, 31508, 31508, ['}']]
code
funcline addr: 31512
funcline addr: 31516
funcline addr: 31520
['xcc_meminfo_record', 28260, 31508, 31520, ['}']]
restartcode
['xcc_meminfo_record', 28260, 31520, 31520, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n Process Summary (From: /proc/PID/smaps)\\n"))) return r;']]
code
funcline addr: 31524
funcline addr: 31528
funcline addr: 31532
funcline addr: 31536
funcline addr: 31540
['xcc_meminfo_record', 28260, 31520, 31540, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n Process Summary (From: /proc/PID/smaps)\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31540, 31540, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_HEAD_FMT, "", "Pss(KB)"))) return r;']]
code
funcline addr: 31544
funcline addr: 31548
funcline addr: 31552
funcline addr: 31556
funcline addr: 31560
funcline addr: 31564
funcline addr: 31568
funcline addr: 31572
['xcc_meminfo_record', 28260, 31540, 31572, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_HEAD_FMT, "", "Pss(KB)"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31572, 31572, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_HEAD_FMT, "", "------"))) return r;']]
code
funcline addr: 31576
funcline addr: 31580
funcline addr: 31584
funcline addr: 31588
funcline addr: 31592
funcline addr: 31596
funcline addr: 31600
funcline addr: 31604
['xcc_meminfo_record', 28260, 31572, 31604, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_HEAD_FMT, "", "------"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31604, 31604, ['                                       stats[HEAP_DALVIK].private_dirty +']]
code
funcline addr: 31608
['xcc_meminfo_record', 28260, 31604, 31608, ['                                       stats[HEAP_DALVIK].private_dirty +']]
restartcode
['xcc_meminfo_record', 28260, 31608, 31608, ['                                       stats[HEAP_ART].private_dirty + stats[HEAP_ART].private_clean))) return r;']]
code
funcline addr: 31612
funcline addr: 31616
['xcc_meminfo_record', 28260, 31608, 31616, ['                                       stats[HEAP_ART].private_dirty + stats[HEAP_ART].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31616, 31616, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Java Heap:",']]
code
funcline addr: 31620
funcline addr: 31624
['xcc_meminfo_record', 28260, 31616, 31624, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Java Heap:",']]
restartcode
['xcc_meminfo_record', 28260, 31624, 31624, ['                                       stats[HEAP_DALVIK].private_dirty +']]
code
funcline addr: 31628
['xcc_meminfo_record', 28260, 31624, 31628, ['                                       stats[HEAP_DALVIK].private_dirty +']]
restartcode
['xcc_meminfo_record', 28260, 31628, 31628, ['                                       stats[HEAP_ART].private_dirty + stats[HEAP_ART].private_clean))) return r;']]
code
funcline addr: 31632
['xcc_meminfo_record', 28260, 31628, 31632, ['                                       stats[HEAP_ART].private_dirty + stats[HEAP_ART].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31632, 31632, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Java Heap:",']]
code
funcline addr: 31636
funcline addr: 31640
funcline addr: 31644
funcline addr: 31648
['xcc_meminfo_record', 28260, 31632, 31648, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Java Heap:",']]
restartcode
['xcc_meminfo_record', 28260, 31648, 31648, ['                                       stats[HEAP_NATIVE].private_dirty))) return r;']]
code
funcline addr: 31652
['xcc_meminfo_record', 28260, 31648, 31652, ['                                       stats[HEAP_NATIVE].private_dirty))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31652, 31652, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Native Heap:",']]
code
funcline addr: 31656
funcline addr: 31660
funcline addr: 31664
funcline addr: 31668
funcline addr: 31672
funcline addr: 31676
['xcc_meminfo_record', 28260, 31652, 31676, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Native Heap:",']]
restartcode
['xcc_meminfo_record', 28260, 31676, 31676, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
code
funcline addr: 31680
funcline addr: 31684
['xcc_meminfo_record', 28260, 31676, 31684, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31684, 31684, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
code
funcline addr: 31688
funcline addr: 31692
['xcc_meminfo_record', 28260, 31684, 31692, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31692, 31692, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
code
funcline addr: 31696
['xcc_meminfo_record', 28260, 31692, 31696, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31696, 31696, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
code
funcline addr: 31700
['xcc_meminfo_record', 28260, 31696, 31700, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31700, 31700, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
code
funcline addr: 31704
['xcc_meminfo_record', 28260, 31700, 31704, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31704, 31704, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
code
funcline addr: 31708
['xcc_meminfo_record', 28260, 31704, 31708, ['                                       stats[HEAP_SO].private_dirty + stats[HEAP_SO].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31708, 31708, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
code
funcline addr: 31712
['xcc_meminfo_record', 28260, 31708, 31712, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31712, 31712, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
code
funcline addr: 31716
['xcc_meminfo_record', 28260, 31712, 31716, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31716, 31716, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
code
funcline addr: 31720
['xcc_meminfo_record', 28260, 31716, 31720, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31720, 31720, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
code
funcline addr: 31724
['xcc_meminfo_record', 28260, 31720, 31724, ['                                       stats[HEAP_JAR].private_dirty + stats[HEAP_JAR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31724, 31724, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
code
funcline addr: 31728
['xcc_meminfo_record', 28260, 31724, 31728, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31728, 31728, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
code
funcline addr: 31732
['xcc_meminfo_record', 28260, 31728, 31732, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31732, 31732, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
code
funcline addr: 31736
['xcc_meminfo_record', 28260, 31732, 31736, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31736, 31736, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
code
funcline addr: 31740
['xcc_meminfo_record', 28260, 31736, 31740, ['                                       stats[HEAP_APK].private_dirty + stats[HEAP_APK].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31740, 31740, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
code
funcline addr: 31744
['xcc_meminfo_record', 28260, 31740, 31744, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31744, 31744, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
code
funcline addr: 31748
['xcc_meminfo_record', 28260, 31744, 31748, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31748, 31748, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
code
funcline addr: 31752
['xcc_meminfo_record', 28260, 31748, 31752, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31752, 31752, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
code
funcline addr: 31756
['xcc_meminfo_record', 28260, 31752, 31756, ['                                       stats[HEAP_TTF].private_dirty + stats[HEAP_TTF].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31756, 31756, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
code
funcline addr: 31760
funcline addr: 31764
['xcc_meminfo_record', 28260, 31756, 31764, ['                                       stats[HEAP_DEX].private_dirty + stats[HEAP_DEX].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31764, 31764, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Code:",']]
code
funcline addr: 31768
funcline addr: 31772
['xcc_meminfo_record', 28260, 31764, 31772, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Code:",']]
restartcode
['xcc_meminfo_record', 28260, 31772, 31772, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
code
funcline addr: 31776
['xcc_meminfo_record', 28260, 31772, 31776, ['                                       stats[HEAP_OAT].private_dirty + stats[HEAP_OAT].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31776, 31776, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Code:",']]
code
funcline addr: 31780
funcline addr: 31784
funcline addr: 31788
funcline addr: 31792
['xcc_meminfo_record', 28260, 31776, 31792, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Code:",']]
restartcode
['xcc_meminfo_record', 28260, 31792, 31792, ['                                       stats[HEAP_STACK].private_dirty))) return r;']]
code
funcline addr: 31796
['xcc_meminfo_record', 28260, 31792, 31796, ['                                       stats[HEAP_STACK].private_dirty))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31796, 31796, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Stack:",']]
code
funcline addr: 31800
funcline addr: 31804
funcline addr: 31808
funcline addr: 31812
funcline addr: 31816
funcline addr: 31820
['xcc_meminfo_record', 28260, 31796, 31820, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Stack:",']]
restartcode
['xcc_meminfo_record', 28260, 31820, 31820, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
code
funcline addr: 31824
funcline addr: 31828
['xcc_meminfo_record', 28260, 31820, 31828, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31828, 31828, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
code
funcline addr: 31832
funcline addr: 31836
['xcc_meminfo_record', 28260, 31828, 31836, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31836, 31836, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
code
funcline addr: 31840
['xcc_meminfo_record', 28260, 31836, 31840, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31840, 31840, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
code
funcline addr: 31844
['xcc_meminfo_record', 28260, 31840, 31844, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31844, 31844, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
code
funcline addr: 31848
['xcc_meminfo_record', 28260, 31844, 31848, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31848, 31848, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
code
funcline addr: 31852
['xcc_meminfo_record', 28260, 31848, 31852, ['                                       stats[HEAP_DALVIK_OTHER].private_dirty + stats[HEAP_DALVIK_OTHER].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31852, 31852, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
code
funcline addr: 31856
['xcc_meminfo_record', 28260, 31852, 31856, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31856, 31856, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
code
funcline addr: 31860
['xcc_meminfo_record', 28260, 31856, 31860, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31860, 31860, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
code
funcline addr: 31864
['xcc_meminfo_record', 28260, 31860, 31864, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31864, 31864, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
code
funcline addr: 31868
['xcc_meminfo_record', 28260, 31864, 31868, ['                                       stats[HEAP_CURSOR].private_dirty + stats[HEAP_CURSOR].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31868, 31868, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
code
funcline addr: 31872
['xcc_meminfo_record', 28260, 31868, 31872, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31872, 31872, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
code
funcline addr: 31876
['xcc_meminfo_record', 28260, 31872, 31876, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31876, 31876, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
code
funcline addr: 31880
['xcc_meminfo_record', 28260, 31876, 31880, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31880, 31880, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
code
funcline addr: 31884
['xcc_meminfo_record', 28260, 31880, 31884, ['                                       stats[HEAP_ASHMEM].private_dirty + stats[HEAP_ASHMEM].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31884, 31884, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
code
funcline addr: 31888
['xcc_meminfo_record', 28260, 31884, 31888, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31888, 31888, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
code
funcline addr: 31892
['xcc_meminfo_record', 28260, 31888, 31892, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31892, 31892, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
code
funcline addr: 31896
['xcc_meminfo_record', 28260, 31892, 31896, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31896, 31896, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
code
funcline addr: 31900
['xcc_meminfo_record', 28260, 31896, 31900, ['                                       stats[HEAP_GL_DEV].private_dirty + stats[HEAP_GL_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31900, 31900, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
code
funcline addr: 31904
['xcc_meminfo_record', 28260, 31900, 31904, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31904, 31904, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
code
funcline addr: 31908
['xcc_meminfo_record', 28260, 31904, 31908, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31908, 31908, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
code
funcline addr: 31912
['xcc_meminfo_record', 28260, 31908, 31912, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31912, 31912, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
code
funcline addr: 31916
['xcc_meminfo_record', 28260, 31912, 31916, ['                                       stats[HEAP_UNKNOWN_DEV].private_dirty + stats[HEAP_UNKNOWN_DEV].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31916, 31916, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
code
funcline addr: 31920
funcline addr: 31924
['xcc_meminfo_record', 28260, 31916, 31924, ['                                       stats[HEAP_UNKNOWN_MAP].private_dirty + stats[HEAP_UNKNOWN_MAP].private_clean +']]
restartcode
['xcc_meminfo_record', 28260, 31924, 31924, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Private Other:", ']]
code
funcline addr: 31928
funcline addr: 31932
['xcc_meminfo_record', 28260, 31924, 31932, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Private Other:", ']]
restartcode
['xcc_meminfo_record', 28260, 31932, 31932, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
code
funcline addr: 31936
['xcc_meminfo_record', 28260, 31932, 31936, ['                                       stats[HEAP_UNKNOWN].private_dirty + stats[HEAP_UNKNOWN].private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31936, 31936, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Private Other:", ']]
code
funcline addr: 31940
funcline addr: 31944
funcline addr: 31948
funcline addr: 31952
['xcc_meminfo_record', 28260, 31936, 31952, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "Private Other:", ']]
restartcode
['xcc_meminfo_record', 28260, 31952, 31952, ['                                       total.pss - total.private_dirty - total.private_clean))) return r;']]
code
funcline addr: 31956
['xcc_meminfo_record', 28260, 31952, 31956, ['                                       total.pss - total.private_dirty - total.private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31956, 31956, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "System:",']]
code
funcline addr: 31960
funcline addr: 31964
['xcc_meminfo_record', 28260, 31956, 31964, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "System:",']]
restartcode
['xcc_meminfo_record', 28260, 31964, 31964, ['                                       total.pss - total.private_dirty - total.private_clean))) return r;']]
code
funcline addr: 31968
['xcc_meminfo_record', 28260, 31964, 31968, ['                                       total.pss - total.private_dirty - total.private_clean))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 31968, 31968, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "System:",']]
code
funcline addr: 31972
funcline addr: 31976
funcline addr: 31980
funcline addr: 31984
funcline addr: 31988
['xcc_meminfo_record', 28260, 31968, 31988, ['    if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA_FMT, "System:",']]
restartcode
['xcc_meminfo_record', 28260, 31988, 31988, ['    if(found_swap_pss)']]
code
funcline addr: 31992
funcline addr: 31996
['xcc_meminfo_record', 28260, 31988, 31996, ['    if(found_swap_pss)']]
restartcode
['xcc_meminfo_record', 28260, 31996, 31996, ['        if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA2_FMT,']]
code
funcline addr: 32000
funcline addr: 32004
funcline addr: 32008
funcline addr: 32012
funcline addr: 32016
funcline addr: 32020
funcline addr: 32024
funcline addr: 32028
funcline addr: 32032
funcline addr: 32036
funcline addr: 32040
funcline addr: 32044
['xcc_meminfo_record', 28260, 31996, 32044, ['        if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA2_FMT,']]
restartcode
['xcc_meminfo_record', 28260, 32044, 32044, ['        if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA2_FMT,']]
code
funcline addr: 32048
funcline addr: 32052
funcline addr: 32056
funcline addr: 32060
funcline addr: 32064
funcline addr: 32068
funcline addr: 32072
funcline addr: 32076
funcline addr: 32080
funcline addr: 32084
funcline addr: 32088
funcline addr: 32092
['xcc_meminfo_record', 28260, 32044, 32092, ['        if(0 != (r = xcc_util_write_format(log_fd, XCC_MEMINFO_SUM_DATA2_FMT,']]
restartcode
['xcc_meminfo_record', 28260, 32092, 32092, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n\\n"))) return r;']]
code
funcline addr: 32096
funcline addr: 32100
funcline addr: 32104
funcline addr: 32108
funcline addr: 32112
['xcc_meminfo_record', 28260, 32092, 32112, ['    if(0 != (r = xcc_util_write_str(log_fd, "-\\n\\n"))) return r;']]
restartcode
['xcc_meminfo_record', 28260, 32112, 32112, ['']]
code
funchead startaddr: 0000000000007d74,funcname: _ZL8snprintfPcU17pass_object_size1mPKcz.122
['_ZL8snprintfPcU17pass_object_size1mPKcz.122', 32116, 32116, 32116, ['        __overloadable {']]
code
funcline addr: 32116
funcline addr: 32120
funcline addr: 32124
funcline addr: 32128
funcline addr: 32132
funcline addr: 32136
['_ZL8snprintfPcU17pass_object_size1mPKcz.122', 32116, 32116, 32136, ['        __overloadable {']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz.122', 32116, 32136, 32136, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
code
funcline addr: 32140
funcline addr: 32144
funcline addr: 32148
funcline addr: 32152
funcline addr: 32156
funcline addr: 32160
funcline addr: 32164
funcline addr: 32168
funcline addr: 32172
['_ZL8snprintfPcU17pass_object_size1mPKcz.122', 32116, 32136, 32172, ['    int result = __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, va);']]
restartcode
['_ZL8snprintfPcU17pass_object_size1mPKcz.122', 32116, 32172, 32172, ['']]
code
funchead startaddr: 0000000000007db0,funcname: xcc_unwind_clang_callback
['xcc_unwind_clang_callback', 32176, 32176, 32176, ['{']]
code
funcline addr: 32176
funcline addr: 32180
funcline addr: 32184
funcline addr: 32188
funcline addr: 32192
funcline addr: 32196
['xcc_unwind_clang_callback', 32176, 32176, 32196, ['{']]
restartcode
['xcc_unwind_clang_callback', 32176, 32196, 32196, ['    uintptr_t pc = _Unwind_GetIP(unw_ctx);']]
code
funcline addr: 32200
funcline addr: 32204
['xcc_unwind_clang_callback', 32176, 32196, 32204, ['    uintptr_t pc = _Unwind_GetIP(unw_ctx);']]
restartcode
['xcc_unwind_clang_callback', 32176, 32204, 32204, ['    uintptr_t sp = _Unwind_GetCFA(unw_ctx);']]
code
funcline addr: 32208
funcline addr: 32212
['xcc_unwind_clang_callback', 32176, 32204, 32212, ['    uintptr_t sp = _Unwind_GetCFA(unw_ctx);']]
restartcode
['xcc_unwind_clang_callback', 32176, 32212, 32212, ['    if(0 == self->found_sig_pc)']]
code
funcline addr: 32216
['xcc_unwind_clang_callback', 32176, 32212, 32216, ['    if(0 == self->found_sig_pc)']]
restartcode
['xcc_unwind_clang_callback', 32176, 32216, 32216, ['    uintptr_t sp = _Unwind_GetCFA(unw_ctx);']]
code
funcline addr: 32220
['xcc_unwind_clang_callback', 32176, 32216, 32220, ['    uintptr_t sp = _Unwind_GetCFA(unw_ctx);']]
restartcode
['xcc_unwind_clang_callback', 32176, 32220, 32220, ['    if(0 == self->found_sig_pc)']]
code
funcline addr: 32224
['xcc_unwind_clang_callback', 32176, 32220, 32224, ['    if(0 == self->found_sig_pc)']]
restartcode
['xcc_unwind_clang_callback', 32176, 32224, 32224, ['        if((self->sig_pc >= sizeof(uintptr_t) && pc <= self->sig_pc + sizeof(uintptr_t) && pc >= self->sig_pc - sizeof(uintptr_t)) ||']]
code
funcline addr: 32228
funcline addr: 32232
funcline addr: 32236
['xcc_unwind_clang_callback', 32176, 32224, 32236, ['        if((self->sig_pc >= sizeof(uintptr_t) && pc <= self->sig_pc + sizeof(uintptr_t) && pc >= self->sig_pc - sizeof(uintptr_t)) ||']]
restartcode
['xcc_unwind_clang_callback', 32176, 32236, 32236, ['           (self->sig_lr >= sizeof(uintptr_t) && pc <= self->sig_lr + sizeof(uintptr_t) && pc >= self->sig_lr - sizeof(uintptr_t)))']]
code
funcline addr: 32240
funcline addr: 32244
funcline addr: 32248
funcline addr: 32252
funcline addr: 32256
funcline addr: 32260
['xcc_unwind_clang_callback', 32176, 32236, 32260, ['           (self->sig_lr >= sizeof(uintptr_t) && pc <= self->sig_lr + sizeof(uintptr_t) && pc >= self->sig_lr - sizeof(uintptr_t)))']]
restartcode
['xcc_unwind_clang_callback', 32176, 32260, 32260, ['            self->found_sig_pc = 1;']]
code
funcline addr: 32264
['xcc_unwind_clang_callback', 32176, 32260, 32264, ['            self->found_sig_pc = 1;']]
restartcode
['xcc_unwind_clang_callback', 32176, 32264, 32264, ['    if(self->frame_num > 0 && pc == self->prev_pc && sp == self->prev_sp)']]
code
funcline addr: 32268
funcline addr: 32272
funcline addr: 32276
funcline addr: 32280
funcline addr: 32284
funcline addr: 32288
funcline addr: 32292
funcline addr: 32296
['xcc_unwind_clang_callback', 32176, 32264, 32296, ['    if(self->frame_num > 0 && pc == self->prev_pc && sp == self->prev_sp)']]
restartcode
['xcc_unwind_clang_callback', 32176, 32296, 32296, ['    if(0 != xcc_unwind_clang_record_frame(self, pc))']]
code
funcline addr: 32300
funcline addr: 32304
funcline addr: 32308
funcline addr: 32312
funcline addr: 32316
funcline addr: 32320
['xcc_unwind_clang_callback', 32176, 32296, 32320, ['    if(0 != xcc_unwind_clang_record_frame(self, pc))']]
restartcode
['xcc_unwind_clang_callback', 32176, 32320, 32320, ['    self->prev_pc = pc;']]
code
funcline addr: 32324
['xcc_unwind_clang_callback', 32176, 32320, 32324, ['    self->prev_pc = pc;']]
restartcode
['xcc_unwind_clang_callback', 32176, 32324, 32324, ['}']]
code
funcline addr: 32328
funcline addr: 32332
['xcc_unwind_clang_callback', 32176, 32324, 32332, ['}']]
restartcode
['xcc_unwind_clang_callback', 32176, 32332, 32332, ['']]
code
funchead startaddr: 0000000000007e50,funcname: xcc_unwind_clang_record_frame
['xcc_unwind_clang_record_frame', 32336, 32336, 32336, ['{']]
code
funcline addr: 32336
funcline addr: 32340
funcline addr: 32344
funcline addr: 32348
funcline addr: 32352
funcline addr: 32356
funcline addr: 32360
funcline addr: 32364
['xcc_unwind_clang_record_frame', 32336, 32336, 32364, ['{']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32364, 32364, ['    if(0 == dladdr((void *)pc, &info) || (uintptr_t)info.dli_fbase > pc)']]
code
funcline addr: 32368
funcline addr: 32372
funcline addr: 32376
funcline addr: 32380
funcline addr: 32384
funcline addr: 32388
funcline addr: 32392
funcline addr: 32396
['xcc_unwind_clang_record_frame', 32336, 32364, 32396, ['    if(0 == dladdr((void *)pc, &info) || (uintptr_t)info.dli_fbase > pc)']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32396, 32396, ['        len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32400
funcline addr: 32404
['xcc_unwind_clang_record_frame', 32336, 32396, 32404, ['        len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32404, 32404, ['                               self->frame_num, pc);']]
code
funcline addr: 32408
['xcc_unwind_clang_record_frame', 32336, 32404, 32408, ['                               self->frame_num, pc);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32408, 32408, ['        len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32412
funcline addr: 32416
funcline addr: 32420
funcline addr: 32424
funcline addr: 32428
funcline addr: 32432
funcline addr: 32436
['xcc_unwind_clang_record_frame', 32336, 32408, 32436, ['        len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32436, 32436, ["        if(NULL == info.dli_fname || '\\0' == info.dli_fname[0])"]]
code
funcline addr: 32440
funcline addr: 32444
funcline addr: 32448
funcline addr: 32452
['xcc_unwind_clang_record_frame', 32336, 32436, 32452, ["        if(NULL == info.dli_fname || '\\0' == info.dli_fname[0])"]]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32452, 32452, ["            if(NULL == info.dli_sname || '\\0' == info.dli_sname[0])"]]
code
funcline addr: 32456
funcline addr: 32460
funcline addr: 32464
funcline addr: 32468
['xcc_unwind_clang_record_frame', 32336, 32452, 32468, ["            if(NULL == info.dli_sname || '\\0' == info.dli_sname[0])"]]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32468, 32468, ['                if(0 == (uintptr_t)info.dli_saddr || (uintptr_t)info.dli_saddr > pc)']]
code
funcline addr: 32472
funcline addr: 32476
funcline addr: 32480
funcline addr: 32484
funcline addr: 32488
funcline addr: 32492
funcline addr: 32496
funcline addr: 32500
funcline addr: 32504
funcline addr: 32508
['xcc_unwind_clang_record_frame', 32336, 32468, 32508, ['                if(0 == (uintptr_t)info.dli_saddr || (uintptr_t)info.dli_saddr > pc)']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32508, 32508, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32512
['xcc_unwind_clang_record_frame', 32336, 32508, 32512, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32512, 32512, ['                                           info.dli_sname, pc - (uintptr_t)info.dli_saddr);']]
code
funcline addr: 32516
['xcc_unwind_clang_record_frame', 32336, 32512, 32516, ['                                           info.dli_sname, pc - (uintptr_t)info.dli_saddr);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32516, 32516, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32520
funcline addr: 32524
funcline addr: 32528
['xcc_unwind_clang_record_frame', 32336, 32516, 32528, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32528, 32528, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32532
funcline addr: 32536
['xcc_unwind_clang_record_frame', 32336, 32528, 32536, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32536, 32536, ['                                   self->frame_num, pc - (uintptr_t)info.dli_fbase, (uintptr_t)info.dli_fbase);']]
code
funcline addr: 32540
['xcc_unwind_clang_record_frame', 32336, 32536, 32540, ['                                   self->frame_num, pc - (uintptr_t)info.dli_fbase, (uintptr_t)info.dli_fbase);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32540, 32540, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32544
funcline addr: 32548
funcline addr: 32552
['xcc_unwind_clang_record_frame', 32336, 32540, 32552, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32552, 32552, ['                                   self->frame_num, pc - (uintptr_t)info.dli_fbase, (uintptr_t)info.dli_fbase);']]
code
funcline addr: 32556
['xcc_unwind_clang_record_frame', 32336, 32552, 32556, ['                                   self->frame_num, pc - (uintptr_t)info.dli_fbase, (uintptr_t)info.dli_fbase);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32556, 32556, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32560
funcline addr: 32564
funcline addr: 32568
['xcc_unwind_clang_record_frame', 32336, 32556, 32568, ['            len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32568, 32568, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32572
funcline addr: 32576
['xcc_unwind_clang_record_frame', 32336, 32568, 32576, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32576, 32576, ['                                       self->frame_num, pc - (uintptr_t)info.dli_fbase, info.dli_fname);']]
code
funcline addr: 32580
['xcc_unwind_clang_record_frame', 32336, 32576, 32580, ['                                       self->frame_num, pc - (uintptr_t)info.dli_fbase, info.dli_fname);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32580, 32580, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32584
funcline addr: 32588
funcline addr: 32592
['xcc_unwind_clang_record_frame', 32336, 32580, 32592, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32592, 32592, ['                                       self->frame_num, pc - (uintptr_t)info.dli_fbase, info.dli_fname);']]
code
funcline addr: 32596
['xcc_unwind_clang_record_frame', 32336, 32592, 32596, ['                                       self->frame_num, pc - (uintptr_t)info.dli_fbase, info.dli_fname);']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32596, 32596, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32600
funcline addr: 32604
['xcc_unwind_clang_record_frame', 32336, 32596, 32604, ['                len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32604, 32604, ['    if(len >= self->buf_len - self->buf_used)']]
code
funcline addr: 32608
funcline addr: 32612
funcline addr: 32616
funcline addr: 32620
['xcc_unwind_clang_record_frame', 32336, 32604, 32620, ['    if(len >= self->buf_len - self->buf_used)']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32620, 32620, ["        self->buf[self->buf_len - 2] = '\\n';"]]
code
funcline addr: 32624
funcline addr: 32628
funcline addr: 32632
funcline addr: 32636
['xcc_unwind_clang_record_frame', 32336, 32620, 32636, ["        self->buf[self->buf_len - 2] = '\\n';"]]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32636, 32636, ["        self->buf[self->buf_len - 1] = '\\0';"]]
code
funcline addr: 32640
funcline addr: 32644
funcline addr: 32648
['xcc_unwind_clang_record_frame', 32336, 32636, 32648, ["        self->buf[self->buf_len - 1] = '\\0';"]]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32648, 32648, ['        len = self->buf_len - self->buf_used - 1;']]
code
funcline addr: 32652
funcline addr: 32656
funcline addr: 32660
['xcc_unwind_clang_record_frame', 32336, 32648, 32660, ['        len = self->buf_len - self->buf_used - 1;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32660, 32660, ['    self->buf_used += len;']]
code
funcline addr: 32664
['xcc_unwind_clang_record_frame', 32336, 32660, 32664, ['    self->buf_used += len;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32664, 32664, ['    if(self->buf_len - self->buf_used < 20) return XCC_ERRNO_NOSPACE;']]
code
funcline addr: 32668
funcline addr: 32672
['xcc_unwind_clang_record_frame', 32336, 32664, 32672, ['    if(self->buf_len - self->buf_used < 20) return XCC_ERRNO_NOSPACE;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32672, 32672, ['    self->buf_used += len;']]
code
funcline addr: 32676
['xcc_unwind_clang_record_frame', 32336, 32672, 32676, ['    self->buf_used += len;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32676, 32676, ['    if(self->buf_len - self->buf_used < 20) return XCC_ERRNO_NOSPACE;']]
code
funcline addr: 32680
funcline addr: 32684
funcline addr: 32688
['xcc_unwind_clang_record_frame', 32336, 32676, 32688, ['    if(self->buf_len - self->buf_used < 20) return XCC_ERRNO_NOSPACE;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32688, 32688, ['    self->frame_num++;']]
code
funcline addr: 32692
funcline addr: 32696
funcline addr: 32700
funcline addr: 32704
funcline addr: 32708
funcline addr: 32712
funcline addr: 32716
funcline addr: 32720
funcline addr: 32724
funcline addr: 32728
['xcc_unwind_clang_record_frame', 32336, 32688, 32728, ['    self->frame_num++;']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32728, 32728, ['}']]
code
funcline addr: 32732
funcline addr: 32736
funcline addr: 32740
funcline addr: 32744
funcline addr: 32748
['xcc_unwind_clang_record_frame', 32336, 32728, 32748, ['}']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32748, 32748, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
code
funcline addr: 32752
funcline addr: 32756
funcline addr: 32760
funcline addr: 32764
funcline addr: 32768
['xcc_unwind_clang_record_frame', 32336, 32748, 32768, ['                    len = xcc_fmt_snprintf(self->buf + self->buf_used, self->buf_len - self->buf_used,']]
restartcode
['xcc_unwind_clang_record_frame', 32336, 32768, 32768, ['']]
code
funchead startaddr: 0000000000008004,funcname: xcc_util_atoi
['xcc_util_atoi', 32772, 32772, 32772, ['{']]
code
funcline addr: 32772
funcline addr: 32776
funcline addr: 32780
funcline addr: 32784
funcline addr: 32788
funcline addr: 32792
['xcc_util_atoi', 32772, 32772, 32792, ['{']]
restartcode
['xcc_util_atoi', 32772, 32792, 32792, ['    char *endptr = NULL;']]
code
funcline addr: 32796
['xcc_util_atoi', 32772, 32792, 32796, ['    char *endptr = NULL;']]
restartcode
['xcc_util_atoi', 32772, 32796, 32796, ['    if(NULL == str || NULL == i) return XCC_ERRNO_INVAL;']]
code
funcline addr: 32800
funcline addr: 32804
funcline addr: 32808
['xcc_util_atoi', 32772, 32796, 32808, ['    if(NULL == str || NULL == i) return XCC_ERRNO_INVAL;']]
restartcode
['xcc_util_atoi', 32772, 32808, 32808, ["    if((*p < '0' || *p > '9') && *p != '-') return XCC_ERRNO_INVAL;"]]
code
funcline addr: 32812
funcline addr: 32816
funcline addr: 32820
funcline addr: 32824
funcline addr: 32828
funcline addr: 32832
funcline addr: 32836
['xcc_util_atoi', 32772, 32808, 32836, ["    if((*p < '0' || *p > '9') && *p != '-') return XCC_ERRNO_INVAL;"]]
restartcode
['xcc_util_atoi', 32772, 32836, 32836, ['    while(*p)']]
code
funcline addr: 32840
funcline addr: 32844
['xcc_util_atoi', 32772, 32836, 32844, ['    while(*p)']]
restartcode
['xcc_util_atoi', 32772, 32844, 32844, ["        if(*p < '0' || *p > '9') return XCC_ERRNO_INVAL;"]]
code
funcline addr: 32848
funcline addr: 32852
funcline addr: 32856
funcline addr: 32860
funcline addr: 32864
['xcc_util_atoi', 32772, 32844, 32864, ["        if(*p < '0' || *p > '9') return XCC_ERRNO_INVAL;"]]
restartcode
['xcc_util_atoi', 32772, 32864, 32864, ['    errno = 0;']]
code
funcline addr: 32868
funcline addr: 32872
funcline addr: 32876
['xcc_util_atoi', 32772, 32864, 32876, ['    errno = 0;']]
restartcode
['xcc_util_atoi', 32772, 32876, 32876, ['    val = strtol(str, &endptr, 10);']]
code
funcline addr: 32880
funcline addr: 32884
funcline addr: 32888
funcline addr: 32892
['xcc_util_atoi', 32772, 32876, 32892, ['    val = strtol(str, &endptr, 10);']]
restartcode
['xcc_util_atoi', 32772, 32892, 32892, ['    if((errno == ERANGE && (val == LONG_MAX || val == LONG_MIN)) || (errno != 0 && val == 0))']]
code
funcline addr: 32896
funcline addr: 32900
funcline addr: 32904
funcline addr: 32908
funcline addr: 32912
funcline addr: 32916
funcline addr: 32920
funcline addr: 32924
funcline addr: 32928
funcline addr: 32932
funcline addr: 32936
funcline addr: 32940
funcline addr: 32944
funcline addr: 32948
funcline addr: 32952
funcline addr: 32956
funcline addr: 32960
funcline addr: 32964
funcline addr: 32968
funcline addr: 32972
['xcc_util_atoi', 32772, 32892, 32972, ['    if((errno == ERANGE && (val == LONG_MAX || val == LONG_MIN)) || (errno != 0 && val == 0))']]
restartcode
['xcc_util_atoi', 32772, 32972, 32972, ['    *i = (int)val;']]
code
funcline addr: 32976
funcline addr: 32980
funcline addr: 32984
['xcc_util_atoi', 32772, 32972, 32984, ['    *i = (int)val;']]
restartcode
['xcc_util_atoi', 32772, 32984, 32984, ['}']]
code
funcline addr: 32988
funcline addr: 32992
['xcc_util_atoi', 32772, 32984, 32992, ['}']]
restartcode
['xcc_util_atoi', 32772, 32992, 32992, ['']]
code
funchead startaddr: 00000000000080e4,funcname: xcc_util_trim
['xcc_util_trim', 32996, 32996, 32996, ['{']]
code
funcline addr: 32996
funcline addr: 33000
funcline addr: 33004
funcline addr: 33008
funcline addr: 33012
['xcc_util_trim', 32996, 32996, 33012, ['{']]
restartcode
['xcc_util_trim', 32996, 33012, 33012, ['    if(NULL == start) return NULL;']]
code
funcline addr: 33016
funcline addr: 33020
funcline addr: 33024
['xcc_util_trim', 32996, 33012, 33024, ['    if(NULL == start) return NULL;']]
restartcode
['xcc_util_trim', 32996, 33024, 33024, ['    if(start == end) return start;']]
code
funcline addr: 33028
funcline addr: 33032
funcline addr: 33036
['xcc_util_trim', 32996, 33024, 33036, ['    if(start == end) return start;']]
restartcode
['xcc_util_trim', 32996, 33036, 33036, ['    while(start < end && isspace((int)(*start))) start++;']]
code
funcline addr: 33040
funcline addr: 33044
funcline addr: 33048
funcline addr: 33052
funcline addr: 33056
funcline addr: 33060
funcline addr: 33064
funcline addr: 33068
['xcc_util_trim', 32996, 33036, 33068, ['    while(start < end && isspace((int)(*start))) start++;']]
restartcode
['xcc_util_trim', 32996, 33068, 33068, ['    if(start == end) return start;']]
code
funcline addr: 33072
funcline addr: 33076
['xcc_util_trim', 32996, 33068, 33076, ['    if(start == end) return start;']]
restartcode
['xcc_util_trim', 32996, 33076, 33076, ['    while(start < end && isspace((int)(*(end - 1)))) end--;']]
code
funcline addr: 33080
funcline addr: 33084
funcline addr: 33088
funcline addr: 33092
funcline addr: 33096
funcline addr: 33100
['xcc_util_trim', 32996, 33076, 33100, ['    while(start < end && isspace((int)(*(end - 1)))) end--;']]
restartcode
['xcc_util_trim', 32996, 33100, 33100, ["    *end = '\\0';"]]
code
funcline addr: 33104
funcline addr: 33108
funcline addr: 33112
['xcc_util_trim', 32996, 33100, 33112, ["    *end = '\\0';"]]
restartcode
['xcc_util_trim', 32996, 33112, 33112, ['}']]
code
funcline addr: 33116
funcline addr: 33120
funcline addr: 33124
funcline addr: 33128
funcline addr: 33132
['xcc_util_trim', 32996, 33112, 33132, ['}']]
restartcode
['xcc_util_trim', 32996, 33132, 33132, ['']]
code
funchead startaddr: 0000000000008170,funcname: xcc_util_write
['xcc_util_write', 33136, 33136, 33136, ['{']]
code
funcline addr: 33136
funcline addr: 33140
funcline addr: 33144
funcline addr: 33148
['xcc_util_write', 33136, 33136, 33148, ['{']]
restartcode
['xcc_util_write', 33136, 33148, 33148, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
code
funcline addr: 33152
funcline addr: 33156
funcline addr: 33160
funcline addr: 33164
['xcc_util_write', 33136, 33148, 33164, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
restartcode
['xcc_util_write', 33136, 33164, 33164, ['    while(nleft > 0)']]
code
funcline addr: 33168
['xcc_util_write', 33136, 33164, 33168, ['    while(nleft > 0)']]
restartcode
['xcc_util_write', 33136, 33168, 33168, ['        errno = 0;']]
code
funcline addr: 33172
funcline addr: 33176
funcline addr: 33180
['xcc_util_write', 33136, 33168, 33180, ['        errno = 0;']]
restartcode
['xcc_util_write', 33136, 33180, 33180, ['    return __call_bypassing_fortify(write)(fd, buf, count);']]
code
funcline addr: 33184
funcline addr: 33188
funcline addr: 33192
funcline addr: 33196
['xcc_util_write', 33136, 33180, 33196, ['    return __call_bypassing_fortify(write)(fd, buf, count);']]
restartcode
['xcc_util_write', 33136, 33196, 33196, ['        if((nwritten = write(fd, ptr, nleft)) <= 0)']]
code
funcline addr: 33200
funcline addr: 33204
funcline addr: 33208
['xcc_util_write', 33136, 33196, 33208, ['        if((nwritten = write(fd, ptr, nleft)) <= 0)']]
restartcode
['xcc_util_write', 33136, 33208, 33208, ['            if(nwritten < 0 && errno == EINTR)']]
code
funcline addr: 33212
funcline addr: 33216
funcline addr: 33220
funcline addr: 33224
['xcc_util_write', 33136, 33208, 33224, ['            if(nwritten < 0 && errno == EINTR)']]
restartcode
['xcc_util_write', 33136, 33224, 33224, ['        nleft -= (size_t)nwritten;']]
code
funcline addr: 33228
['xcc_util_write', 33136, 33224, 33228, ['        nleft -= (size_t)nwritten;']]
restartcode
['xcc_util_write', 33136, 33228, 33228, ['        ptr   += nwritten;']]
code
funcline addr: 33232
['xcc_util_write', 33136, 33228, 33232, ['        ptr   += nwritten;']]
restartcode
['xcc_util_write', 33136, 33232, 33232, ['    while(nleft > 0)']]
code
funcline addr: 33236
funcline addr: 33240
funcline addr: 33244
funcline addr: 33248
funcline addr: 33252
['xcc_util_write', 33136, 33232, 33252, ['    while(nleft > 0)']]
restartcode
['xcc_util_write', 33136, 33252, 33252, ['                return XCC_ERRNO_SYS;    /* error */']]
code
funcline addr: 33256
funcline addr: 33260
funcline addr: 33264
['xcc_util_write', 33136, 33252, 33264, ['                return XCC_ERRNO_SYS;    /* error */']]
restartcode
['xcc_util_write', 33136, 33264, 33264, ['}']]
code
funcline addr: 33268
funcline addr: 33272
funcline addr: 33276
funcline addr: 33280
['xcc_util_write', 33136, 33264, 33280, ['}']]
restartcode
['xcc_util_write', 33136, 33280, 33280, ['']]
code
funchead startaddr: 0000000000008204,funcname: xcc_util_write_str
['xcc_util_write_str', 33284, 33284, 33284, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
code
funcline addr: 33284
['xcc_util_write_str', 33284, 33284, 33284, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
restartcode
['xcc_util_write_str', 33284, 33284, 33284, ['    while(*tmp) tmp++;']]
code
funcline addr: 33288
funcline addr: 33292
funcline addr: 33296
['xcc_util_write_str', 33284, 33284, 33296, ['    while(*tmp) tmp++;']]
restartcode
['xcc_util_write_str', 33284, 33296, 33296, ['    len = (size_t)(tmp - str);']]
code
funcline addr: 33300
['xcc_util_write_str', 33284, 33296, 33300, ['    len = (size_t)(tmp - str);']]
restartcode
['xcc_util_write_str', 33284, 33300, 33300, ['    if(0 == len) return 0;']]
code
funcline addr: 33304
['xcc_util_write_str', 33284, 33300, 33304, ['    if(0 == len) return 0;']]
restartcode
['xcc_util_write_str', 33284, 33304, 33304, ['    return xcc_util_write(fd, str, len);']]
code
funcline addr: 33308
funcline addr: 33312
['xcc_util_write_str', 33284, 33304, 33312, ['    return xcc_util_write(fd, str, len);']]
restartcode
['xcc_util_write_str', 33284, 33312, 33312, ['}']]
code
funcline addr: 33316
funcline addr: 33320
funcline addr: 33324
['xcc_util_write_str', 33284, 33312, 33324, ['}']]
restartcode
['xcc_util_write_str', 33284, 33324, 33324, ['']]
code
funchead startaddr: 0000000000008230,funcname: xcc_util_write_format
['xcc_util_write_format', 33328, 33328, 33328, ['{']]
code
funcline addr: 33328
funcline addr: 33332
funcline addr: 33336
funcline addr: 33340
funcline addr: 33344
funcline addr: 33348
['xcc_util_write_format', 33328, 33328, 33348, ['{']]
restartcode
['xcc_util_write_format', 33328, 33348, 33348, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
code
funcline addr: 33352
funcline addr: 33356
funcline addr: 33360
funcline addr: 33364
funcline addr: 33368
funcline addr: 33372
['xcc_util_write_format', 33328, 33348, 33372, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
restartcode
['xcc_util_write_format', 33328, 33372, 33372, ['    va_start(ap, format);']]
code
funcline addr: 33376
funcline addr: 33380
funcline addr: 33384
funcline addr: 33388
['xcc_util_write_format', 33328, 33372, 33388, ['    va_start(ap, format);']]
restartcode
['xcc_util_write_format', 33328, 33388, 33388, ['    return __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, ap);']]
code
funcline addr: 33392
funcline addr: 33396
funcline addr: 33400
funcline addr: 33404
funcline addr: 33408
funcline addr: 33412
funcline addr: 33416
funcline addr: 33420
funcline addr: 33424
['xcc_util_write_format', 33328, 33388, 33424, ['    return __builtin___vsnprintf_chk(dest, size, 0, __bos(dest), format, ap);']]
restartcode
['xcc_util_write_format', 33328, 33424, 33424, ['    if(len <= 0) return 0;']]
code
funcline addr: 33428
funcline addr: 33432
['xcc_util_write_format', 33328, 33424, 33432, ['    if(len <= 0) return 0;']]
restartcode
['xcc_util_write_format', 33328, 33432, 33432, ['    len = vsnprintf(buf, sizeof(buf), format, ap);    ']]
code
funcline addr: 33436
funcline addr: 33440
funcline addr: 33444
funcline addr: 33448
funcline addr: 33452
funcline addr: 33456
funcline addr: 33460
funcline addr: 33464
funcline addr: 33468
['xcc_util_write_format', 33328, 33432, 33468, ['    len = vsnprintf(buf, sizeof(buf), format, ap);    ']]
restartcode
['xcc_util_write_format', 33328, 33468, 33468, ['}']]
code
funcline addr: 33472
funcline addr: 33476
funcline addr: 33480
funcline addr: 33484
['xcc_util_write_format', 33328, 33468, 33484, ['}']]
restartcode
['xcc_util_write_format', 33328, 33484, 33484, ['']]
code
funchead startaddr: 00000000000082d0,funcname: xcc_util_write_format_safe
['xcc_util_write_format_safe', 33488, 33488, 33488, ['{']]
code
funcline addr: 33488
funcline addr: 33492
funcline addr: 33496
funcline addr: 33500
funcline addr: 33504
funcline addr: 33508
['xcc_util_write_format_safe', 33488, 33488, 33508, ['{']]
restartcode
['xcc_util_write_format_safe', 33488, 33508, 33508, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
code
funcline addr: 33512
funcline addr: 33516
funcline addr: 33520
['xcc_util_write_format_safe', 33488, 33508, 33520, ['    if(fd < 0) return XCC_ERRNO_INVAL;']]
restartcode
['xcc_util_write_format_safe', 33488, 33520, 33520, ['    va_start(ap, format);']]
code
funcline addr: 33524
funcline addr: 33528
funcline addr: 33532
funcline addr: 33536
funcline addr: 33540
funcline addr: 33544
funcline addr: 33548
funcline addr: 33552
['xcc_util_write_format_safe', 33488, 33520, 33552, ['    va_start(ap, format);']]
restartcode
['xcc_util_write_format_safe', 33488, 33552, 33552, ['    len = xcc_fmt_vsnprintf(buf, sizeof(buf), format, ap);']]
code
funcline addr: 33556
funcline addr: 33560
funcline addr: 33564
funcline addr: 33568
funcline addr: 33572
funcline addr: 33576
funcline addr: 33580
funcline addr: 33584
funcline addr: 33588
['xcc_util_write_format_safe', 33488, 33552, 33588, ['    len = xcc_fmt_vsnprintf(buf, sizeof(buf), format, ap);']]
restartcode
['xcc_util_write_format_safe', 33488, 33588, 33588, ['    if(0 == len) return 0;']]
code
funcline addr: 33592
funcline addr: 33596
funcline addr: 33600
funcline addr: 33604
funcline addr: 33608
funcline addr: 33612
funcline addr: 33616
funcline addr: 33620
['xcc_util_write_format_safe', 33488, 33588, 33620, ['    if(0 == len) return 0;']]
restartcode
['xcc_util_write_format_safe', 33488, 33620, 33620, ['}']]
code
funcline addr: 33624
funcline addr: 33628
funcline addr: 33632
funcline addr: 33636
['xcc_util_write_format_safe', 33488, 33620, 33636, ['}']]
restartcode
['xcc_util_write_format_safe', 33488, 33636, 33636, ['']]
code
funchead startaddr: 0000000000008368,funcname: xcc_util_gets
['xcc_util_gets', 33640, 33640, 33640, ['{']]
code
funcline addr: 33640
funcline addr: 33644
funcline addr: 33648
funcline addr: 33652
funcline addr: 33656
funcline addr: 33660
funcline addr: 33664
['xcc_util_gets', 33640, 33640, 33664, ['{']]
restartcode
['xcc_util_gets', 33640, 33664, 33664, ['    if(fd < 0 || NULL == s || size < 2) return NULL;']]
code
funcline addr: 33668
funcline addr: 33672
funcline addr: 33676
funcline addr: 33680
funcline addr: 33684
funcline addr: 33688
['xcc_util_gets', 33640, 33664, 33688, ['    if(fd < 0 || NULL == s || size < 2) return NULL;']]
restartcode
['xcc_util_gets', 33640, 33688, 33688, ["    s[0] = '\\0';"]]
code
funcline addr: 33692
['xcc_util_gets', 33640, 33688, 33692, ["    s[0] = '\\0';"]]
restartcode
['xcc_util_gets', 33640, 33692, 33692, ['    for(i = 0; i < (ssize_t)(size - 1); i++)']]
code
funcline addr: 33696
funcline addr: 33700
['xcc_util_gets', 33640, 33692, 33700, ['    for(i = 0; i < (ssize_t)(size - 1); i++)']]
restartcode
['xcc_util_gets', 33640, 33700, 33700, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
code
funcline addr: 33704
funcline addr: 33708
funcline addr: 33712
funcline addr: 33716
['xcc_util_gets', 33640, 33700, 33716, ['    return __call_bypassing_fortify(read)(fd, buf, count);']]
restartcode
['xcc_util_gets', 33640, 33716, 33716, ['        if(1 == (nread = read(fd, &c, 1)))']]
code
funcline addr: 33720
funcline addr: 33724
funcline addr: 33728
['xcc_util_gets', 33640, 33716, 33728, ['        if(1 == (nread = read(fd, &c, 1)))']]
restartcode
['xcc_util_gets', 33640, 33728, 33728, ['            if (errno != EINTR) return NULL;']]
code
funcline addr: 33732
funcline addr: 33736
funcline addr: 33740
funcline addr: 33744
funcline addr: 33748
['xcc_util_gets', 33640, 33728, 33748, ['            if (errno != EINTR) return NULL;']]
restartcode
['xcc_util_gets', 33640, 33748, 33748, ['            *p++ = c;']]
code
funcline addr: 33752
['xcc_util_gets', 33640, 33748, 33752, ['            *p++ = c;']]
restartcode
['xcc_util_gets', 33640, 33752, 33752, ["            if('\\n' == c) break;"]]
code
funcline addr: 33756
['xcc_util_gets', 33640, 33752, 33756, ["            if('\\n' == c) break;"]]
restartcode
['xcc_util_gets', 33640, 33756, 33756, ['            *p++ = c;']]
code
funcline addr: 33760
['xcc_util_gets', 33640, 33756, 33760, ['            *p++ = c;']]
restartcode
['xcc_util_gets', 33640, 33760, 33760, ["            if('\\n' == c) break;"]]
code
funcline addr: 33764
['xcc_util_gets', 33640, 33760, 33764, ["            if('\\n' == c) break;"]]
restartcode
['xcc_util_gets', 33640, 33764, 33764, ['    for(i = 0; i < (ssize_t)(size - 1); i++)']]
code
funcline addr: 33768
funcline addr: 33772
['xcc_util_gets', 33640, 33764, 33772, ['    for(i = 0; i < (ssize_t)(size - 1); i++)']]
restartcode
['xcc_util_gets', 33640, 33772, 33772, ["    *p = '\\0';"]]
code
funcline addr: 33776
['xcc_util_gets', 33640, 33772, 33776, ["    *p = '\\0';"]]
restartcode
['xcc_util_gets', 33640, 33776, 33776, ["    return ('\\0' == s[0] ? NULL : s);"]]
code
funcline addr: 33780
funcline addr: 33784
funcline addr: 33788
['xcc_util_gets', 33640, 33776, 33788, ["    return ('\\0' == s[0] ? NULL : s);"]]
restartcode
['xcc_util_gets', 33640, 33788, 33788, ['}']]
code
funcline addr: 33792
funcline addr: 33796
funcline addr: 33800
funcline addr: 33804
funcline addr: 33808
funcline addr: 33812
funcline addr: 33816
['xcc_util_gets', 33640, 33788, 33816, ['}']]
restartcode
['xcc_util_gets', 33640, 33816, 33816, ['']]
code
funchead startaddr: 000000000000841c,funcname: xcc_util_get_process_thread_name
['xcc_util_get_process_thread_name', 33820, 33820, 33820, ['{']]
code
funcline addr: 33820
funcline addr: 33824
funcline addr: 33828
funcline addr: 33832
funcline addr: 33836
funcline addr: 33840
funcline addr: 33844
funcline addr: 33848
funcline addr: 33852
funcline addr: 33856
funcline addr: 33860
funcline addr: 33864
funcline addr: 33868
funcline addr: 33872
funcline addr: 33876
funcline addr: 33880
funcline addr: 33884
['xcc_util_get_process_thread_name', 33820, 33820, 33884, ['{']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33884, 33884, ['    if(0 > (fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(path, O_RDONLY | O_CLOEXEC))))']]
code
funcline addr: 33888
funcline addr: 33892
funcline addr: 33896
funcline addr: 33900
funcline addr: 33904
funcline addr: 33908
funcline addr: 33912
funcline addr: 33916
funcline addr: 33920
funcline addr: 33924
['xcc_util_get_process_thread_name', 33820, 33884, 33924, ['    if(0 > (fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(path, O_RDONLY | O_CLOEXEC))))']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33924, 33924, ['    if(NULL == xcc_util_gets(buf, len, fd))']]
code
funcline addr: 33928
funcline addr: 33932
funcline addr: 33936
funcline addr: 33940
funcline addr: 33944
['xcc_util_get_process_thread_name', 33820, 33924, 33944, ['    if(NULL == xcc_util_gets(buf, len, fd))']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33944, 33944, ['    if(fd >= 0) close(fd);']]
code
funcline addr: 33948
funcline addr: 33952
['xcc_util_get_process_thread_name', 33820, 33944, 33952, ['    if(fd >= 0) close(fd);']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33952, 33952, ['    data = xcc_util_trim(tmp);']]
code
funcline addr: 33956
funcline addr: 33960
funcline addr: 33964
funcline addr: 33968
['xcc_util_get_process_thread_name', 33820, 33952, 33968, ['    data = xcc_util_trim(tmp);']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33968, 33968, ['    if(0 == (data_len = strlen(data))) return XCC_ERRNO_MISSING;']]
code
funcline addr: 33972
['xcc_util_get_process_thread_name', 33820, 33968, 33972, ['    if(0 == (data_len = strlen(data))) return XCC_ERRNO_MISSING;']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33972, 33972, ['    cpy_len = XCC_UTIL_MIN(len - 1, data_len);']]
code
funcline addr: 33976
funcline addr: 33980
funcline addr: 33984
['xcc_util_get_process_thread_name', 33820, 33972, 33984, ['    cpy_len = XCC_UTIL_MIN(len - 1, data_len);']]
restartcode
['xcc_util_get_process_thread_name', 33820, 33984, 33984, ['        return __builtin_memcpy(dst, src, copy_amount);']]
code
funcline addr: 33988
funcline addr: 33992
funcline addr: 33996
funcline addr: 34000
funcline addr: 34004
['xcc_util_get_process_thread_name', 33820, 33984, 34004, ['        return __builtin_memcpy(dst, src, copy_amount);']]
restartcode
['xcc_util_get_process_thread_name', 33820, 34004, 34004, ["    buf[cpy_len] = '\\0';"]]
code
funcline addr: 34008
funcline addr: 34012
['xcc_util_get_process_thread_name', 33820, 34004, 34012, ["    buf[cpy_len] = '\\0';"]]
restartcode
['xcc_util_get_process_thread_name', 33820, 34012, 34012, ['        r = XCC_ERRNO_SYS;']]
code
funcline addr: 34016
funcline addr: 34020
funcline addr: 34024
funcline addr: 34028
funcline addr: 34032
funcline addr: 34036
funcline addr: 34040
funcline addr: 34044
['xcc_util_get_process_thread_name', 33820, 34012, 34044, ['        r = XCC_ERRNO_SYS;']]
restartcode
['xcc_util_get_process_thread_name', 33820, 34044, 34044, ['}']]
code
funcline addr: 34048
funcline addr: 34052
funcline addr: 34056
funcline addr: 34060
funcline addr: 34064
funcline addr: 34068
funcline addr: 34072
funcline addr: 34076
['xcc_util_get_process_thread_name', 33820, 34044, 34076, ['}']]
restartcode
['xcc_util_get_process_thread_name', 33820, 34076, 34076, ['        r = XCC_ERRNO_SYS;']]
code
funcline addr: 34080
funcline addr: 34084
['xcc_util_get_process_thread_name', 33820, 34076, 34084, ['        r = XCC_ERRNO_SYS;']]
restartcode
['xcc_util_get_process_thread_name', 33820, 34084, 34084, ['    if(fd >= 0) close(fd);']]
code
funcline addr: 34088
funcline addr: 34092
funcline addr: 34096
funcline addr: 34100
funcline addr: 34104
funcline addr: 34108
funcline addr: 34112
funcline addr: 34116
['xcc_util_get_process_thread_name', 33820, 34084, 34116, ['    if(fd >= 0) close(fd);']]
restartcode
['xcc_util_get_process_thread_name', 33820, 34116, 34116, ['']]
code
funchead startaddr: 0000000000008548,funcname: xcc_util_get_thread_name
['xcc_util_get_thread_name', 34120, 34120, 34120, ['        strncpy(buf, "unknown", len);']]
code
['xcc_util_get_thread_name', 34120, 34120, 34120, ['}']]
code
['xcc_util_get_thread_name', 34120, 34120, 34120, ['']]
code
['xcc_util_get_thread_name', 34120, 34120, 34120, ['void xcc_util_get_thread_name(pid_t tid, char *buf, size_t len)']]
code
['xcc_util_get_thread_name', 34120, 34120, 34120, ['{']]
code
funcline addr: 34120
funcline addr: 34124
funcline addr: 34128
funcline addr: 34132
funcline addr: 34136
funcline addr: 34140
funcline addr: 34144
['xcc_util_get_thread_name', 34120, 34120, 34144, ['{']]
restartcode
['xcc_util_get_thread_name', 34120, 34144, 34144, ['    char path[128];']]
code
['xcc_util_get_thread_name', 34120, 34144, 34144, ['    ']]
code
['xcc_util_get_thread_name', 34120, 34144, 34144, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/comm", tid);']]
code
funcline addr: 34148
funcline addr: 34152
funcline addr: 34156
funcline addr: 34160
funcline addr: 34164
funcline addr: 34168
funcline addr: 34172
funcline addr: 34176
['xcc_util_get_thread_name', 34120, 34144, 34176, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/comm", tid);']]
restartcode
['xcc_util_get_thread_name', 34120, 34176, 34176, ['    ']]
code
['xcc_util_get_thread_name', 34120, 34176, 34176, ['    if(0 != xcc_util_get_process_thread_name(path, buf, len))']]
code
funcline addr: 34180
funcline addr: 34184
funcline addr: 34188
funcline addr: 34192
funcline addr: 34196
['xcc_util_get_thread_name', 34120, 34176, 34196, ['    if(0 != xcc_util_get_process_thread_name(path, buf, len))']]
restartcode
['xcc_util_get_thread_name', 34120, 34196, 34196, ['    return __strncpy_chk2(dst, src, n, bos_dst, bos_src);']]
code
funcline addr: 34200
funcline addr: 34204
funcline addr: 34208
funcline addr: 34212
funcline addr: 34216
funcline addr: 34220
funcline addr: 34224
funcline addr: 34228
funcline addr: 34232
funcline addr: 34236
['xcc_util_get_thread_name', 34120, 34196, 34236, ['    return __strncpy_chk2(dst, src, n, bos_dst, bos_src);']]
restartcode
['xcc_util_get_thread_name', 34120, 34236, 34236, ['        strncpy(buf, "unknown", len);']]
code
['xcc_util_get_thread_name', 34120, 34236, 34236, ['}']]
code
funcline addr: 34240
funcline addr: 34244
funcline addr: 34248
funcline addr: 34252
funcline addr: 34256
funcline addr: 34260
['xcc_util_get_thread_name', 34120, 34236, 34260, ['}']]
restartcode
['xcc_util_get_thread_name', 34120, 34260, 34260, ['']]
code
funchead startaddr: 00000000000085d8,funcname: xcc_util_record_sub_section_from
['xcc_util_record_sub_section_from', 34264, 34264, 34264, ['']]
code
['xcc_util_record_sub_section_from', 34264, 34264, 34264, ['int xcc_util_record_sub_section_from(int fd, const char *path, const char *title, size_t limit)']]
code
['xcc_util_record_sub_section_from', 34264, 34264, 34264, ['{']]
code
funcline addr: 34264
funcline addr: 34268
funcline addr: 34272
funcline addr: 34276
funcline addr: 34280
funcline addr: 34284
funcline addr: 34288
funcline addr: 34292
funcline addr: 34296
funcline addr: 34300
['xcc_util_record_sub_section_from', 34264, 34264, 34300, ['{']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['    char    line[512];']]
code
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['    char   *p;']]
code
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['    int     r = 0;']]
code
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['    size_t  n = 0;']]
code
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['']]
code
['xcc_util_record_sub_section_from', 34264, 34300, 34300, ['    if(NULL == (fp = fopen(path, "r"))) goto end;']]
code
funcline addr: 34304
funcline addr: 34308
funcline addr: 34312
funcline addr: 34316
funcline addr: 34320
funcline addr: 34324
funcline addr: 34328
funcline addr: 34332
funcline addr: 34336
funcline addr: 34340
['xcc_util_record_sub_section_from', 34264, 34300, 34340, ['    if(NULL == (fp = fopen(path, "r"))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34340, 34340, ['']]
code
['xcc_util_record_sub_section_from', 34264, 34340, 34340, ['    if(0 != (r = xcc_util_write_str(fd, title))) goto end;']]
code
funcline addr: 34344
funcline addr: 34348
funcline addr: 34352
funcline addr: 34356
funcline addr: 34360
funcline addr: 34364
funcline addr: 34368
funcline addr: 34372
['xcc_util_record_sub_section_from', 34264, 34340, 34372, ['    if(0 != (r = xcc_util_write_str(fd, title))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34372, 34372, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
code
funcline addr: 34376
funcline addr: 34380
funcline addr: 34384
funcline addr: 34388
['xcc_util_record_sub_section_from', 34264, 34372, 34388, ['    return __call_bypassing_fortify(fgets)(dest, size, stream);']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34388, 34388, ['    while(NULL != fgets(line, sizeof(line), fp))']]
code
funcline addr: 34392
['xcc_util_record_sub_section_from', 34264, 34388, 34392, ['    while(NULL != fgets(line, sizeof(line), fp))']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34392, 34392, ['    {']]
code
['xcc_util_record_sub_section_from', 34264, 34392, 34392, ['        p = xcc_util_trim(line);']]
code
funcline addr: 34396
funcline addr: 34400
funcline addr: 34404
['xcc_util_record_sub_section_from', 34264, 34392, 34404, ['        p = xcc_util_trim(line);']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34404, 34404, ['    return __builtin_strlen(s);']]
code
funcline addr: 34408
['xcc_util_record_sub_section_from', 34264, 34404, 34408, ['    return __builtin_strlen(s);']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34408, 34408, ['        if(strlen(p) > 0)']]
code
funcline addr: 34412
['xcc_util_record_sub_section_from', 34264, 34408, 34412, ['        if(strlen(p) > 0)']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34412, 34412, ['        {']]
code
['xcc_util_record_sub_section_from', 34264, 34412, 34412, ['            n++;']]
code
funcline addr: 34416
['xcc_util_record_sub_section_from', 34264, 34412, 34416, ['            n++;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34416, 34416, ['            if(0 == limit || n <= limit)']]
code
funcline addr: 34420
funcline addr: 34424
funcline addr: 34428
['xcc_util_record_sub_section_from', 34264, 34416, 34428, ['            if(0 == limit || n <= limit)']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34428, 34428, ['                if(0 != (r = xcc_util_write_format_safe(fd, "  %s\\n", p))) goto end;']]
code
funcline addr: 34432
funcline addr: 34436
funcline addr: 34440
funcline addr: 34444
funcline addr: 34448
funcline addr: 34452
funcline addr: 34456
funcline addr: 34460
funcline addr: 34464
['xcc_util_record_sub_section_from', 34264, 34428, 34464, ['                if(0 != (r = xcc_util_write_format_safe(fd, "  %s\\n", p))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34464, 34464, ['        }']]
code
['xcc_util_record_sub_section_from', 34264, 34464, 34464, ['    }']]
code
['xcc_util_record_sub_section_from', 34264, 34464, 34464, ['    if(limit > 0 && n > limit)']]
code
funcline addr: 34468
funcline addr: 34472
funcline addr: 34476
['xcc_util_record_sub_section_from', 34264, 34464, 34476, ['    if(limit > 0 && n > limit)']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34476, 34476, ['    {']]
code
['xcc_util_record_sub_section_from', 34264, 34476, 34476, ['        if(0 != (r = xcc_util_write_str(fd, "  ......\\n"))) goto end;']]
code
funcline addr: 34480
funcline addr: 34484
funcline addr: 34488
funcline addr: 34492
funcline addr: 34496
funcline addr: 34500
['xcc_util_record_sub_section_from', 34264, 34476, 34500, ['        if(0 != (r = xcc_util_write_str(fd, "  ......\\n"))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34500, 34500, ['        if(0 != (r = xcc_util_write_format_safe(fd, "  (number of records: %zu)\\n", n))) goto end;']]
code
funcline addr: 34504
funcline addr: 34508
funcline addr: 34512
funcline addr: 34516
funcline addr: 34520
['xcc_util_record_sub_section_from', 34264, 34500, 34520, ['        if(0 != (r = xcc_util_write_format_safe(fd, "  (number of records: %zu)\\n", n))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34520, 34520, ['    }']]
code
['xcc_util_record_sub_section_from', 34264, 34520, 34520, ['    if(0 != (r = xcc_util_write_str(fd, "-\\n"))) goto end;']]
code
funcline addr: 34524
funcline addr: 34528
funcline addr: 34532
funcline addr: 34536
funcline addr: 34540
['xcc_util_record_sub_section_from', 34264, 34520, 34540, ['    if(0 != (r = xcc_util_write_str(fd, "-\\n"))) goto end;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34540, 34540, ['']]
code
['xcc_util_record_sub_section_from', 34264, 34540, 34540, [' end:']]
code
['xcc_util_record_sub_section_from', 34264, 34540, 34540, ['    if(NULL != fp) fclose(fp);']]
code
funcline addr: 34544
funcline addr: 34548
funcline addr: 34552
funcline addr: 34556
funcline addr: 34560
funcline addr: 34564
['xcc_util_record_sub_section_from', 34264, 34540, 34564, ['    if(NULL != fp) fclose(fp);']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34564, 34564, ['    return r;']]
code
funcline addr: 34568
funcline addr: 34572
funcline addr: 34576
funcline addr: 34580
funcline addr: 34584
funcline addr: 34588
funcline addr: 34592
funcline addr: 34596
funcline addr: 34600
['xcc_util_record_sub_section_from', 34264, 34564, 34600, ['    return r;']]
restartcode
['xcc_util_record_sub_section_from', 34264, 34600, 34600, ['']]
code
funchead startaddr: 000000000000872c,funcname: xcc_util_get_dump_header
['xcc_util_get_dump_header', 34604, 34604, 34604, ['                                const char *abi_list,']]
code
['xcc_util_get_dump_header', 34604, 34604, 34604, ['                                const char *manufacturer,']]
code
['xcc_util_get_dump_header', 34604, 34604, 34604, ['                                const char *brand,']]
code
['xcc_util_get_dump_header', 34604, 34604, 34604, ['                                const char *model,']]
code
['xcc_util_get_dump_header', 34604, 34604, 34604, ['                                const char *build_fingerprint)']]
code
['xcc_util_get_dump_header', 34604, 34604, 34604, ['{']]
code
funcline addr: 34604
funcline addr: 34608
funcline addr: 34612
funcline addr: 34616
funcline addr: 34620
funcline addr: 34624
funcline addr: 34628
funcline addr: 34632
funcline addr: 34636
funcline addr: 34640
funcline addr: 34644
funcline addr: 34648
funcline addr: 34652
funcline addr: 34656
funcline addr: 34660
funcline addr: 34664
funcline addr: 34668
funcline addr: 34672
funcline addr: 34676
funcline addr: 34680
funcline addr: 34684
funcline addr: 34688
funcline addr: 34692
funcline addr: 34696
funcline addr: 34700
funcline addr: 34704
funcline addr: 34708
funcline addr: 34712
funcline addr: 34716
funcline addr: 34720
funcline addr: 34724
funcline addr: 34728
funcline addr: 34732
funcline addr: 34736
funcline addr: 34740
funcline addr: 34744
['xcc_util_get_dump_header', 34604, 34604, 34744, ['{']]
restartcode
['xcc_util_get_dump_header', 34604, 34744, 34744, ['    time_t       start_sec  = (time_t)(start_time / 1000000);']]
code
funcline addr: 34748
['xcc_util_get_dump_header', 34604, 34744, 34748, ['    time_t       start_sec  = (time_t)(start_time / 1000000);']]
restartcode
['xcc_util_get_dump_header', 34604, 34748, 34748, ['    suseconds_t  start_usec = (time_t)(start_time % 1000000);']]
code
['xcc_util_get_dump_header', 34604, 34748, 34748, ['    struct tm    start_tm;']]
code
['xcc_util_get_dump_header', 34604, 34748, 34748, ['    time_t       crash_sec   = (time_t)(crash_time / 1000000);']]
code
funcline addr: 34752
['xcc_util_get_dump_header', 34604, 34748, 34752, ['    time_t       crash_sec   = (time_t)(crash_time / 1000000);']]
restartcode
['xcc_util_get_dump_header', 34604, 34752, 34752, ['    time_t       start_sec  = (time_t)(start_time / 1000000);']]
code
funcline addr: 34756
funcline addr: 34760
funcline addr: 34764
funcline addr: 34768
funcline addr: 34772
funcline addr: 34776
['xcc_util_get_dump_header', 34604, 34752, 34776, ['    time_t       start_sec  = (time_t)(start_time / 1000000);']]
restartcode
['xcc_util_get_dump_header', 34604, 34776, 34776, ['        *p++ = (char)c;']]
code
funcline addr: 34780
['xcc_util_get_dump_header', 34604, 34776, 34780, ['        *p++ = (char)c;']]
restartcode
['xcc_util_get_dump_header', 34604, 34780, 34780, ['    while(n--)']]
code
funcline addr: 34784
funcline addr: 34788
funcline addr: 34792
funcline addr: 34796
funcline addr: 34800
funcline addr: 34804
funcline addr: 34808
funcline addr: 34812
funcline addr: 34816
funcline addr: 34820
['xcc_util_get_dump_header', 34604, 34780, 34820, ['    while(n--)']]
restartcode
['xcc_util_get_dump_header', 34604, 34820, 34820, ['    struct tm    crash_tm;']]
code
['xcc_util_get_dump_header', 34604, 34820, 34820, ['']]
code
['xcc_util_get_dump_header', 34604, 34820, 34820, ['    //convert times']]
code
['xcc_util_get_dump_header', 34604, 34820, 34820, ['    xcc_libc_support_memset(&start_tm, 0, sizeof(start_tm));']]
code
['xcc_util_get_dump_header', 34604, 34820, 34820, ['    xcc_libc_support_memset(&crash_tm, 0, sizeof(crash_tm));']]
code
['xcc_util_get_dump_header', 34604, 34820, 34820, ['    xcc_libc_support_localtime_r(&start_sec, time_zone, &start_tm);']]
code
funcline addr: 34824
funcline addr: 34828
funcline addr: 34832
funcline addr: 34836
['xcc_util_get_dump_header', 34604, 34820, 34836, ['    xcc_libc_support_localtime_r(&start_sec, time_zone, &start_tm);']]
restartcode
['xcc_util_get_dump_header', 34604, 34836, 34836, ['    xcc_libc_support_localtime_r(&crash_sec, time_zone, &crash_tm);']]
code
funcline addr: 34840
funcline addr: 34844
funcline addr: 34848
funcline addr: 34852
['xcc_util_get_dump_header', 34604, 34836, 34852, ['    xcc_libc_support_localtime_r(&crash_sec, time_zone, &crash_tm);']]
restartcode
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            "Brand: \'%s\'\\n"']]
code
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            "Model: \'%s\'\\n"']]
code
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            "Build fingerprint: \'%s\'\\n"']]
code
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            "ABI: \'"XCC_UTIL_ABI_STRING"\'\\n",']]
code
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            crash_type,']]
code
['xcc_util_get_dump_header', 34604, 34852, 34852, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
code
funcline addr: 34856
funcline addr: 34860
['xcc_util_get_dump_header', 34604, 34852, 34860, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34860, 34860, ['                            start_tm.tm_hour, start_tm.tm_min, start_tm.tm_sec, start_usec / 1000,']]
code
['xcc_util_get_dump_header', 34604, 34860, 34860, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
funcline addr: 34864
funcline addr: 34868
funcline addr: 34872
funcline addr: 34876
['xcc_util_get_dump_header', 34604, 34860, 34876, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
restartcode
['xcc_util_get_dump_header', 34604, 34876, 34876, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
code
funcline addr: 34880
['xcc_util_get_dump_header', 34604, 34876, 34880, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34880, 34880, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
code
funcline addr: 34884
['xcc_util_get_dump_header', 34604, 34880, 34884, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
restartcode
['xcc_util_get_dump_header', 34604, 34884, 34884, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
code
funcline addr: 34888
['xcc_util_get_dump_header', 34604, 34884, 34888, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34888, 34888, ['                            start_tm.tm_hour, start_tm.tm_min, start_tm.tm_sec, start_usec / 1000,']]
code
funcline addr: 34892
funcline addr: 34896
['xcc_util_get_dump_header', 34604, 34888, 34896, ['                            start_tm.tm_hour, start_tm.tm_min, start_tm.tm_sec, start_usec / 1000,']]
restartcode
['xcc_util_get_dump_header', 34604, 34896, 34896, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
code
funcline addr: 34900
['xcc_util_get_dump_header', 34604, 34896, 34900, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34900, 34900, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
funcline addr: 34904
['xcc_util_get_dump_header', 34604, 34900, 34904, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
restartcode
['xcc_util_get_dump_header', 34604, 34904, 34904, ['                            crash_tm.tm_hour, crash_tm.tm_min, crash_tm.tm_sec, crash_usec / 1000,']]
code
funcline addr: 34908
['xcc_util_get_dump_header', 34604, 34904, 34908, ['                            crash_tm.tm_hour, crash_tm.tm_min, crash_tm.tm_sec, crash_usec / 1000,']]
restartcode
['xcc_util_get_dump_header', 34604, 34908, 34908, ['                            start_tm.tm_hour, start_tm.tm_min, start_tm.tm_sec, start_usec / 1000,']]
code
funcline addr: 34912
['xcc_util_get_dump_header', 34604, 34908, 34912, ['                            start_tm.tm_hour, start_tm.tm_min, start_tm.tm_sec, start_usec / 1000,']]
restartcode
['xcc_util_get_dump_header', 34604, 34912, 34912, ['                            crash_tm.tm_hour, crash_tm.tm_min, crash_tm.tm_sec, crash_usec / 1000,']]
code
funcline addr: 34916
['xcc_util_get_dump_header', 34604, 34912, 34916, ['                            crash_tm.tm_hour, crash_tm.tm_min, crash_tm.tm_sec, crash_usec / 1000,']]
restartcode
['xcc_util_get_dump_header', 34604, 34916, 34916, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
funcline addr: 34920
['xcc_util_get_dump_header', 34604, 34916, 34920, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
restartcode
['xcc_util_get_dump_header', 34604, 34920, 34920, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
code
funcline addr: 34924
funcline addr: 34928
['xcc_util_get_dump_header', 34604, 34920, 34928, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
restartcode
['xcc_util_get_dump_header', 34604, 34928, 34928, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
funcline addr: 34932
funcline addr: 34936
funcline addr: 34940
['xcc_util_get_dump_header', 34604, 34928, 34940, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
restartcode
['xcc_util_get_dump_header', 34604, 34940, 34940, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
code
funcline addr: 34944
funcline addr: 34948
['xcc_util_get_dump_header', 34604, 34940, 34948, ['                            start_tm.tm_year + 1900, start_tm.tm_mon + 1, start_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34948, 34948, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
funcline addr: 34952
['xcc_util_get_dump_header', 34604, 34948, 34952, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
restartcode
['xcc_util_get_dump_header', 34604, 34952, 34952, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
code
funcline addr: 34956
funcline addr: 34960
['xcc_util_get_dump_header', 34604, 34952, 34960, ['                            crash_tm.tm_year + 1900, crash_tm.tm_mon + 1, crash_tm.tm_mday,']]
restartcode
['xcc_util_get_dump_header', 34604, 34960, 34960, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
code
funcline addr: 34964
funcline addr: 34968
funcline addr: 34972
funcline addr: 34976
funcline addr: 34980
funcline addr: 34984
funcline addr: 34988
funcline addr: 34992
funcline addr: 34996
funcline addr: 35000
funcline addr: 35004
funcline addr: 35008
funcline addr: 35012
['xcc_util_get_dump_header', 34604, 34960, 35012, ['    if(xcc_util_is_root_saved >= 0) return xcc_util_is_root_saved;']]
restartcode
['xcc_util_get_dump_header', 34604, 35012, 35012, ['    for(i = 0; i < sizeof(xcc_util_su_pathnames) / sizeof(xcc_util_su_pathnames[0]); i++)']]
code
funcline addr: 35016
funcline addr: 35020
['xcc_util_get_dump_header', 34604, 35012, 35020, ['    for(i = 0; i < sizeof(xcc_util_su_pathnames) / sizeof(xcc_util_su_pathnames[0]); i++)']]
restartcode
['xcc_util_get_dump_header', 34604, 35020, 35020, ['        if(0 == access(xcc_util_su_pathnames[i], F_OK))']]
code
funcline addr: 35024
funcline addr: 35028
funcline addr: 35032
funcline addr: 35036
funcline addr: 35040
funcline addr: 35044
funcline addr: 35048
funcline addr: 35052
funcline addr: 35056
funcline addr: 35060
funcline addr: 35064
funcline addr: 35068
funcline addr: 35072
funcline addr: 35076
funcline addr: 35080
funcline addr: 35084
funcline addr: 35088
funcline addr: 35092
funcline addr: 35096
funcline addr: 35100
['xcc_util_get_dump_header', 34604, 35020, 35100, ['        if(0 == access(xcc_util_su_pathnames[i], F_OK))']]
restartcode
['xcc_util_get_dump_header', 34604, 35100, 35100, ["                            time_zone < 0 ? '-' : '+', labs(time_zone / 3600), labs(time_zone % 3600),"]]
code
['xcc_util_get_dump_header', 34604, 35100, 35100, ['                            app_id,']]
code
['xcc_util_get_dump_header', 34604, 35100, 35100, ['                            app_version,']]
code
['xcc_util_get_dump_header', 34604, 35100, 35100, ['                            xcc_util_is_root() ? "Yes" : "No",']]
code
funcline addr: 35104
funcline addr: 35108
funcline addr: 35112
funcline addr: 35116
funcline addr: 35120
funcline addr: 35124
funcline addr: 35128
['xcc_util_get_dump_header', 34604, 35100, 35128, ['                            xcc_util_is_root() ? "Yes" : "No",']]
restartcode
['xcc_util_get_dump_header', 34604, 35128, 35128, ['    return xcc_fmt_snprintf(buf, buf_len,']]
code
funcline addr: 35132
funcline addr: 35136
funcline addr: 35140
funcline addr: 35144
funcline addr: 35148
funcline addr: 35152
funcline addr: 35156
funcline addr: 35160
funcline addr: 35164
funcline addr: 35168
funcline addr: 35172
funcline addr: 35176
funcline addr: 35180
funcline addr: 35184
funcline addr: 35188
funcline addr: 35192
funcline addr: 35196
funcline addr: 35200
funcline addr: 35204
funcline addr: 35208
funcline addr: 35212
funcline addr: 35216
funcline addr: 35220
funcline addr: 35224
funcline addr: 35228
funcline addr: 35232
funcline addr: 35236
funcline addr: 35240
funcline addr: 35244
funcline addr: 35248
funcline addr: 35252
funcline addr: 35256
funcline addr: 35260
funcline addr: 35264
funcline addr: 35268
funcline addr: 35272
funcline addr: 35276
funcline addr: 35280
funcline addr: 35284
funcline addr: 35288
funcline addr: 35292
funcline addr: 35296
funcline addr: 35300
funcline addr: 35304
funcline addr: 35308
funcline addr: 35312
funcline addr: 35316
['xcc_util_get_dump_header', 34604, 35128, 35316, ['    return xcc_fmt_snprintf(buf, buf_len,']]
restartcode
['xcc_util_get_dump_header', 34604, 35316, 35316, ['']]
code
funchead startaddr: 00000000000089f8,funcname: xcc_util_record_logcat
['xcc_util_record_logcat', 35320, 35320, 35320, ['                           pid_t pid,']]
code
['xcc_util_record_logcat', 35320, 35320, 35320, ['                           int api_level,']]
code
['xcc_util_record_logcat', 35320, 35320, 35320, ['                           unsigned int logcat_system_lines,']]
code
['xcc_util_record_logcat', 35320, 35320, 35320, ['                           unsigned int logcat_events_lines,']]
code
['xcc_util_record_logcat', 35320, 35320, 35320, ['                           unsigned int logcat_main_lines)']]
code
['xcc_util_record_logcat', 35320, 35320, 35320, ['{']]
code
funcline addr: 35320
funcline addr: 35324
funcline addr: 35328
funcline addr: 35332
funcline addr: 35336
['xcc_util_record_logcat', 35320, 35320, 35336, ['{']]
restartcode
['xcc_util_record_logcat', 35320, 35336, 35336, ['    int r;']]
code
['xcc_util_record_logcat', 35320, 35336, 35336, ['    ']]
code
['xcc_util_record_logcat', 35320, 35336, 35336, ['    if(0 == logcat_system_lines && 0 == logcat_events_lines && 0 == logcat_main_lines) return 0;']]
code
funcline addr: 35340
funcline addr: 35344
funcline addr: 35348
funcline addr: 35352
['xcc_util_record_logcat', 35320, 35336, 35352, ['    if(0 == logcat_system_lines && 0 == logcat_events_lines && 0 == logcat_main_lines) return 0;']]
restartcode
['xcc_util_record_logcat', 35320, 35352, 35352, ['    ']]
code
['xcc_util_record_logcat', 35320, 35352, 35352, ['    if(0 != (r = xcc_util_write_str(fd, "logcat:\\n"))) return r;']]
code
funcline addr: 35356
funcline addr: 35360
funcline addr: 35364
funcline addr: 35368
funcline addr: 35372
funcline addr: 35376
funcline addr: 35380
funcline addr: 35384
funcline addr: 35388
['xcc_util_record_logcat', 35320, 35352, 35388, ['    if(0 != (r = xcc_util_write_str(fd, "logcat:\\n"))) return r;']]
restartcode
['xcc_util_record_logcat', 35320, 35388, 35388, ['']]
code
['xcc_util_record_logcat', 35320, 35388, 35388, ['    if(logcat_main_lines > 0)']]
code
funcline addr: 35392
['xcc_util_record_logcat', 35320, 35388, 35392, ['    if(logcat_main_lines > 0)']]
restartcode
['xcc_util_record_logcat', 35320, 35392, 35392, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "main", logcat_main_lines, \'D\'))) return r;']]
code
funcline addr: 35396
funcline addr: 35400
funcline addr: 35404
funcline addr: 35408
funcline addr: 35412
funcline addr: 35416
funcline addr: 35420
['xcc_util_record_logcat', 35320, 35392, 35420, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "main", logcat_main_lines, \'D\'))) return r;']]
restartcode
['xcc_util_record_logcat', 35320, 35420, 35420, ['    ']]
code
['xcc_util_record_logcat', 35320, 35420, 35420, ['    if(logcat_system_lines > 0)']]
code
funcline addr: 35424
['xcc_util_record_logcat', 35320, 35420, 35424, ['    if(logcat_system_lines > 0)']]
restartcode
['xcc_util_record_logcat', 35320, 35424, 35424, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "system", logcat_system_lines, \'W\'))) return r;']]
code
funcline addr: 35428
funcline addr: 35432
funcline addr: 35436
funcline addr: 35440
funcline addr: 35444
funcline addr: 35448
funcline addr: 35452
['xcc_util_record_logcat', 35320, 35424, 35452, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "system", logcat_system_lines, \'W\'))) return r;']]
restartcode
['xcc_util_record_logcat', 35320, 35452, 35452, ['']]
code
['xcc_util_record_logcat', 35320, 35452, 35452, ['    if(logcat_events_lines > 0)']]
code
funcline addr: 35456
['xcc_util_record_logcat', 35320, 35452, 35456, ['    if(logcat_events_lines > 0)']]
restartcode
['xcc_util_record_logcat', 35320, 35456, 35456, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "events", logcat_events_lines, \'I\'))) return r;']]
code
funcline addr: 35460
funcline addr: 35464
funcline addr: 35468
funcline addr: 35472
funcline addr: 35476
funcline addr: 35480
funcline addr: 35484
['xcc_util_record_logcat', 35320, 35456, 35484, ['        if(0 != (r = xcc_util_record_logcat_buffer(fd, pid, api_level, "events", logcat_events_lines, \'I\'))) return r;']]
restartcode
['xcc_util_record_logcat', 35320, 35484, 35484, ['']]
code
['xcc_util_record_logcat', 35320, 35484, 35484, ['    if(0 != (r = xcc_util_write_str(fd, "\\n"))) return r;']]
code
funcline addr: 35488
funcline addr: 35492
funcline addr: 35496
funcline addr: 35500
funcline addr: 35504
funcline addr: 35508
funcline addr: 35512
funcline addr: 35516
funcline addr: 35520
['xcc_util_record_logcat', 35320, 35484, 35520, ['    if(0 != (r = xcc_util_write_str(fd, "\\n"))) return r;']]
restartcode
['xcc_util_record_logcat', 35320, 35520, 35520, ['']]
code
['xcc_util_record_logcat', 35320, 35520, 35520, ['    return 0;']]
code
['xcc_util_record_logcat', 35320, 35520, 35520, ['}']]
code
funcline addr: 35524
funcline addr: 35528
funcline addr: 35532
funcline addr: 35536
funcline addr: 35540
['xcc_util_record_logcat', 35320, 35520, 35540, ['}']]
restartcode
['xcc_util_record_logcat', 35320, 35540, 35540, ['']]
code
funchead startaddr: 0000000000008ad8,funcname: xcc_util_record_logcat_buffer
['xcc_util_record_logcat_buffer', 35544, 35544, 35544, ['{']]
code
funcline addr: 35544
funcline addr: 35548
funcline addr: 35552
funcline addr: 35556
funcline addr: 35560
funcline addr: 35564
funcline addr: 35568
funcline addr: 35572
funcline addr: 35576
funcline addr: 35580
funcline addr: 35584
funcline addr: 35588
funcline addr: 35592
funcline addr: 35596
funcline addr: 35600
['xcc_util_record_logcat_buffer', 35544, 35544, 35600, ['{']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35600, 35600, ['    char  pid_filter[64] = "";']]
code
funcline addr: 35604
['xcc_util_record_logcat_buffer', 35544, 35600, 35604, ['    char  pid_filter[64] = "";']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35604, 35604, ['    if(with_pid)']]
code
funcline addr: 35608
funcline addr: 35612
['xcc_util_record_logcat_buffer', 35544, 35604, 35612, ['    if(with_pid)']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35612, 35612, ['    char  pid_filter[64] = "";']]
code
funcline addr: 35616
funcline addr: 35620
['xcc_util_record_logcat_buffer', 35544, 35612, 35620, ['    char  pid_filter[64] = "";']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35620, 35620, ['    char  pid_label[32] = "";']]
code
funcline addr: 35624
['xcc_util_record_logcat_buffer', 35544, 35620, 35624, ['    char  pid_label[32] = "";']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35624, 35624, ['    if(with_pid)']]
code
funcline addr: 35628
['xcc_util_record_logcat_buffer', 35544, 35624, 35628, ['    if(with_pid)']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35628, 35628, ['        xcc_fmt_snprintf(pid_filter, sizeof(pid_filter), "--pid %d ", pid);']]
code
funcline addr: 35632
funcline addr: 35636
funcline addr: 35640
funcline addr: 35644
funcline addr: 35648
funcline addr: 35652
funcline addr: 35656
['xcc_util_record_logcat_buffer', 35544, 35628, 35656, ['        xcc_fmt_snprintf(pid_filter, sizeof(pid_filter), "--pid %d ", pid);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35656, 35656, ['        lines = (unsigned int)(lines * 1.2);']]
code
funcline addr: 35660
['xcc_util_record_logcat_buffer', 35544, 35656, 35660, ['        lines = (unsigned int)(lines * 1.2);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35660, 35660, ['        xcc_fmt_snprintf(pid_label, sizeof(pid_label), " %d ", pid);']]
code
funcline addr: 35664
funcline addr: 35668
['xcc_util_record_logcat_buffer', 35544, 35660, 35668, ['        xcc_fmt_snprintf(pid_label, sizeof(pid_label), " %d ", pid);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35668, 35668, ['        lines = (unsigned int)(lines * 1.2);']]
code
funcline addr: 35672
funcline addr: 35676
['xcc_util_record_logcat_buffer', 35544, 35668, 35676, ['        lines = (unsigned int)(lines * 1.2);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35676, 35676, ['        xcc_fmt_snprintf(pid_label, sizeof(pid_label), " %d ", pid);']]
code
funcline addr: 35680
funcline addr: 35684
funcline addr: 35688
['xcc_util_record_logcat_buffer', 35544, 35676, 35688, ['        xcc_fmt_snprintf(pid_label, sizeof(pid_label), " %d ", pid);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35688, 35688, ['    xcc_fmt_snprintf(cmd, sizeof(cmd), "/system/bin/logcat -b %s -d -v threadtime -t %u %s*:%c",']]
code
funcline addr: 35692
['xcc_util_record_logcat_buffer', 35544, 35688, 35692, ['    xcc_fmt_snprintf(cmd, sizeof(cmd), "/system/bin/logcat -b %s -d -v threadtime -t %u %s*:%c",']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35692, 35692, ['                     buffer, lines, pid_filter, priority);']]
code
funcline addr: 35696
['xcc_util_record_logcat_buffer', 35544, 35692, 35696, ['                     buffer, lines, pid_filter, priority);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35696, 35696, ['    xcc_fmt_snprintf(cmd, sizeof(cmd), "/system/bin/logcat -b %s -d -v threadtime -t %u %s*:%c",']]
code
funcline addr: 35700
funcline addr: 35704
funcline addr: 35708
funcline addr: 35712
funcline addr: 35716
funcline addr: 35720
funcline addr: 35724
['xcc_util_record_logcat_buffer', 35544, 35696, 35724, ['    xcc_fmt_snprintf(cmd, sizeof(cmd), "/system/bin/logcat -b %s -d -v threadtime -t %u %s*:%c",']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35724, 35724, ['    if(0 != (r = xcc_util_write_format_safe(fd, "--------- tail end of log %s (%s)\\n", buffer, cmd))) return r;']]
code
funcline addr: 35728
funcline addr: 35732
funcline addr: 35736
funcline addr: 35740
funcline addr: 35744
funcline addr: 35748
funcline addr: 35752
funcline addr: 35756
['xcc_util_record_logcat_buffer', 35544, 35724, 35756, ['    if(0 != (r = xcc_util_write_format_safe(fd, "--------- tail end of log %s (%s)\\n", buffer, cmd))) return r;']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35756, 35756, ['    if(NULL != (fp = popen(cmd, "r")))']]
code
funcline addr: 35760
funcline addr: 35764
funcline addr: 35768
funcline addr: 35772
funcline addr: 35776
funcline addr: 35780
['xcc_util_record_logcat_buffer', 35544, 35756, 35780, ['    if(NULL != (fp = popen(cmd, "r")))']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35780, 35780, ["        buf[sizeof(buf) - 1] = '\\0';"]]
code
funcline addr: 35784
funcline addr: 35788
funcline addr: 35792
['xcc_util_record_logcat_buffer', 35544, 35780, 35792, ["        buf[sizeof(buf) - 1] = '\\0';"]]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35792, 35792, ['        while(NULL != fgets(buf, sizeof(buf) - 1, fp))']]
code
funcline addr: 35796
['xcc_util_record_logcat_buffer', 35544, 35792, 35796, ['        while(NULL != fgets(buf, sizeof(buf) - 1, fp))']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35796, 35796, ['            if(with_pid || NULL != strstr(buf, pid_label))']]
code
funcline addr: 35800
funcline addr: 35804
funcline addr: 35808
funcline addr: 35812
funcline addr: 35816
funcline addr: 35820
['xcc_util_record_logcat_buffer', 35544, 35796, 35820, ['            if(with_pid || NULL != strstr(buf, pid_label))']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35820, 35820, ['                if(0 != (r = xcc_util_write_str(fd, buf))) break;']]
code
funcline addr: 35824
funcline addr: 35828
funcline addr: 35832
funcline addr: 35836
funcline addr: 35840
funcline addr: 35844
funcline addr: 35848
funcline addr: 35852
funcline addr: 35856
['xcc_util_record_logcat_buffer', 35544, 35820, 35856, ['                if(0 != (r = xcc_util_write_str(fd, buf))) break;']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35856, 35856, ['        pclose(fp);']]
code
funcline addr: 35860
funcline addr: 35864
funcline addr: 35868
funcline addr: 35872
funcline addr: 35876
funcline addr: 35880
['xcc_util_record_logcat_buffer', 35544, 35856, 35880, ['        pclose(fp);']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35880, 35880, ['}']]
code
funcline addr: 35884
funcline addr: 35888
funcline addr: 35892
funcline addr: 35896
funcline addr: 35900
funcline addr: 35904
funcline addr: 35908
funcline addr: 35912
funcline addr: 35916
['xcc_util_record_logcat_buffer', 35544, 35880, 35916, ['}']]
restartcode
['xcc_util_record_logcat_buffer', 35544, 35916, 35916, ['']]
code
funchead startaddr: 0000000000008c50,funcname: xcc_util_record_fds
['xcc_util_record_fds', 35920, 35920, 35920, ['']]
code
['xcc_util_record_fds', 35920, 35920, 35920, ['int xcc_util_record_fds(int fd, pid_t pid)']]
code
['xcc_util_record_fds', 35920, 35920, 35920, ['{']]
code
funcline addr: 35920
funcline addr: 35924
funcline addr: 35928
funcline addr: 35932
funcline addr: 35936
funcline addr: 35940
funcline addr: 35944
funcline addr: 35948
funcline addr: 35952
['xcc_util_record_fds', 35920, 35920, 35952, ['{']]
restartcode
['xcc_util_record_fds', 35920, 35952, 35952, ['    size_t             total = 0;']]
code
['xcc_util_record_fds', 35920, 35952, 35952, ['    xcc_util_dirent_t *ent;']]
code
['xcc_util_record_fds', 35920, 35952, 35952, ['    ssize_t            len;']]
code
['xcc_util_record_fds', 35920, 35952, 35952, ['    int                r = 0;']]
code
['xcc_util_record_fds', 35920, 35952, 35952, ['']]
code
['xcc_util_record_fds', 35920, 35952, 35952, ['    if(0 != (r = xcc_util_write_str(fd, "open files:\\n"))) return r;']]
code
funcline addr: 35956
funcline addr: 35960
funcline addr: 35964
funcline addr: 35968
funcline addr: 35972
funcline addr: 35976
funcline addr: 35980
['xcc_util_record_fds', 35920, 35952, 35980, ['    if(0 != (r = xcc_util_write_str(fd, "open files:\\n"))) return r;']]
restartcode
['xcc_util_record_fds', 35920, 35980, 35980, ['']]
code
['xcc_util_record_fds', 35920, 35980, 35980, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/fd", pid);']]
code
funcline addr: 35984
funcline addr: 35988
funcline addr: 35992
funcline addr: 35996
funcline addr: 36000
funcline addr: 36004
funcline addr: 36008
funcline addr: 36012
funcline addr: 36016
funcline addr: 36020
funcline addr: 36024
['xcc_util_record_fds', 35920, 35980, 36024, ['    xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/fd", pid);']]
restartcode
['xcc_util_record_fds', 35920, 36024, 36024, ['    if((fd2 = XCC_UTIL_TEMP_FAILURE_RETRY(open(path, O_RDONLY | O_DIRECTORY | O_CLOEXEC))) < 0) goto end;']]
code
funcline addr: 36028
funcline addr: 36032
funcline addr: 36036
funcline addr: 36040
funcline addr: 36044
funcline addr: 36048
funcline addr: 36052
funcline addr: 36056
funcline addr: 36060
funcline addr: 36064
funcline addr: 36068
funcline addr: 36072
funcline addr: 36076
['xcc_util_record_fds', 35920, 36024, 36076, ['    if((fd2 = XCC_UTIL_TEMP_FAILURE_RETRY(open(path, O_RDONLY | O_DIRECTORY | O_CLOEXEC))) < 0) goto end;']]
restartcode
['xcc_util_record_fds', 35920, 36076, 36076, ['    size_t             total = 0;']]
code
funcline addr: 36080
funcline addr: 36084
funcline addr: 36088
['xcc_util_record_fds', 35920, 36076, 36088, ['    size_t             total = 0;']]
restartcode
['xcc_util_record_fds', 35920, 36088, 36088, ['    ']]
code
['xcc_util_record_fds', 35920, 36088, 36088, ['    while((n = syscall(XCC_UTIL_SYSCALL_GETDENTS, fd2, buf, sizeof(buf))) > 0)']]
code
funcline addr: 36092
funcline addr: 36096
funcline addr: 36100
funcline addr: 36104
funcline addr: 36108
funcline addr: 36112
funcline addr: 36116
funcline addr: 36120
funcline addr: 36124
['xcc_util_record_fds', 35920, 36088, 36124, ['    while((n = syscall(XCC_UTIL_SYSCALL_GETDENTS, fd2, buf, sizeof(buf))) > 0)']]
restartcode
['xcc_util_record_fds', 35920, 36124, 36124, ['    {']]
code
['xcc_util_record_fds', 35920, 36124, 36124, ['        for(i = 0; i < n;)']]
code
funcline addr: 36128
funcline addr: 36132
['xcc_util_record_fds', 35920, 36124, 36132, ['        for(i = 0; i < n;)']]
restartcode
['xcc_util_record_fds', 35920, 36132, 36132, ['        {']]
code
['xcc_util_record_fds', 35920, 36132, 36132, ['            ent = (xcc_util_dirent_t *)(buf + i);']]
code
funcline addr: 36136
['xcc_util_record_fds', 35920, 36132, 36136, ['            ent = (xcc_util_dirent_t *)(buf + i);']]
restartcode
['xcc_util_record_fds', 35920, 36136, 36136, ['']]
code
['xcc_util_record_fds', 35920, 36136, 36136, ['            //get the fd']]
code
['xcc_util_record_fds', 35920, 36136, 36136, ["            if('\\0' == ent->d_name[0]) goto next;"]]
code
funcline addr: 36140
funcline addr: 36144
funcline addr: 36148
funcline addr: 36152
funcline addr: 36156
['xcc_util_record_fds', 35920, 36136, 36156, ["            if('\\0' == ent->d_name[0]) goto next;"]]
restartcode
['xcc_util_record_fds', 35920, 36156, 36156, ['            if(0 == memcmp(ent->d_name, ".", 1)) goto next;']]
code
['xcc_util_record_fds', 35920, 36156, 36156, ['            if(0 == memcmp(ent->d_name, "..", 2)) goto next;']]
code
funcline addr: 36160
funcline addr: 36164
funcline addr: 36168
['xcc_util_record_fds', 35920, 36156, 36168, ['            if(0 == memcmp(ent->d_name, "..", 2)) goto next;']]
restartcode
['xcc_util_record_fds', 35920, 36168, 36168, ['            if(0 != xcc_util_atoi(ent->d_name, &fd_num)) goto next;']]
code
funcline addr: 36172
funcline addr: 36176
funcline addr: 36180
funcline addr: 36184
funcline addr: 36188
['xcc_util_record_fds', 35920, 36168, 36188, ['            if(0 != xcc_util_atoi(ent->d_name, &fd_num)) goto next;']]
restartcode
['xcc_util_record_fds', 35920, 36188, 36188, ['            if(fd_num < 0) goto next;']]
code
['xcc_util_record_fds', 35920, 36188, 36188, ['']]
code
['xcc_util_record_fds', 35920, 36188, 36188, ['            //count']]
code
['xcc_util_record_fds', 35920, 36188, 36188, ['            total++;']]
code
funcline addr: 36192
['xcc_util_record_fds', 35920, 36188, 36192, ['            total++;']]
restartcode
['xcc_util_record_fds', 35920, 36192, 36192, ['            if(total > 1024) goto next;']]
code
funcline addr: 36196
funcline addr: 36200
['xcc_util_record_fds', 35920, 36192, 36200, ['            if(total > 1024) goto next;']]
restartcode
['xcc_util_record_fds', 35920, 36200, 36200, ['']]
code
['xcc_util_record_fds', 35920, 36200, 36200, ['            //read link of the path']]
code
['xcc_util_record_fds', 35920, 36200, 36200, ['            xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/fd/%d", pid, fd_num);']]
code
funcline addr: 36204
funcline addr: 36208
funcline addr: 36212
funcline addr: 36216
funcline addr: 36220
funcline addr: 36224
['xcc_util_record_fds', 35920, 36200, 36224, ['            xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/fd/%d", pid, fd_num);']]
restartcode
['xcc_util_record_fds', 35920, 36224, 36224, ['']]
code
['xcc_util_record_fds', 35920, 36224, 36224, ['    if (!__bos_trivially_ge_no_overflow(bos, size)) {']]
code
['xcc_util_record_fds', 35920, 36224, 36224, ['        return __readlink_chk(path, buf, size, bos);']]
code
['xcc_util_record_fds', 35920, 36224, 36224, ['    }']]
code
['xcc_util_record_fds', 35920, 36224, 36224, ['#endif /* __ANDROID_API__ >= __ANDROID_API_M__ */']]
code
['xcc_util_record_fds', 35920, 36224, 36224, ['    return __call_bypassing_fortify(readlink)(path, buf, size);']]
code
funcline addr: 36228
funcline addr: 36232
funcline addr: 36236
funcline addr: 36240
['xcc_util_record_fds', 35920, 36224, 36240, ['    return __call_bypassing_fortify(readlink)(path, buf, size);']]
restartcode
['xcc_util_record_fds', 35920, 36240, 36240, ['            len = readlink(path, fd_path, sizeof(fd_path) - 1);']]
code
['xcc_util_record_fds', 35920, 36240, 36240, ['            if(len <= 0 || len > (ssize_t)(sizeof(fd_path) - 1))']]
code
funcline addr: 36244
funcline addr: 36248
funcline addr: 36252
['xcc_util_record_fds', 35920, 36240, 36252, ['            if(len <= 0 || len > (ssize_t)(sizeof(fd_path) - 1))']]
restartcode
['xcc_util_record_fds', 35920, 36252, 36252, ['    return __strncpy_chk2(dst, src, n, bos_dst, bos_src);']]
code
funcline addr: 36256
funcline addr: 36260
funcline addr: 36264
funcline addr: 36268
funcline addr: 36272
funcline addr: 36276
funcline addr: 36280
funcline addr: 36284
['xcc_util_record_fds', 35920, 36252, 36284, ['    return __strncpy_chk2(dst, src, n, bos_dst, bos_src);']]
restartcode
['xcc_util_record_fds', 35920, 36284, 36284, ['                strncpy(fd_path, "???", sizeof(fd_path));']]
code
['xcc_util_record_fds', 35920, 36284, 36284, ['            else']]
code
['xcc_util_record_fds', 35920, 36284, 36284, ["                fd_path[len] = '\\0';"]]
code
funcline addr: 36288
funcline addr: 36292
['xcc_util_record_fds', 35920, 36284, 36292, ["                fd_path[len] = '\\0';"]]
restartcode
['xcc_util_record_fds', 35920, 36292, 36292, ['            ']]
code
['xcc_util_record_fds', 35920, 36292, 36292, ['            //dump']]
code
['xcc_util_record_fds', 35920, 36292, 36292, ['            if(0 != (r = xcc_util_write_format_safe(fd, "    fd %d: %s\\n", fd_num, fd_path))) goto clean;']]
code
funcline addr: 36296
funcline addr: 36300
funcline addr: 36304
funcline addr: 36308
funcline addr: 36312
funcline addr: 36316
funcline addr: 36320
['xcc_util_record_fds', 35920, 36292, 36320, ['            if(0 != (r = xcc_util_write_format_safe(fd, "    fd %d: %s\\n", fd_num, fd_path))) goto clean;']]
restartcode
['xcc_util_record_fds', 35920, 36320, 36320, ['            ']]
code
['xcc_util_record_fds', 35920, 36320, 36320, ['        next:']]
code
['xcc_util_record_fds', 35920, 36320, 36320, ['            i += ent->d_reclen;']]
code
funcline addr: 36324
funcline addr: 36328
funcline addr: 36332
funcline addr: 36336
funcline addr: 36340
funcline addr: 36344
funcline addr: 36348
['xcc_util_record_fds', 35920, 36320, 36348, ['            i += ent->d_reclen;']]
restartcode
['xcc_util_record_fds', 35920, 36348, 36348, ['        if(0 != (r = xcc_util_write_str(fd, "    ......\\n"))) goto clean;']]
code
['xcc_util_record_fds', 35920, 36348, 36348, ['    if(0 != (r = xcc_util_write_format_safe(fd, "    (number of FDs: %zu)\\n", total))) goto clean;']]
code
['xcc_util_record_fds', 35920, 36348, 36348, ['    r = xcc_util_write_str(fd, "\\n");']]
code
['xcc_util_record_fds', 35920, 36348, 36348, ['']]
code
['xcc_util_record_fds', 35920, 36348, 36348, [' clean:']]
code
['xcc_util_record_fds', 35920, 36348, 36348, ['    if(fd2 >= 0) close(fd2);']]
code
funcline addr: 36352
funcline addr: 36356
['xcc_util_record_fds', 35920, 36348, 36356, ['    if(fd2 >= 0) close(fd2);']]
restartcode
['xcc_util_record_fds', 35920, 36356, 36356, ['    if(total > 1024)']]
code
funcline addr: 36360
funcline addr: 36364
['xcc_util_record_fds', 35920, 36356, 36364, ['    if(total > 1024)']]
restartcode
['xcc_util_record_fds', 35920, 36364, 36364, ['        if(0 != (r = xcc_util_write_str(fd, "    ......\\n"))) goto clean;']]
code
funcline addr: 36368
funcline addr: 36372
funcline addr: 36376
funcline addr: 36380
funcline addr: 36384
funcline addr: 36388
funcline addr: 36392
funcline addr: 36396
funcline addr: 36400
['xcc_util_record_fds', 35920, 36364, 36400, ['        if(0 != (r = xcc_util_write_str(fd, "    ......\\n"))) goto clean;']]
restartcode
['xcc_util_record_fds', 35920, 36400, 36400, ['    if(0 != (r = xcc_util_write_format_safe(fd, "    (number of FDs: %zu)\\n", total))) goto clean;']]
code
funcline addr: 36404
funcline addr: 36408
funcline addr: 36412
funcline addr: 36416
funcline addr: 36420
funcline addr: 36424
['xcc_util_record_fds', 35920, 36400, 36424, ['    if(0 != (r = xcc_util_write_format_safe(fd, "    (number of FDs: %zu)\\n", total))) goto clean;']]
restartcode
['xcc_util_record_fds', 35920, 36424, 36424, ['    if(fd2 >= 0) close(fd2);']]
code
funcline addr: 36428
funcline addr: 36432
funcline addr: 36436
funcline addr: 36440
funcline addr: 36444
funcline addr: 36448
['xcc_util_record_fds', 35920, 36424, 36448, ['    if(fd2 >= 0) close(fd2);']]
restartcode
['xcc_util_record_fds', 35920, 36448, 36448, ['    return r;']]
code
['xcc_util_record_fds', 35920, 36448, 36448, ['}']]
code
funcline addr: 36452
funcline addr: 36456
funcline addr: 36460
funcline addr: 36464
funcline addr: 36468
['xcc_util_record_fds', 35920, 36448, 36468, ['}']]
restartcode
['xcc_util_record_fds', 35920, 36468, 36468, ['']]
code
funchead startaddr: 0000000000008e78,funcname: xcc_util_record_network_info
['xcc_util_record_network_info', 36472, 36472, 36472, ['']]
code
['xcc_util_record_network_info', 36472, 36472, 36472, ['int xcc_util_record_network_info(int fd, pid_t pid, int api_level)']]
code
['xcc_util_record_network_info', 36472, 36472, 36472, ['{']]
code
funcline addr: 36472
funcline addr: 36476
funcline addr: 36480
funcline addr: 36484
funcline addr: 36488
funcline addr: 36492
funcline addr: 36496
funcline addr: 36500
['xcc_util_record_network_info', 36472, 36472, 36500, ['{']]
restartcode
['xcc_util_record_network_info', 36472, 36500, 36500, ['    int  r;']]
code
['xcc_util_record_network_info', 36472, 36500, 36500, ['    char path[128];']]
code
['xcc_util_record_network_info', 36472, 36500, 36500, ['']]
code
['xcc_util_record_network_info', 36472, 36500, 36500, ['    if(0 != (r = xcc_util_write_str(fd, "network info:\\n"))) return r;']]
code
funcline addr: 36504
funcline addr: 36508
funcline addr: 36512
funcline addr: 36516
funcline addr: 36520
funcline addr: 36524
funcline addr: 36528
funcline addr: 36532
funcline addr: 36536
funcline addr: 36540
['xcc_util_record_network_info', 36472, 36500, 36540, ['    if(0 != (r = xcc_util_write_str(fd, "network info:\\n"))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36540, 36540, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UNIX domain (From: /proc/PID/net/unix)\\n", 256))) return r;']]
code
['xcc_util_record_network_info', 36472, 36540, 36540, ['    }']]
code
['xcc_util_record_network_info', 36472, 36540, 36540, ['']]
code
['xcc_util_record_network_info', 36472, 36540, 36540, ['    if(0 != (r = xcc_util_write_str(fd, "\\n"))) return r;']]
code
['xcc_util_record_network_info', 36472, 36540, 36540, ['    return 0;']]
code
['xcc_util_record_network_info', 36472, 36540, 36540, ['}']]
code
funcline addr: 36544
funcline addr: 36548
funcline addr: 36552
funcline addr: 36556
funcline addr: 36560
['xcc_util_record_network_info', 36472, 36540, 36560, ['}']]
restartcode
['xcc_util_record_network_info', 36472, 36560, 36560, ['    if(api_level >= 29)']]
code
funcline addr: 36564
funcline addr: 36568
['xcc_util_record_network_info', 36472, 36560, 36568, ['    if(api_level >= 29)']]
restartcode
['xcc_util_record_network_info', 36472, 36568, 36568, ['        if(0 != (r = xcc_util_write_str(fd, "Not supported on Android Q (API level 29) and later.\\n"))) return r;']]
code
funcline addr: 36572
funcline addr: 36576
funcline addr: 36580
funcline addr: 36584
funcline addr: 36588
funcline addr: 36592
funcline addr: 36596
['xcc_util_record_network_info', 36472, 36568, 36596, ['        if(0 != (r = xcc_util_write_str(fd, "Not supported on Android Q (API level 29) and later.\\n"))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36596, 36596, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/tcp", pid);']]
code
funcline addr: 36600
funcline addr: 36604
funcline addr: 36608
['xcc_util_record_network_info', 36472, 36596, 36608, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/tcp", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36608, 36608, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " TCP over IPv4 (From: /proc/PID/net/tcp)\\n", 1024))) return r;']]
code
funcline addr: 36612
funcline addr: 36616
funcline addr: 36620
funcline addr: 36624
['xcc_util_record_network_info', 36472, 36608, 36624, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " TCP over IPv4 (From: /proc/PID/net/tcp)\\n", 1024))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36624, 36624, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/tcp6", pid);']]
code
funcline addr: 36628
funcline addr: 36632
funcline addr: 36636
['xcc_util_record_network_info', 36472, 36624, 36636, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/tcp6", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36636, 36636, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " TCP over IPv6 (From: /proc/PID/net/tcp6)\\n", 1024))) return r;']]
code
funcline addr: 36640
funcline addr: 36644
funcline addr: 36648
funcline addr: 36652
['xcc_util_record_network_info', 36472, 36636, 36652, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " TCP over IPv6 (From: /proc/PID/net/tcp6)\\n", 1024))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36652, 36652, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/udp", pid);']]
code
funcline addr: 36656
funcline addr: 36660
funcline addr: 36664
['xcc_util_record_network_info', 36472, 36652, 36664, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/udp", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36664, 36664, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UDP over IPv4 (From: /proc/PID/net/udp)\\n", 1024))) return r;']]
code
funcline addr: 36668
funcline addr: 36672
funcline addr: 36676
funcline addr: 36680
['xcc_util_record_network_info', 36472, 36664, 36680, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UDP over IPv4 (From: /proc/PID/net/udp)\\n", 1024))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36680, 36680, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/udp6", pid);']]
code
funcline addr: 36684
funcline addr: 36688
funcline addr: 36692
['xcc_util_record_network_info', 36472, 36680, 36692, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/udp6", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36692, 36692, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UDP over IPv6 (From: /proc/PID/net/udp6)\\n", 1024))) return r;']]
code
funcline addr: 36696
funcline addr: 36700
funcline addr: 36704
funcline addr: 36708
['xcc_util_record_network_info', 36472, 36692, 36708, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UDP over IPv6 (From: /proc/PID/net/udp6)\\n", 1024))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36708, 36708, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/icmp", pid);']]
code
funcline addr: 36712
funcline addr: 36716
funcline addr: 36720
['xcc_util_record_network_info', 36472, 36708, 36720, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/icmp", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36720, 36720, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " ICMP in IPv4 (From: /proc/PID/net/icmp)\\n", 256))) return r;']]
code
funcline addr: 36724
funcline addr: 36728
funcline addr: 36732
funcline addr: 36736
['xcc_util_record_network_info', 36472, 36720, 36736, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " ICMP in IPv4 (From: /proc/PID/net/icmp)\\n", 256))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36736, 36736, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/icmp6", pid);']]
code
funcline addr: 36740
funcline addr: 36744
funcline addr: 36748
['xcc_util_record_network_info', 36472, 36736, 36748, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/icmp6", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36748, 36748, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " ICMP in IPv6 (From: /proc/PID/net/icmp6)\\n", 256))) return r;']]
code
funcline addr: 36752
funcline addr: 36756
funcline addr: 36760
funcline addr: 36764
['xcc_util_record_network_info', 36472, 36748, 36764, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " ICMP in IPv6 (From: /proc/PID/net/icmp6)\\n", 256))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36764, 36764, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/unix", pid);']]
code
funcline addr: 36768
funcline addr: 36772
funcline addr: 36776
['xcc_util_record_network_info', 36472, 36764, 36776, ['        xcc_fmt_snprintf(path, sizeof(path), "/proc/%d/net/unix", pid);']]
restartcode
['xcc_util_record_network_info', 36472, 36776, 36776, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UNIX domain (From: /proc/PID/net/unix)\\n", 256))) return r;']]
code
funcline addr: 36780
funcline addr: 36784
funcline addr: 36788
funcline addr: 36792
funcline addr: 36796
funcline addr: 36800
['xcc_util_record_network_info', 36472, 36776, 36800, ['        if(0 != (r = xcc_util_record_sub_section_from(fd, path, " UNIX domain (From: /proc/PID/net/unix)\\n", 256))) return r;']]
restartcode
['xcc_util_record_network_info', 36472, 36800, 36800, ['']]
code
funchead startaddr: 0000000000008fc4,funcname: xc_dl_create
['xc_dl_create', 36804, 36804, 36804, ['']]
code
['xc_dl_create', 36804, 36804, 36804, ['    return 0;']]
code
['xc_dl_create', 36804, 36804, 36804, ['}']]
code
['xc_dl_create', 36804, 36804, 36804, ['']]
code
['xc_dl_create', 36804, 36804, 36804, ['xc_dl_t *xc_dl_create(const char *pathname)']]
code
['xc_dl_create', 36804, 36804, 36804, ['{']]
code
funcline addr: 36804
funcline addr: 36808
funcline addr: 36812
funcline addr: 36816
funcline addr: 36820
funcline addr: 36824
funcline addr: 36828
funcline addr: 36832
funcline addr: 36836
funcline addr: 36840
funcline addr: 36844
['xc_dl_create', 36804, 36804, 36844, ['{']]
restartcode
['xc_dl_create', 36804, 36844, 36844, ['    xc_dl_t *self;']]
code
['xc_dl_create', 36804, 36844, 36844, ['']]
code
['xc_dl_create', 36804, 36844, 36844, ['    if(NULL == (self = calloc(1, sizeof(xc_dl_t)))) return NULL;']]
code
funcline addr: 36848
funcline addr: 36852
funcline addr: 36856
funcline addr: 36860
funcline addr: 36864
funcline addr: 36868
funcline addr: 36872
funcline addr: 36876
['xc_dl_create', 36804, 36844, 36876, ['    if(NULL == (self = calloc(1, sizeof(xc_dl_t)))) return NULL;']]
restartcode
['xc_dl_create', 36804, 36876, 36876, ['    self->fd = -1;']]
code
['xc_dl_create', 36804, 36876, 36876, ['    self->data = MAP_FAILED;']]
code
['xc_dl_create', 36804, 36876, 36876, ['    TAILQ_INIT(&(self->symbolsq));']]
code
funcline addr: 36880
funcline addr: 36884
['xc_dl_create', 36804, 36876, 36884, ['    TAILQ_INIT(&(self->symbolsq));']]
restartcode
['xc_dl_create', 36804, 36884, 36884, ['    self->fd = -1;']]
code
funcline addr: 36888
['xc_dl_create', 36804, 36884, 36888, ['    self->fd = -1;']]
restartcode
['xc_dl_create', 36804, 36888, 36888, ['    self->data = MAP_FAILED;']]
code
funcline addr: 36892
['xc_dl_create', 36804, 36888, 36892, ['    self->data = MAP_FAILED;']]
restartcode
['xc_dl_create', 36804, 36892, 36892, ['    TAILQ_INIT(&(self->symbolsq));']]
code
funcline addr: 36896
funcline addr: 36900
['xc_dl_create', 36804, 36892, 36900, ['    TAILQ_INIT(&(self->symbolsq));']]
restartcode
['xc_dl_create', 36804, 36900, 36900, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
code
funcline addr: 36904
funcline addr: 36908
funcline addr: 36912
funcline addr: 36916
funcline addr: 36920
funcline addr: 36924
funcline addr: 36928
funcline addr: 36932
funcline addr: 36936
['xc_dl_create', 36804, 36900, 36936, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 36936, 36936, ['    while(fgets(line, sizeof(line), f))']]
code
funcline addr: 36940
['xc_dl_create', 36804, 36936, 36940, ['    while(fgets(line, sizeof(line), f))']]
restartcode
['xc_dl_create', 36804, 36940, 36940, ['        if(2 != sscanf(line, "%"SCNxPTR"-%*"SCNxPTR" %*4s %"SCNxPTR" %*x:%*x %*d%n", &(self->map_start), &offset, &pos)) continue;']]
code
funcline addr: 36944
funcline addr: 36948
funcline addr: 36952
funcline addr: 36956
funcline addr: 36960
funcline addr: 36964
funcline addr: 36968
funcline addr: 36972
funcline addr: 36976
funcline addr: 36980
['xc_dl_create', 36804, 36940, 36980, ['        if(2 != sscanf(line, "%"SCNxPTR"-%*"SCNxPTR" %*4s %"SCNxPTR" %*x:%*x %*d%n", &(self->map_start), &offset, &pos)) continue;']]
restartcode
['xc_dl_create', 36804, 36980, 36980, ['        p = xcc_util_trim(line + pos);']]
code
funcline addr: 36984
funcline addr: 36988
funcline addr: 36992
['xc_dl_create', 36804, 36980, 36992, ['        p = xcc_util_trim(line + pos);']]
restartcode
['xc_dl_create', 36804, 36992, 36992, ['        if(0 != strcmp(p, pathname)) continue;']]
code
funcline addr: 36996
funcline addr: 37000
funcline addr: 37004
funcline addr: 37008
funcline addr: 37012
funcline addr: 37016
['xc_dl_create', 36804, 36992, 37016, ['        if(0 != strcmp(p, pathname)) continue;']]
restartcode
['xc_dl_create', 36804, 37016, 37016, ['    fclose(f);']]
code
funcline addr: 37020
funcline addr: 37024
funcline addr: 37028
funcline addr: 37032
['xc_dl_create', 36804, 37016, 37032, ['    fclose(f);']]
restartcode
['xc_dl_create', 36804, 37032, 37032, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
code
funcline addr: 37036
funcline addr: 37040
funcline addr: 37044
funcline addr: 37048
funcline addr: 37052
['xc_dl_create', 36804, 37032, 37052, ['    if(NULL == (f = fopen("/proc/self/maps", "r"))) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37052, 37052, ['']]
code
['xc_dl_create', 36804, 37052, 37052, ['    if(0 != xc_dl_find_map_start(self, pathname)) goto err;']]
code
funcline addr: 37056
['xc_dl_create', 36804, 37052, 37056, ['    if(0 != xc_dl_find_map_start(self, pathname)) goto err;']]
restartcode
['xc_dl_create', 36804, 37056, 37056, ['    if(0 != xc_dl_file_open(self, pathname)) goto err;']]
code
funcline addr: 37060
funcline addr: 37064
funcline addr: 37068
funcline addr: 37072
funcline addr: 37076
funcline addr: 37080
['xc_dl_create', 36804, 37056, 37080, ['    if(0 != xc_dl_file_open(self, pathname)) goto err;']]
restartcode
['xc_dl_create', 36804, 37080, 37080, ['    if(0 > (self->fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, O_RDONLY | O_CLOEXEC)))) return XCC_ERRNO_SYS;']]
code
funcline addr: 37084
funcline addr: 37088
funcline addr: 37092
funcline addr: 37096
funcline addr: 37100
funcline addr: 37104
funcline addr: 37108
funcline addr: 37112
funcline addr: 37116
['xc_dl_create', 36804, 37080, 37116, ['    if(0 > (self->fd = XCC_UTIL_TEMP_FAILURE_RETRY(open(pathname, O_RDONLY | O_CLOEXEC)))) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37116, 37116, ['    if(0 != fstat(self->fd, &st) || 0 == st.st_size) return XCC_ERRNO_SYS;']]
code
funcline addr: 37120
funcline addr: 37124
funcline addr: 37128
['xc_dl_create', 36804, 37116, 37128, ['    if(0 != fstat(self->fd, &st) || 0 == st.st_size) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37128, 37128, ['    if(0 != xc_dl_parse_elf(self)) goto err;']]
code
['xc_dl_create', 36804, 37128, 37128, ['    ']]
code
['xc_dl_create', 36804, 37128, 37128, ['    return self;']]
code
['xc_dl_create', 36804, 37128, 37128, ['']]
code
['xc_dl_create', 36804, 37128, 37128, [' err:']]
code
['xc_dl_create', 36804, 37128, 37128, ['    xc_dl_destroy(&self);']]
code
funcline addr: 37132
funcline addr: 37136
funcline addr: 37140
funcline addr: 37144
funcline addr: 37148
funcline addr: 37152
funcline addr: 37156
['xc_dl_create', 36804, 37128, 37156, ['    xc_dl_destroy(&self);']]
restartcode
['xc_dl_create', 36804, 37156, 37156, ['    return NULL;']]
code
['xc_dl_create', 36804, 37156, 37156, ['}']]
code
funcline addr: 37160
funcline addr: 37164
funcline addr: 37168
funcline addr: 37172
funcline addr: 37176
funcline addr: 37180
funcline addr: 37184
funcline addr: 37188
['xc_dl_create', 36804, 37156, 37188, ['}']]
restartcode
['xc_dl_create', 36804, 37188, 37188, ['    if(0 != fstat(self->fd, &st) || 0 == st.st_size) return XCC_ERRNO_SYS;']]
code
funcline addr: 37192
funcline addr: 37196
['xc_dl_create', 36804, 37188, 37196, ['    if(0 != fstat(self->fd, &st) || 0 == st.st_size) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37196, 37196, ['    if(MAP_FAILED == (self->data = (uint8_t *)mmap(NULL, self->size, PROT_READ, MAP_PRIVATE, self->fd, 0))) return XCC_ERRNO_SYS;']]
code
funcline addr: 37200
funcline addr: 37204
funcline addr: 37208
funcline addr: 37212
funcline addr: 37216
['xc_dl_create', 36804, 37196, 37216, ['    if(MAP_FAILED == (self->data = (uint8_t *)mmap(NULL, self->size, PROT_READ, MAP_PRIVATE, self->fd, 0))) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37216, 37216, ['    self->size = (size_t)st.st_size;']]
code
funcline addr: 37220
['xc_dl_create', 36804, 37216, 37220, ['    self->size = (size_t)st.st_size;']]
restartcode
['xc_dl_create', 36804, 37220, 37220, ['    if(MAP_FAILED == (self->data = (uint8_t *)mmap(NULL, self->size, PROT_READ, MAP_PRIVATE, self->fd, 0))) return XCC_ERRNO_SYS;']]
code
funcline addr: 37224
funcline addr: 37228
funcline addr: 37232
funcline addr: 37236
['xc_dl_create', 36804, 37220, 37236, ['    if(MAP_FAILED == (self->data = (uint8_t *)mmap(NULL, self->size, PROT_READ, MAP_PRIVATE, self->fd, 0))) return XCC_ERRNO_SYS;']]
restartcode
['xc_dl_create', 36804, 37236, 37236, ['    if(0 != xc_dl_parse_elf(self)) goto err;']]
code
funcline addr: 37240
['xc_dl_create', 36804, 37236, 37240, ['    if(0 != xc_dl_parse_elf(self)) goto err;']]
restartcode
['xc_dl_create', 36804, 37240, 37240, ['    if(offset + size > self->size) return NULL;']]
code
funcline addr: 37244
funcline addr: 37248
funcline addr: 37252
['xc_dl_create', 36804, 37240, 37252, ['    if(offset + size > self->size) return NULL;']]
restartcode
['xc_dl_create', 36804, 37252, 37252, ['    return (void *)(self->data + offset);']]
code
funcline addr: 37256
['xc_dl_create', 36804, 37252, 37256, ['    return (void *)(self->data + offset);']]
restartcode
['xc_dl_create', 36804, 37256, 37256, ['    if(NULL == (ehdr = xc_dl_file_get(self, 0, sizeof(ElfW(Ehdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37260
funcline addr: 37264
funcline addr: 37268
funcline addr: 37272
funcline addr: 37276
['xc_dl_create', 36804, 37256, 37276, ['    if(NULL == (ehdr = xc_dl_file_get(self, 0, sizeof(ElfW(Ehdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37276, 37276, ['    for(i = 0; i < ehdr->e_phnum * ehdr->e_phentsize; i += ehdr->e_phentsize)']]
code
funcline addr: 37280
funcline addr: 37284
['xc_dl_create', 36804, 37276, 37284, ['    for(i = 0; i < ehdr->e_phnum * ehdr->e_phentsize; i += ehdr->e_phentsize)']]
restartcode
['xc_dl_create', 36804, 37284, 37284, ['        if(NULL == (phdr = xc_dl_file_get(self, ehdr->e_phoff + i, sizeof(ElfW(Phdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37288
['xc_dl_create', 36804, 37284, 37288, ['        if(NULL == (phdr = xc_dl_file_get(self, ehdr->e_phoff + i, sizeof(ElfW(Phdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37288, 37288, ['    if(offset + size > self->size) return NULL;']]
code
funcline addr: 37292
funcline addr: 37296
funcline addr: 37300
funcline addr: 37304
['xc_dl_create', 36804, 37288, 37304, ['    if(offset + size > self->size) return NULL;']]
restartcode
['xc_dl_create', 36804, 37304, 37304, ['        if((PT_LOAD == phdr->p_type) && (phdr->p_flags & PF_X) && (0 == phdr->p_offset))']]
code
funcline addr: 37308
funcline addr: 37312
funcline addr: 37316
funcline addr: 37320
funcline addr: 37324
funcline addr: 37328
funcline addr: 37332
funcline addr: 37336
funcline addr: 37340
funcline addr: 37344
funcline addr: 37348
['xc_dl_create', 36804, 37304, 37348, ['        if((PT_LOAD == phdr->p_type) && (phdr->p_flags & PF_X) && (0 == phdr->p_offset))']]
restartcode
['xc_dl_create', 36804, 37348, 37348, ['    for(i = 0; i < ehdr->e_phnum * ehdr->e_phentsize; i += ehdr->e_phentsize)']]
code
funcline addr: 37352
funcline addr: 37356
['xc_dl_create', 36804, 37348, 37356, ['    for(i = 0; i < ehdr->e_phnum * ehdr->e_phentsize; i += ehdr->e_phentsize)']]
restartcode
['xc_dl_create', 36804, 37356, 37356, ['            self->load_bias = phdr->p_vaddr;']]
code
funcline addr: 37360
funcline addr: 37364
['xc_dl_create', 36804, 37356, 37364, ['            self->load_bias = phdr->p_vaddr;']]
restartcode
['xc_dl_create', 36804, 37364, 37364, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
code
funcline addr: 37368
['xc_dl_create', 36804, 37364, 37368, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
restartcode
['xc_dl_create', 36804, 37368, 37368, ['    size_t           i, cnt = 0;']]
code
funcline addr: 37372
funcline addr: 37376
['xc_dl_create', 36804, 37368, 37376, ['    size_t           i, cnt = 0;']]
restartcode
['xc_dl_create', 36804, 37376, 37376, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
code
funcline addr: 37380
funcline addr: 37384
funcline addr: 37388
funcline addr: 37392
funcline addr: 37396
['xc_dl_create', 36804, 37376, 37396, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
restartcode
['xc_dl_create', 36804, 37396, 37396, ['        if(NULL == (shdr = xc_dl_file_get(self, ehdr->e_shoff + i, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37400
funcline addr: 37404
['xc_dl_create', 36804, 37396, 37404, ['        if(NULL == (shdr = xc_dl_file_get(self, ehdr->e_shoff + i, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37404, 37404, ['    if(offset + size > self->size) return NULL;']]
code
funcline addr: 37408
funcline addr: 37412
funcline addr: 37416
['xc_dl_create', 36804, 37404, 37416, ['    if(offset + size > self->size) return NULL;']]
restartcode
['xc_dl_create', 36804, 37416, 37416, ['    return (void *)(self->data + offset);']]
code
funcline addr: 37420
funcline addr: 37424
['xc_dl_create', 36804, 37416, 37424, ['    return (void *)(self->data + offset);']]
restartcode
['xc_dl_create', 36804, 37424, 37424, ['        if(NULL == (shdr = xc_dl_file_get(self, ehdr->e_shoff + i, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37428
['xc_dl_create', 36804, 37424, 37428, ['        if(NULL == (shdr = xc_dl_file_get(self, ehdr->e_shoff + i, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37428, 37428, ['        if(SHT_SYMTAB == shdr->sh_type || SHT_DYNSYM == shdr->sh_type)']]
code
funcline addr: 37432
funcline addr: 37436
funcline addr: 37440
funcline addr: 37444
['xc_dl_create', 36804, 37428, 37444, ['        if(SHT_SYMTAB == shdr->sh_type || SHT_DYNSYM == shdr->sh_type)']]
restartcode
['xc_dl_create', 36804, 37444, 37444, ['            if(shdr->sh_link >= ehdr->e_shnum) continue;']]
code
funcline addr: 37448
funcline addr: 37452
funcline addr: 37456
['xc_dl_create', 36804, 37444, 37456, ['            if(shdr->sh_link >= ehdr->e_shnum) continue;']]
restartcode
['xc_dl_create', 36804, 37456, 37456, ['            if(NULL == (str_shdr = xc_dl_file_get(self, ehdr->e_shoff + shdr->sh_link * ehdr->e_shentsize, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37460
funcline addr: 37464
funcline addr: 37468
['xc_dl_create', 36804, 37456, 37468, ['            if(NULL == (str_shdr = xc_dl_file_get(self, ehdr->e_shoff + shdr->sh_link * ehdr->e_shentsize, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37468, 37468, ['    if(offset + size > self->size) return NULL;']]
code
funcline addr: 37472
funcline addr: 37476
funcline addr: 37480
['xc_dl_create', 36804, 37468, 37480, ['    if(offset + size > self->size) return NULL;']]
restartcode
['xc_dl_create', 36804, 37480, 37480, ['    return (void *)(self->data + offset);']]
code
funcline addr: 37484
['xc_dl_create', 36804, 37480, 37484, ['    return (void *)(self->data + offset);']]
restartcode
['xc_dl_create', 36804, 37484, 37484, ['            if(NULL == (str_shdr = xc_dl_file_get(self, ehdr->e_shoff + shdr->sh_link * ehdr->e_shentsize, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
code
funcline addr: 37488
['xc_dl_create', 36804, 37484, 37488, ['            if(NULL == (str_shdr = xc_dl_file_get(self, ehdr->e_shoff + shdr->sh_link * ehdr->e_shentsize, sizeof(ElfW(Shdr))))) return XCC_ERRNO_FORMAT;']]
restartcode
['xc_dl_create', 36804, 37488, 37488, ['            if(SHT_STRTAB != str_shdr->sh_type) continue;']]
code
funcline addr: 37492
funcline addr: 37496
funcline addr: 37500
['xc_dl_create', 36804, 37488, 37500, ['            if(SHT_STRTAB != str_shdr->sh_type) continue;']]
restartcode
['xc_dl_create', 36804, 37500, 37500, ['            if(NULL == (symbols = malloc(sizeof(xc_dl_symbols_t)))) return XCC_ERRNO_NOMEM;']]
code
funcline addr: 37504
funcline addr: 37508
funcline addr: 37512
['xc_dl_create', 36804, 37500, 37512, ['            if(NULL == (symbols = malloc(sizeof(xc_dl_symbols_t)))) return XCC_ERRNO_NOMEM;']]
restartcode
['xc_dl_create', 36804, 37512, 37512, ['            symbols->sym_offset = shdr->sh_offset;']]
code
funcline addr: 37516
['xc_dl_create', 36804, 37512, 37516, ['            symbols->sym_offset = shdr->sh_offset;']]
restartcode
['xc_dl_create', 36804, 37516, 37516, ['            TAILQ_INSERT_TAIL(&(self->symbolsq), symbols, link);']]
code
funcline addr: 37520
['xc_dl_create', 36804, 37516, 37520, ['            TAILQ_INSERT_TAIL(&(self->symbolsq), symbols, link);']]
restartcode
['xc_dl_create', 36804, 37520, 37520, ['            cnt++;']]
code
funcline addr: 37524
['xc_dl_create', 36804, 37520, 37524, ['            cnt++;']]
restartcode
['xc_dl_create', 36804, 37524, 37524, ['            symbols->sym_offset = shdr->sh_offset;']]
code
funcline addr: 37528
['xc_dl_create', 36804, 37524, 37528, ['            symbols->sym_offset = shdr->sh_offset;']]
restartcode
['xc_dl_create', 36804, 37528, 37528, ['            symbols->sym_end = shdr->sh_offset + shdr->sh_size;']]
code
funcline addr: 37532
funcline addr: 37536
funcline addr: 37540
['xc_dl_create', 36804, 37528, 37540, ['            symbols->sym_end = shdr->sh_offset + shdr->sh_size;']]
restartcode
['xc_dl_create', 36804, 37540, 37540, ['            symbols->sym_entry_size = shdr->sh_entsize;']]
code
funcline addr: 37544
funcline addr: 37548
['xc_dl_create', 36804, 37540, 37548, ['            symbols->sym_entry_size = shdr->sh_entsize;']]
restartcode
['xc_dl_create', 36804, 37548, 37548, ['            symbols->str_offset = str_shdr->sh_offset;']]
code
funcline addr: 37552
funcline addr: 37556
['xc_dl_create', 36804, 37548, 37556, ['            symbols->str_offset = str_shdr->sh_offset;']]
restartcode
['xc_dl_create', 36804, 37556, 37556, ['            symbols->str_end = str_shdr->sh_offset + str_shdr->sh_size;']]
code
funcline addr: 37560
funcline addr: 37564
funcline addr: 37568
['xc_dl_create', 36804, 37556, 37568, ['            symbols->str_end = str_shdr->sh_offset + str_shdr->sh_size;']]
restartcode
['xc_dl_create', 36804, 37568, 37568, ['            TAILQ_INSERT_TAIL(&(self->symbolsq), symbols, link);']]
code
funcline addr: 37572
funcline addr: 37576
funcline addr: 37580
funcline addr: 37584
funcline addr: 37588
['xc_dl_create', 36804, 37568, 37588, ['            TAILQ_INSERT_TAIL(&(self->symbolsq), symbols, link);']]
restartcode
['xc_dl_create', 36804, 37588, 37588, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
code
funcline addr: 37592
funcline addr: 37596
funcline addr: 37600
funcline addr: 37604
funcline addr: 37608
['xc_dl_create', 36804, 37588, 37608, ['    for(i = ehdr->e_shentsize; i < ehdr->e_shnum * ehdr->e_shentsize; i += ehdr->e_shentsize)']]
restartcode
['xc_dl_create', 36804, 37608, 37608, ['    return self;']]
code
funcline addr: 37612
funcline addr: 37616
funcline addr: 37620
['xc_dl_create', 36804, 37608, 37620, ['    return self;']]
restartcode
['xc_dl_create', 36804, 37620, 37620, ['']]
code
funchead startaddr: 00000000000092f8,funcname: xc_dl_destroy
['xc_dl_destroy', 37624, 37624, 37624, ['']]
code
['xc_dl_destroy', 37624, 37624, 37624, ['void xc_dl_destroy(xc_dl_t **self)']]
code
['xc_dl_destroy', 37624, 37624, 37624, ['{']]
code
funcline addr: 37624
funcline addr: 37628
funcline addr: 37632
['xc_dl_destroy', 37624, 37624, 37632, ['{']]
restartcode
['xc_dl_destroy', 37624, 37632, 37632, ['    xc_dl_symbols_t *symbols, *symbols_tmp;']]
code
['xc_dl_destroy', 37624, 37632, 37632, ['    ']]
code
['xc_dl_destroy', 37624, 37632, 37632, ['    if(NULL == self || NULL == *self) return;']]
code
funcline addr: 37636
funcline addr: 37640
funcline addr: 37644
funcline addr: 37648
['xc_dl_destroy', 37624, 37632, 37648, ['    if(NULL == self || NULL == *self) return;']]
restartcode
['xc_dl_destroy', 37624, 37648, 37648, ['    ']]
code
['xc_dl_destroy', 37624, 37648, 37648, ['    if(MAP_FAILED != (*self)->data) munmap((*self)->data, (*self)->size);']]
code
funcline addr: 37652
funcline addr: 37656
funcline addr: 37660
funcline addr: 37664
funcline addr: 37668
['xc_dl_destroy', 37624, 37648, 37668, ['    if(MAP_FAILED != (*self)->data) munmap((*self)->data, (*self)->size);']]
restartcode
['xc_dl_destroy', 37624, 37668, 37668, ['    ']]
code
['xc_dl_destroy', 37624, 37668, 37668, ['    if((*self)->fd >= 0) close((*self)->fd);']]
code
funcline addr: 37672
funcline addr: 37676
funcline addr: 37680
funcline addr: 37684
['xc_dl_destroy', 37624, 37668, 37684, ['    if((*self)->fd >= 0) close((*self)->fd);']]
restartcode
['xc_dl_destroy', 37624, 37684, 37684, ['    ']]
code
['xc_dl_destroy', 37624, 37684, 37684, ['    TAILQ_FOREACH_SAFE(symbols, &((*self)->symbolsq), link, symbols_tmp)']]
code
funcline addr: 37688
funcline addr: 37692
funcline addr: 37696
funcline addr: 37700
['xc_dl_destroy', 37624, 37684, 37700, ['    TAILQ_FOREACH_SAFE(symbols, &((*self)->symbolsq), link, symbols_tmp)']]
restartcode
['xc_dl_destroy', 37624, 37700, 37700, ['    {']]
code
['xc_dl_destroy', 37624, 37700, 37700, ['        TAILQ_REMOVE(&((*self)->symbolsq), symbols, link);']]
code
funcline addr: 37704
funcline addr: 37708
funcline addr: 37712
funcline addr: 37716
funcline addr: 37720
funcline addr: 37724
funcline addr: 37728
['xc_dl_destroy', 37624, 37700, 37728, ['        TAILQ_REMOVE(&((*self)->symbolsq), symbols, link);']]
restartcode
['xc_dl_destroy', 37624, 37728, 37728, ['        free(symbols);']]
code
funcline addr: 37732
funcline addr: 37736
['xc_dl_destroy', 37624, 37728, 37736, ['        free(symbols);']]
restartcode
['xc_dl_destroy', 37624, 37736, 37736, ['    TAILQ_FOREACH_SAFE(symbols, &((*self)->symbolsq), link, symbols_tmp)']]
code
funcline addr: 37740
['xc_dl_destroy', 37624, 37736, 37740, ['    TAILQ_FOREACH_SAFE(symbols, &((*self)->symbolsq), link, symbols_tmp)']]
restartcode
['xc_dl_destroy', 37624, 37740, 37740, ['    }']]
code
['xc_dl_destroy', 37624, 37740, 37740, ['    ']]
code
['xc_dl_destroy', 37624, 37740, 37740, ['    free(*self);']]
code
funcline addr: 37744
funcline addr: 37748
['xc_dl_destroy', 37624, 37740, 37748, ['    free(*self);']]
restartcode
['xc_dl_destroy', 37624, 37748, 37748, ['    *self = NULL;']]
code
funcline addr: 37752
['xc_dl_destroy', 37624, 37748, 37752, ['    *self = NULL;']]
restartcode
['xc_dl_destroy', 37624, 37752, 37752, ['}']]
code
funcline addr: 37756
funcline addr: 37760
funcline addr: 37764
['xc_dl_destroy', 37624, 37752, 37764, ['}']]
restartcode
['xc_dl_destroy', 37624, 37764, 37764, ['']]
code
funchead startaddr: 0000000000009388,funcname: xc_dl_sym
['xc_dl_sym', 37768, 37768, 37768, ['']]
code
['xc_dl_sym', 37768, 37768, 37768, ['void *xc_dl_sym(xc_dl_t *self, const char *symbol)']]
code
['xc_dl_sym', 37768, 37768, 37768, ['{']]
code
funcline addr: 37768
funcline addr: 37772
funcline addr: 37776
funcline addr: 37780
funcline addr: 37784
funcline addr: 37788
funcline addr: 37792
['xc_dl_sym', 37768, 37768, 37792, ['{']]
restartcode
['xc_dl_sym', 37768, 37792, 37792, ['    xc_dl_symbols_t *symbols;']]
code
['xc_dl_sym', 37768, 37792, 37792, ['    ElfW(Sym)       *sym;']]
code
['xc_dl_sym', 37768, 37792, 37792, ['    size_t           offset, str_offset;']]
code
['xc_dl_sym', 37768, 37792, 37792, ['    char            *str;']]
code
['xc_dl_sym', 37768, 37792, 37792, ['']]
code
['xc_dl_sym', 37768, 37792, 37792, ['    TAILQ_FOREACH(symbols, &(self->symbolsq), link)']]
code
funcline addr: 37796
funcline addr: 37800
funcline addr: 37804
['xc_dl_sym', 37768, 37792, 37804, ['    TAILQ_FOREACH(symbols, &(self->symbolsq), link)']]
restartcode
['xc_dl_sym', 37768, 37804, 37804, ['    {']]
code
['xc_dl_sym', 37768, 37804, 37804, ['        for(offset = symbols->sym_offset; offset < symbols->sym_end; offset += symbols->sym_entry_size)']]
code
funcline addr: 37808
funcline addr: 37812
funcline addr: 37816
['xc_dl_sym', 37768, 37804, 37816, ['        for(offset = symbols->sym_offset; offset < symbols->sym_end; offset += symbols->sym_entry_size)']]
restartcode
['xc_dl_sym', 37768, 37816, 37816, ['    if(offset + size > self->size) return NULL;']]
code
funcline addr: 37820
funcline addr: 37824
funcline addr: 37828
funcline addr: 37832
['xc_dl_sym', 37768, 37816, 37832, ['    if(offset + size > self->size) return NULL;']]
restartcode
['xc_dl_sym', 37768, 37832, 37832, ['    return (void *)(self->data + offset);']]
code
funcline addr: 37836
funcline addr: 37840
['xc_dl_sym', 37768, 37832, 37840, ['    return (void *)(self->data + offset);']]
restartcode
['xc_dl_sym', 37768, 37840, 37840, ['        {']]
code
['xc_dl_sym', 37768, 37840, 37840, ['            //read .symtab / .dynsym']]
code
['xc_dl_sym', 37768, 37840, 37840, ['            if(NULL == (sym = xc_dl_file_get(self, offset, sizeof(ElfW(Sym))))) break;']]
code
funcline addr: 37844
['xc_dl_sym', 37768, 37840, 37844, ['            if(NULL == (sym = xc_dl_file_get(self, offset, sizeof(ElfW(Sym))))) break;']]
restartcode
['xc_dl_sym', 37768, 37844, 37844, ['            if(SHN_UNDEF == sym->st_shndx) continue;']]
code
funcline addr: 37848
funcline addr: 37852
['xc_dl_sym', 37768, 37844, 37852, ['            if(SHN_UNDEF == sym->st_shndx) continue;']]
restartcode
['xc_dl_sym', 37768, 37852, 37852, ['']]
code
['xc_dl_sym', 37768, 37852, 37852, ['            //read .strtab / .dynstr']]
code
['xc_dl_sym', 37768, 37852, 37852, ['            str_offset = symbols->str_offset + sym->st_name;']]
code
funcline addr: 37856
funcline addr: 37860
funcline addr: 37864
['xc_dl_sym', 37768, 37852, 37864, ['            str_offset = symbols->str_offset + sym->st_name;']]
restartcode
['xc_dl_sym', 37768, 37864, 37864, ['            if(str_offset >= symbols->str_end) continue;']]
code
funcline addr: 37868
funcline addr: 37872
['xc_dl_sym', 37768, 37864, 37872, ['            if(str_offset >= symbols->str_end) continue;']]
restartcode
['xc_dl_sym', 37768, 37872, 37872, ['    uint8_t *p = self->data + offset;']]
code
funcline addr: 37876
funcline addr: 37880
funcline addr: 37884
['xc_dl_sym', 37768, 37872, 37884, ['    uint8_t *p = self->data + offset;']]
restartcode
['xc_dl_sym', 37768, 37884, 37884, ['    while(p < self->data + self->size)']]
code
funcline addr: 37888
funcline addr: 37892
['xc_dl_sym', 37768, 37884, 37892, ['    while(p < self->data + self->size)']]
restartcode
['xc_dl_sym', 37768, 37892, 37892, ["        if('\\0' == *p) return (char *)(self->data + offset);"]]
code
funcline addr: 37896
funcline addr: 37900
['xc_dl_sym', 37768, 37892, 37900, ["        if('\\0' == *p) return (char *)(self->data + offset);"]]
restartcode
['xc_dl_sym', 37768, 37900, 37900, ['            if(NULL == (str = xc_dl_file_get_string(self, str_offset))) continue;']]
code
funcline addr: 37904
['xc_dl_sym', 37768, 37900, 37904, ['            if(NULL == (str = xc_dl_file_get_string(self, str_offset))) continue;']]
restartcode
['xc_dl_sym', 37768, 37904, 37904, ['']]
code
['xc_dl_sym', 37768, 37904, 37904, ['            //compare symbol name']]
code
['xc_dl_sym', 37768, 37904, 37904, ['            if(0 != strcmp(symbol, str)) continue;']]
code
funcline addr: 37908
funcline addr: 37912
funcline addr: 37916
['xc_dl_sym', 37768, 37904, 37916, ['            if(0 != strcmp(symbol, str)) continue;']]
restartcode
['xc_dl_sym', 37768, 37916, 37916, ['        for(offset = symbols->sym_offset; offset < symbols->sym_end; offset += symbols->sym_entry_size)']]
code
funcline addr: 37920
funcline addr: 37924
funcline addr: 37928
['xc_dl_sym', 37768, 37916, 37928, ['        for(offset = symbols->sym_offset; offset < symbols->sym_end; offset += symbols->sym_entry_size)']]
restartcode
['xc_dl_sym', 37768, 37928, 37928, ['    TAILQ_FOREACH(symbols, &(self->symbolsq), link)']]
code
funcline addr: 37932
funcline addr: 37936
funcline addr: 37940
funcline addr: 37944
['xc_dl_sym', 37768, 37928, 37944, ['    TAILQ_FOREACH(symbols, &(self->symbolsq), link)']]
restartcode
['xc_dl_sym', 37768, 37944, 37944, ['']]
code
['xc_dl_sym', 37768, 37944, 37944, ['            //found']]
code
['xc_dl_sym', 37768, 37944, 37944, ['            return (void *)(self->map_start + sym->st_value - self->load_bias);']]
code
funcline addr: 37948
funcline addr: 37952
funcline addr: 37956
funcline addr: 37960
funcline addr: 37964
['xc_dl_sym', 37768, 37944, 37964, ['            return (void *)(self->map_start + sym->st_value - self->load_bias);']]
restartcode
['xc_dl_sym', 37768, 37964, 37964, ['        }']]
code
['xc_dl_sym', 37768, 37964, 37964, ['    }']]
code
['xc_dl_sym', 37768, 37964, 37964, ['    ']]
code
['xc_dl_sym', 37768, 37964, 37964, ['    return NULL;']]
code
['xc_dl_sym', 37768, 37964, 37964, ['}']]
code
funcline addr: 37968
funcline addr: 37972
funcline addr: 37976
funcline addr: 37980
funcline addr: 37984
['xc_dl_sym', 37768, 37964, 37984, ['}']]
restartcode
['xc_dl_sym', 37768, 37984, 37984, ['']]
code
funchead startaddr: 0000000000009464,funcname: OUTLINED_FUNCTION_0
funcline addr: 37988
funcline addr: 37992
funcline addr: 37996
funcline addr: 38000
funcline addr: 38004
funcline addr: 38008
funcline addr: 38012
funcline addr: 38016
funcline addr: 38020
funcline addr: 38024
funcline addr: 38028
funcline addr: 38032
funcline addr: 38036
funcline addr: 38040
funcline addr: 38044
funcline addr: 38048
funcline addr: 38052
funcline addr: 38056
funcline addr: 38060
funcline addr: 38064
funcline addr: 38068
['OUTLINED_FUNCTION_0', 37988, 37988, 38068, []]
restartcode
['OUTLINED_FUNCTION_0', 37988, 38068, 38068, ['']]
code
funchead startaddr: 00000000000094b8,funcname: OUTLINED_FUNCTION_1
funcline addr: 38072
funcline addr: 38076
funcline addr: 38080
funcline addr: 38084
['OUTLINED_FUNCTION_1', 38072, 38072, 38084, []]
restartcode
['OUTLINED_FUNCTION_1', 38072, 38084, 38084, ['']]
code
funchead startaddr: 00000000000094c8,funcname: OUTLINED_FUNCTION_2
funcline addr: 38088
funcline addr: 38092
funcline addr: 38096
funcline addr: 38100
funcline addr: 38104
funcline addr: 38108
['OUTLINED_FUNCTION_2', 38088, 38088, 38108, []]
restartcode
['OUTLINED_FUNCTION_2', 38088, 38108, 38108, ['']]
code
funchead startaddr: 00000000000094e0,funcname: OUTLINED_FUNCTION_3
funcline addr: 38112
funcline addr: 38116
funcline addr: 38120
funcline addr: 38124
['OUTLINED_FUNCTION_3', 38112, 38112, 38124, []]
restartcode
['OUTLINED_FUNCTION_3', 38112, 38124, 38124, ['']]
code
funchead startaddr: 00000000000094f0,funcname: OUTLINED_FUNCTION_4
funcline addr: 38128
funcline addr: 38132
['OUTLINED_FUNCTION_4', 38128, 38128, 38132, []]
restartcode
['OUTLINED_FUNCTION_4', 38128, 38132, 38132, ['']]
code
funchead startaddr: 00000000000094f8,funcname: OUTLINED_FUNCTION_5
funcline addr: 38136
funcline addr: 38140
funcline addr: 38144
funcline addr: 38148
['OUTLINED_FUNCTION_5', 38136, 38136, 38148, []]
restartcode
['OUTLINED_FUNCTION_5', 38136, 38148, 38148, ['']]
code
funchead startaddr: 0000000000009508,funcname: OUTLINED_FUNCTION_6
funcline addr: 38152
funcline addr: 38156
funcline addr: 38160
funcline addr: 38164
funcline addr: 38168
funcline addr: 38172
['OUTLINED_FUNCTION_6', 38152, 38152, 38172, []]
restartcode
['OUTLINED_FUNCTION_6', 38152, 38172, 38172, ['']]
code
funchead startaddr: 0000000000009520,funcname: OUTLINED_FUNCTION_7
funcline addr: 38176
funcline addr: 38180
funcline addr: 38184
funcline addr: 38188
funcline addr: 38192
funcline addr: 38196
funcline addr: 38200
funcline addr: 38204
funcline addr: 38208
funcline addr: 38212
funcline addr: 38216
['OUTLINED_FUNCTION_7', 38176, 38176, 38216, []]
restartcode
['OUTLINED_FUNCTION_7', 38176, 38216, 38216, ['']]
code
funchead startaddr: 000000000000954c,funcname: OUTLINED_FUNCTION_8
funcline addr: 38220
funcline addr: 38224
funcline addr: 38228
['OUTLINED_FUNCTION_8', 38220, 38220, 38228, []]
restartcode
['OUTLINED_FUNCTION_8', 38220, 38228, 38228, ['']]
code
funchead startaddr: 0000000000009558,funcname: OUTLINED_FUNCTION_9
funcline addr: 38232
funcline addr: 38236
funcline addr: 38240
['OUTLINED_FUNCTION_9', 38232, 38232, 38240, []]
restartcode
['OUTLINED_FUNCTION_9', 38232, 38240, 38240, ['']]
code
funchead startaddr: 0000000000009564,funcname: OUTLINED_FUNCTION_10
funcline addr: 38244
funcline addr: 38248
['OUTLINED_FUNCTION_10', 38244, 38244, 38248, []]
restartcode
['OUTLINED_FUNCTION_10', 38244, 38248, 38248, ['']]
code
funchead startaddr: 000000000000956c,funcname: OUTLINED_FUNCTION_11
funcline addr: 38252
funcline addr: 38256
funcline addr: 38260
funcline addr: 38264
['OUTLINED_FUNCTION_11', 38252, 38252, 38264, []]
restartcode
['OUTLINED_FUNCTION_11', 38252, 38264, 38264, ['']]
code
funchead startaddr: 000000000000957c,funcname: OUTLINED_FUNCTION_12
funcline addr: 38268
funcline addr: 38272
['OUTLINED_FUNCTION_12', 38268, 38268, 38272, []]
restartcode
['OUTLINED_FUNCTION_12', 38268, 38272, 38272, ['']]
code
funchead startaddr: 0000000000009584,funcname: OUTLINED_FUNCTION_13
funcline addr: 38276
funcline addr: 38280
funcline addr: 38284
funcline addr: 38288
['OUTLINED_FUNCTION_13', 38276, 38276, 38288, []]
restartcode
['OUTLINED_FUNCTION_13', 38276, 38288, 38288, ['']]
code
funchead startaddr: 0000000000009594,funcname: OUTLINED_FUNCTION_14
funcline addr: 38292
funcline addr: 38296
funcline addr: 38300
['OUTLINED_FUNCTION_14', 38292, 38292, 38300, []]
restartcode
['OUTLINED_FUNCTION_14', 38292, 38300, 38300, ['']]
code
funchead startaddr: 00000000000095a0,funcname: OUTLINED_FUNCTION_15
funcline addr: 38304
funcline addr: 38308
funcline addr: 38312
['OUTLINED_FUNCTION_15', 38304, 38304, 38312, []]
restartcode
['OUTLINED_FUNCTION_15', 38304, 38312, 38312, ['']]
code
funchead startaddr: 00000000000095ac,funcname: OUTLINED_FUNCTION_16
funcline addr: 38316
funcline addr: 38320
funcline addr: 38324
funcline addr: 38328
funcline addr: 38332
funcline addr: 38336
funcline addr: 38340
['OUTLINED_FUNCTION_16', 38316, 38316, 38340, []]
restartcode
['OUTLINED_FUNCTION_16', 38316, 38340, 38340, ['']]
code
funchead startaddr: 00000000000095c8,funcname: OUTLINED_FUNCTION_17
funcline addr: 38344
funcline addr: 38348
funcline addr: 38352
['OUTLINED_FUNCTION_17', 38344, 38344, 38352, []]
restartcode
['OUTLINED_FUNCTION_17', 38344, 38352, 38352, ['']]
code
funchead startaddr: 00000000000095d4,funcname: OUTLINED_FUNCTION_18
funcline addr: 38356
funcline addr: 38360
['OUTLINED_FUNCTION_18', 38356, 38356, 38360, []]
restartcode
['OUTLINED_FUNCTION_18', 38356, 38360, 38360, ['']]
code
funchead startaddr: 00000000000095dc,funcname: OUTLINED_FUNCTION_19
funcline addr: 38364
funcline addr: 38368
['OUTLINED_FUNCTION_19', 38364, 38364, 38368, []]
restartcode
['OUTLINED_FUNCTION_19', 38364, 38368, 38368, ['']]
code
funchead startaddr: 00000000000095e4,funcname: OUTLINED_FUNCTION_20
funcline addr: 38372
funcline addr: 38376
funcline addr: 38380
['OUTLINED_FUNCTION_20', 38372, 38372, 38380, []]
restartcode
['OUTLINED_FUNCTION_20', 38372, 38380, 38380, ['']]
code
funchead startaddr: 00000000000095f0,funcname: OUTLINED_FUNCTION_21
funcline addr: 38384
funcline addr: 38388
funcline addr: 38392
funcline addr: 38396
funcline addr: 38400
funcline addr: 38404
['OUTLINED_FUNCTION_21', 38384, 38384, 38404, []]
restartcode
['OUTLINED_FUNCTION_21', 38384, 38404, 38404, ['']]
code
funchead startaddr: 0000000000009608,funcname: OUTLINED_FUNCTION_22
funcline addr: 38408
funcline addr: 38412
funcline addr: 38416
funcline addr: 38420
funcline addr: 38424
funcline addr: 38428
['OUTLINED_FUNCTION_22', 38408, 38408, 38428, []]
restartcode
['OUTLINED_FUNCTION_22', 38408, 38428, 38428, ['']]
code
funchead startaddr: 0000000000009620,funcname: OUTLINED_FUNCTION_23
funcline addr: 38432
funcline addr: 38436
funcline addr: 38440
funcline addr: 38444
funcline addr: 38448
funcline addr: 38452
['OUTLINED_FUNCTION_23', 38432, 38432, 38452, []]
restartcode
['OUTLINED_FUNCTION_23', 38432, 38452, 38452, ['']]
code
funchead startaddr: 0000000000009638,funcname: OUTLINED_FUNCTION_24
funcline addr: 38456
funcline addr: 38460
funcline addr: 38464
['OUTLINED_FUNCTION_24', 38456, 38456, 38464, []]
restartcode
['OUTLINED_FUNCTION_24', 38456, 38464, 38464, ['']]
code
funchead startaddr: 0000000000009644,funcname: OUTLINED_FUNCTION_25
funcline addr: 38468
funcline addr: 38472
funcline addr: 38476
funcline addr: 38480
['OUTLINED_FUNCTION_25', 38468, 38468, 38480, []]
restartcode
['OUTLINED_FUNCTION_25', 38468, 38480, 38480, ['']]
code
funchead startaddr: 0000000000009654,funcname: OUTLINED_FUNCTION_26
funcline addr: 38484
funcline addr: 38488
funcline addr: 38492
funcline addr: 38496
funcline addr: 38500
funcline addr: 38504
['OUTLINED_FUNCTION_26', 38484, 38484, 38504, []]
restartcode
['OUTLINED_FUNCTION_26', 38484, 38504, 38504, ['']]
code
funchead startaddr: 000000000000966c,funcname: OUTLINED_FUNCTION_27
funcline addr: 38508
funcline addr: 38512
funcline addr: 38516
funcline addr: 38520
funcline addr: 38524
funcline addr: 38528
['OUTLINED_FUNCTION_27', 38508, 38508, 38528, []]
restartcode
['OUTLINED_FUNCTION_27', 38508, 38528, 38528, ['']]
code
funchead startaddr: 0000000000009684,funcname: OUTLINED_FUNCTION_28
funcline addr: 38532
funcline addr: 38536
funcline addr: 38540
['OUTLINED_FUNCTION_28', 38532, 38532, 38540, []]
restartcode
['OUTLINED_FUNCTION_28', 38532, 38540, 38540, ['']]
code
funchead startaddr: 0000000000009690,funcname: OUTLINED_FUNCTION_29
funcline addr: 38544
funcline addr: 38548
funcline addr: 38552
['OUTLINED_FUNCTION_29', 38544, 38544, 38552, []]
restartcode
['OUTLINED_FUNCTION_29', 38544, 38552, 38552, ['']]
code
funchead startaddr: 000000000000969c,funcname: OUTLINED_FUNCTION_30
funcline addr: 38556
funcline addr: 38560
funcline addr: 38564
['OUTLINED_FUNCTION_30', 38556, 38556, 38564, []]
restartcode
['OUTLINED_FUNCTION_30', 38556, 38564, 38564, ['']]
code
funchead startaddr: 00000000000096a8,funcname: OUTLINED_FUNCTION_31
funcline addr: 38568
funcline addr: 38572
funcline addr: 38576
['OUTLINED_FUNCTION_31', 38568, 38568, 38576, []]
restartcode
['OUTLINED_FUNCTION_31', 38568, 38576, 38576, ['']]
code
funchead startaddr: 00000000000096b4,funcname: OUTLINED_FUNCTION_32
funcline addr: 38580
funcline addr: 38584
funcline addr: 38588
['OUTLINED_FUNCTION_32', 38580, 38580, 38588, []]
restartcode
['OUTLINED_FUNCTION_32', 38580, 38588, 38588, ['']]
code
funchead startaddr: 00000000000096c0,funcname: OUTLINED_FUNCTION_33
funcline addr: 38592
funcline addr: 38596
funcline addr: 38600
['OUTLINED_FUNCTION_33', 38592, 38592, 38600, []]
restartcode
['OUTLINED_FUNCTION_33', 38592, 38600, 38600, ['']]
code
funchead startaddr: 00000000000096cc,funcname: OUTLINED_FUNCTION_34
funcline addr: 38604
funcline addr: 38608
funcline addr: 38612
['OUTLINED_FUNCTION_34', 38604, 38604, 38612, []]
restartcode
['OUTLINED_FUNCTION_34', 38604, 38612, 38612, ['']]
code
funchead startaddr: 00000000000096d8,funcname: OUTLINED_FUNCTION_35
funcline addr: 38616
funcline addr: 38620
funcline addr: 38624
['OUTLINED_FUNCTION_35', 38616, 38616, 38624, []]
restartcode
['OUTLINED_FUNCTION_35', 38616, 38624, 38624, ['']]
code
funchead startaddr: 00000000000096e4,funcname: OUTLINED_FUNCTION_36
funcline addr: 38628
funcline addr: 38632
funcline addr: 38636
funcline addr: 38640
funcline addr: 38644
['OUTLINED_FUNCTION_36', 38628, 38628, 38644, []]
restartcode
['OUTLINED_FUNCTION_36', 38628, 38644, 38644, ['']]
code
funchead startaddr: 00000000000096f8,funcname: OUTLINED_FUNCTION_37
funcline addr: 38648
funcline addr: 38652
funcline addr: 38656
funcline addr: 38660
funcline addr: 38664
['OUTLINED_FUNCTION_37', 38648, 38648, 38664, []]
restartcode
['OUTLINED_FUNCTION_37', 38648, 38664, 38664, ['']]
code
funchead startaddr: 000000000000970c,funcname: OUTLINED_FUNCTION_38
funcline addr: 38668
funcline addr: 38672
funcline addr: 38676
funcline addr: 38680
['OUTLINED_FUNCTION_38', 38668, 38668, 38680, []]
restartcode
['OUTLINED_FUNCTION_38', 38668, 38680, 38680, ['']]
code
funchead startaddr: 000000000000971c,funcname: OUTLINED_FUNCTION_39
funcline addr: 38684
funcline addr: 38688
funcline addr: 38692
funcline addr: 38696
['OUTLINED_FUNCTION_39', 38684, 38684, 38696, []]
restartcode
['OUTLINED_FUNCTION_39', 38684, 38696, 38696, ['']]
code
funchead startaddr: 000000000000972c,funcname: OUTLINED_FUNCTION_40
funcline addr: 38700
funcline addr: 38704
funcline addr: 38708
['OUTLINED_FUNCTION_40', 38700, 38700, 38708, []]
restartcode
['OUTLINED_FUNCTION_40', 38700, 38708, 38708, ['']]
code
funchead startaddr: 0000000000009738,funcname: OUTLINED_FUNCTION_41
funcline addr: 38712
funcline addr: 38716
funcline addr: 38720
['OUTLINED_FUNCTION_41', 38712, 38712, 38720, []]
restartcode
['OUTLINED_FUNCTION_41', 38712, 38720, 38720, ['']]
code
funchead startaddr: 0000000000009744,funcname: OUTLINED_FUNCTION_42
funcline addr: 38724
funcline addr: 38728
funcline addr: 38732
funcline addr: 38736
['OUTLINED_FUNCTION_42', 38724, 38724, 38736, []]
restartcode
['OUTLINED_FUNCTION_42', 38724, 38736, 38736, ['']]
code
funchead startaddr: 0000000000009754,funcname: OUTLINED_FUNCTION_43
funcline addr: 38740
funcline addr: 38744
funcline addr: 38748
funcline addr: 38752
funcline addr: 38756
funcline addr: 38760
['OUTLINED_FUNCTION_43', 38740, 38740, 38760, []]
restartcode
['OUTLINED_FUNCTION_43', 38740, 38760, 38760, ['']]
code
funchead startaddr: 000000000000976c,funcname: OUTLINED_FUNCTION_44
funcline addr: 38764
funcline addr: 38768
funcline addr: 38772
funcline addr: 38776
funcline addr: 38780
funcline addr: 38784
['OUTLINED_FUNCTION_44', 38764, 38764, 38784, []]
restartcode
['OUTLINED_FUNCTION_44', 38764, 38784, 38784, ['']]
code
funchead startaddr: 0000000000009784,funcname: OUTLINED_FUNCTION_45
funcline addr: 38788
funcline addr: 38792
funcline addr: 38796
funcline addr: 38800
funcline addr: 38804
funcline addr: 38808
['OUTLINED_FUNCTION_45', 38788, 38788, 38808, []]
restartcode
['OUTLINED_FUNCTION_45', 38788, 38808, 38808, ['']]
code
funchead startaddr: 000000000000979c,funcname: OUTLINED_FUNCTION_46
funcline addr: 38812
funcline addr: 38816
funcline addr: 38820
funcline addr: 38824
['OUTLINED_FUNCTION_46', 38812, 38812, 38824, []]
restartcode
['OUTLINED_FUNCTION_46', 38812, 38824, 38824, ['']]
code
funchead startaddr: 00000000000097ac,funcname: OUTLINED_FUNCTION_47
funcline addr: 38828
funcline addr: 38832
funcline addr: 38836
funcline addr: 38840
['OUTLINED_FUNCTION_47', 38828, 38828, 38840, []]
restartcode
['OUTLINED_FUNCTION_47', 38828, 38840, 38840, ['']]
code
funchead startaddr: 00000000000097bc,funcname: OUTLINED_FUNCTION_48
funcline addr: 38844
funcline addr: 38848
funcline addr: 38852
funcline addr: 38856
['OUTLINED_FUNCTION_48', 38844, 38844, 38856, []]
restartcode
['OUTLINED_FUNCTION_48', 38844, 38856, 38856, ['']]
code
funchead startaddr: 00000000000097cc,funcname: OUTLINED_FUNCTION_49
funcline addr: 38860
funcline addr: 38864
funcline addr: 38868
funcline addr: 38872
['OUTLINED_FUNCTION_49', 38860, 38860, 38872, []]
restartcode
['OUTLINED_FUNCTION_49', 38860, 38872, 38872, ['']]
code
funchead startaddr: 00000000000097dc,funcname: OUTLINED_FUNCTION_50
funcline addr: 38876
funcline addr: 38880
funcline addr: 38884
funcline addr: 38888
['OUTLINED_FUNCTION_50', 38876, 38876, 38888, []]
restartcode
['OUTLINED_FUNCTION_50', 38876, 38888, 38888, ['']]
code
funchead startaddr: 00000000000097ec,funcname: OUTLINED_FUNCTION_51
funcline addr: 38892
funcline addr: 38896
funcline addr: 38900
funcline addr: 38904
funcline addr: 38908
funcline addr: 38912
['OUTLINED_FUNCTION_51', 38892, 38892, 38912, []]
restartcode
['OUTLINED_FUNCTION_51', 38892, 38912, 38912, ['']]
code
funchead startaddr: 0000000000009804,funcname: OUTLINED_FUNCTION_52
funcline addr: 38916
funcline addr: 38920
['OUTLINED_FUNCTION_52', 38916, 38916, 38920, []]
restartcode
['OUTLINED_FUNCTION_52', 38916, 38920, 38920, ['']]
code
funchead startaddr: 000000000000980c,funcname: OUTLINED_FUNCTION_53
funcline addr: 38924
funcline addr: 38928
funcline addr: 38932
funcline addr: 38936
funcline addr: 38940
funcline addr: 38944
['OUTLINED_FUNCTION_53', 38924, 38924, 38944, []]
restartcode
['OUTLINED_FUNCTION_53', 38924, 38944, 38944, ['']]
code
funchead startaddr: 0000000000009824,funcname: OUTLINED_FUNCTION_54
funcline addr: 38948
funcline addr: 38952
funcline addr: 38956
['OUTLINED_FUNCTION_54', 38948, 38948, 38956, []]
restartcode
['OUTLINED_FUNCTION_54', 38948, 38956, 38956, ['']]
code
funchead startaddr: 0000000000009830,funcname: OUTLINED_FUNCTION_55
funcline addr: 38960
funcline addr: 38964
['OUTLINED_FUNCTION_55', 38960, 38960, 38964, []]
restartcode
['OUTLINED_FUNCTION_55', 38960, 38964, 38964, ['']]
code
funchead startaddr: 0000000000009838,funcname: OUTLINED_FUNCTION_56
funcline addr: 38968
funcline addr: 38972
funcline addr: 38976
funcline addr: 38980
funcline addr: 38984
['OUTLINED_FUNCTION_56', 38968, 38968, 38984, []]
restartcode
['OUTLINED_FUNCTION_56', 38968, 38984, 38984, ['']]
code
funchead startaddr: 000000000000984c,funcname: OUTLINED_FUNCTION_57
funcline addr: 38988
funcline addr: 38992
funcline addr: 38996
funcline addr: 39000
funcline addr: 39004
['OUTLINED_FUNCTION_57', 38988, 38988, 39004, []]
restartcode
['OUTLINED_FUNCTION_57', 38988, 39004, 39004, ['']]
code
funchead startaddr: 0000000000009860,funcname: OUTLINED_FUNCTION_58
funcline addr: 39008
funcline addr: 39012
funcline addr: 39016
funcline addr: 39020
funcline addr: 39024
['OUTLINED_FUNCTION_58', 39008, 39008, 39024, []]
restartcode
['OUTLINED_FUNCTION_58', 39008, 39024, 39024, ['']]
code
funchead startaddr: 0000000000009874,funcname: OUTLINED_FUNCTION_59
funcline addr: 39028
funcline addr: 39032
funcline addr: 39036
funcline addr: 39040
funcline addr: 39044
['OUTLINED_FUNCTION_59', 39028, 39028, 39044, []]
restartcode
['OUTLINED_FUNCTION_59', 39028, 39044, 39044, ['']]
code
funchead startaddr: 0000000000009888,funcname: OUTLINED_FUNCTION_60
funcline addr: 39048
funcline addr: 39052
funcline addr: 39056
['OUTLINED_FUNCTION_60', 39048, 39048, 39056, []]
restartcode
['OUTLINED_FUNCTION_60', 39048, 39056, 39056, ['']]
code
funchead startaddr: 0000000000009894,funcname: OUTLINED_FUNCTION_61
funcline addr: 39060
funcline addr: 39064
funcline addr: 39068
funcline addr: 39072
funcline addr: 39076
['OUTLINED_FUNCTION_61', 39060, 39060, 39076, []]
restartcode
['OUTLINED_FUNCTION_61', 39060, 39076, 39076, ['']]
code
funchead startaddr: 00000000000098a8,funcname: OUTLINED_FUNCTION_62
funcline addr: 39080
funcline addr: 39084
funcline addr: 39088
['OUTLINED_FUNCTION_62', 39080, 39080, 39088, []]
restartcode
['OUTLINED_FUNCTION_62', 39080, 39088, 39088, ['']]
code
funchead startaddr: 00000000000098b4,funcname: OUTLINED_FUNCTION_63
funcline addr: 39092
funcline addr: 39096
funcline addr: 39100
['OUTLINED_FUNCTION_63', 39092, 39092, 39100, []]
restartcode
['OUTLINED_FUNCTION_63', 39092, 39100, 39100, ['']]
code
funchead startaddr: 00000000000098c0,funcname: OUTLINED_FUNCTION_64
funcline addr: 39104
funcline addr: 39108
['OUTLINED_FUNCTION_64', 39104, 39104, 39108, []]
restartcode
['OUTLINED_FUNCTION_64', 39104, 39108, 39108, ['']]
code
funchead startaddr: 00000000000098c8,funcname: OUTLINED_FUNCTION_65
funcline addr: 39112
funcline addr: 39116
funcline addr: 39120
['OUTLINED_FUNCTION_65', 39112, 39112, 39120, []]
restartcode
['OUTLINED_FUNCTION_65', 39112, 39120, 39120, ['']]
code
funchead startaddr: 00000000000098d4,funcname: OUTLINED_FUNCTION_66
funcline addr: 39124
funcline addr: 39128
funcline addr: 39132
['OUTLINED_FUNCTION_66', 39124, 39124, 39132, []]
restartcode
['OUTLINED_FUNCTION_66', 39124, 39132, 39132, ['']]
code
funchead startaddr: 00000000000098e0,funcname: OUTLINED_FUNCTION_67
funcline addr: 39136
funcline addr: 39140
['OUTLINED_FUNCTION_67', 39136, 39136, 39140, []]
restartcode
['OUTLINED_FUNCTION_67', 39136, 39140, 39140, ['']]
code
funchead startaddr: 00000000000098e8,funcname: OUTLINED_FUNCTION_68
funcline addr: 39144
funcline addr: 39148
['OUTLINED_FUNCTION_68', 39144, 39144, 39148, []]
restartcode
['OUTLINED_FUNCTION_68', 39144, 39148, 39148, ['']]
code
funchead startaddr: 00000000000098f0,funcname: OUTLINED_FUNCTION_69
funcline addr: 39152
funcline addr: 39156
funcline addr: 39160
['OUTLINED_FUNCTION_69', 39152, 39152, 39160, []]
restartcode
['OUTLINED_FUNCTION_69', 39152, 39160, 39160, ['']]
code
funchead startaddr: 00000000000098fc,funcname: OUTLINED_FUNCTION_70
funcline addr: 39164
funcline addr: 39168
funcline addr: 39172
['OUTLINED_FUNCTION_70', 39164, 39164, 39172, []]
restartcode
['OUTLINED_FUNCTION_70', 39164, 39172, 39172, ['']]
code
funchead startaddr: 0000000000009908,funcname: OUTLINED_FUNCTION_71
funcline addr: 39176
funcline addr: 39180
funcline addr: 39184
['OUTLINED_FUNCTION_71', 39176, 39176, 39184, []]
restartcode
['OUTLINED_FUNCTION_71', 39176, 39184, 39184, ['']]
code
funchead startaddr: 0000000000009914,funcname: OUTLINED_FUNCTION_72
funcline addr: 39188
funcline addr: 39192
funcline addr: 39196
['OUTLINED_FUNCTION_72', 39188, 39188, 39196, []]
restartcode
['OUTLINED_FUNCTION_72', 39188, 39196, 39196, ['']]
code
funchead startaddr: 0000000000009920,funcname: OUTLINED_FUNCTION_73
funcline addr: 39200
funcline addr: 39204
funcline addr: 39208
['OUTLINED_FUNCTION_73', 39200, 39200, 39208, []]
restartcode
['OUTLINED_FUNCTION_73', 39200, 39208, 39208, ['']]
code
funchead startaddr: 000000000000992c,funcname: OUTLINED_FUNCTION_74
funcline addr: 39212
funcline addr: 39216
funcline addr: 39220
['OUTLINED_FUNCTION_74', 39212, 39212, 39220, []]
restartcode
['OUTLINED_FUNCTION_74', 39212, 39220, 39220, ['']]
code
funchead startaddr: 0000000000009938,funcname: OUTLINED_FUNCTION_75
funcline addr: 39224
funcline addr: 39228
funcline addr: 39232
['OUTLINED_FUNCTION_75', 39224, 39224, 39232, []]
restartcode
['OUTLINED_FUNCTION_75', 39224, 39232, 39232, ['']]
code
funchead startaddr: 0000000000009944,funcname: OUTLINED_FUNCTION_76
funcline addr: 39236
funcline addr: 39240
funcline addr: 39244
['OUTLINED_FUNCTION_76', 39236, 39236, 39244, []]
restartcode
['OUTLINED_FUNCTION_76', 39236, 39244, 39244, ['']]
code
funchead startaddr: 0000000000009950,funcname: OUTLINED_FUNCTION_77
funcline addr: 39248
funcline addr: 39252
funcline addr: 39256
['OUTLINED_FUNCTION_77', 39248, 39248, 39256, []]
restartcode
['OUTLINED_FUNCTION_77', 39248, 39256, 39256, ['']]
code
funchead startaddr: 000000000000995c,funcname: OUTLINED_FUNCTION_78
funcline addr: 39260
funcline addr: 39264
funcline addr: 39268
['OUTLINED_FUNCTION_78', 39260, 39260, 39268, []]
restartcode
['OUTLINED_FUNCTION_78', 39260, 39268, 39268, ['']]
code
funchead startaddr: 0000000000009968,funcname: OUTLINED_FUNCTION_79
funcline addr: 39272
funcline addr: 39276
funcline addr: 39280
['OUTLINED_FUNCTION_79', 39272, 39272, 39280, []]
restartcode
['OUTLINED_FUNCTION_79', 39272, 39280, 39280, ['']]
code
funchead startaddr: 0000000000009974,funcname: OUTLINED_FUNCTION_80
funcline addr: 39284
funcline addr: 39288
funcline addr: 39292
['OUTLINED_FUNCTION_80', 39284, 39284, 39292, []]
restartcode
['OUTLINED_FUNCTION_80', 39284, 39292, 39292, ['']]
code
funchead startaddr: 0000000000009980,funcname: OUTLINED_FUNCTION_81
funcline addr: 39296
funcline addr: 39300
funcline addr: 39304
['OUTLINED_FUNCTION_81', 39296, 39296, 39304, []]
restartcode
['OUTLINED_FUNCTION_81', 39296, 39304, 39304, ['']]
code
funchead startaddr: 000000000000998c,funcname: OUTLINED_FUNCTION_82
funcline addr: 39308
funcline addr: 39312
['OUTLINED_FUNCTION_82', 39308, 39308, 39312, []]
restartcode
['OUTLINED_FUNCTION_82', 39308, 39312, 39312, ['']]
code
funchead startaddr: 0000000000009994,funcname: OUTLINED_FUNCTION_83
funcline addr: 39316
funcline addr: 39320
funcline addr: 39324
['OUTLINED_FUNCTION_83', 39316, 39316, 39324, []]
restartcode
['OUTLINED_FUNCTION_83', 39316, 39324, 39324, ['']]
code
funchead startaddr: 00000000000099a0,funcname: OUTLINED_FUNCTION_84
funcline addr: 39328
funcline addr: 39332
['OUTLINED_FUNCTION_84', 39328, 39328, 39332, []]
restartcode
['OUTLINED_FUNCTION_84', 39328, 39332, 39332, ['']]
code
funchead startaddr: 00000000000099a8,funcname: OUTLINED_FUNCTION_85
funcline addr: 39336
funcline addr: 39340
funcline addr: 39344
['OUTLINED_FUNCTION_85', 39336, 39336, 39344, []]
restartcode
['OUTLINED_FUNCTION_85', 39336, 39344, 39344, ['']]
code
funchead startaddr: 00000000000099b4,funcname: read_uleb128
funcline addr: 39348
funcline addr: 39352
funcline addr: 39356
funcline addr: 39360
funcline addr: 39364
funcline addr: 39368
funcline addr: 39372
funcline addr: 39376
funcline addr: 39380
funcline addr: 39384
['read_uleb128', 39348, 39348, 39384, []]
restartcode
['read_uleb128', 39348, 39384, 39384, ['']]
code
funchead startaddr: 00000000000099dc,funcname: read_sleb128
funcline addr: 39388
funcline addr: 39392
funcline addr: 39396
funcline addr: 39400
funcline addr: 39404
funcline addr: 39408
funcline addr: 39412
funcline addr: 39416
funcline addr: 39420
funcline addr: 39424
funcline addr: 39428
funcline addr: 39432
funcline addr: 39436
funcline addr: 39440
funcline addr: 39444
funcline addr: 39448
['read_sleb128', 39388, 39388, 39448, []]
restartcode
['read_sleb128', 39388, 39448, 39448, ['']]
code
funchead startaddr: 0000000000009a1c,funcname: read_encoded_value_with_base
funcline addr: 39452
funcline addr: 39456
funcline addr: 39460
funcline addr: 39464
funcline addr: 39468
funcline addr: 39472
funcline addr: 39476
funcline addr: 39480
funcline addr: 39484
funcline addr: 39488
funcline addr: 39492
funcline addr: 39496
funcline addr: 39500
funcline addr: 39504
funcline addr: 39508
funcline addr: 39512
funcline addr: 39516
funcline addr: 39520
funcline addr: 39524
funcline addr: 39528
funcline addr: 39532
funcline addr: 39536
funcline addr: 39540
funcline addr: 39544
funcline addr: 39548
funcline addr: 39552
funcline addr: 39556
funcline addr: 39560
funcline addr: 39564
funcline addr: 39568
funcline addr: 39572
funcline addr: 39576
funcline addr: 39580
funcline addr: 39584
funcline addr: 39588
funcline addr: 39592
funcline addr: 39596
funcline addr: 39600
funcline addr: 39604
funcline addr: 39608
funcline addr: 39612
funcline addr: 39616
funcline addr: 39620
funcline addr: 39624
funcline addr: 39628
funcline addr: 39632
funcline addr: 39636
funcline addr: 39640
funcline addr: 39644
funcline addr: 39648
funcline addr: 39652
funcline addr: 39656
funcline addr: 39660
funcline addr: 39664
funcline addr: 39668
funcline addr: 39672
funcline addr: 39676
funcline addr: 39680
funcline addr: 39684
funcline addr: 39688
['read_encoded_value_with_base', 39452, 39452, 39688, []]
restartcode
['read_encoded_value_with_base', 39452, 39688, 39688, ['']]
code
funchead startaddr: 0000000000009b0c,funcname: init_dwarf_reg_size_table
funcline addr: 39692
funcline addr: 39696
funcline addr: 39700
funcline addr: 39704
funcline addr: 39708
funcline addr: 39712
funcline addr: 39716
funcline addr: 39720
funcline addr: 39724
funcline addr: 39728
funcline addr: 39732
funcline addr: 39736
funcline addr: 39740
funcline addr: 39744
funcline addr: 39748
funcline addr: 39752
funcline addr: 39756
funcline addr: 39760
funcline addr: 39764
funcline addr: 39768
funcline addr: 39772
funcline addr: 39776
funcline addr: 39780
funcline addr: 39784
funcline addr: 39788
funcline addr: 39792
funcline addr: 39796
funcline addr: 39800
funcline addr: 39804
funcline addr: 39808
funcline addr: 39812
funcline addr: 39816
funcline addr: 39820
funcline addr: 39824
funcline addr: 39828
funcline addr: 39832
funcline addr: 39836
funcline addr: 39840
funcline addr: 39844
funcline addr: 39848
funcline addr: 39852
funcline addr: 39856
funcline addr: 39860
funcline addr: 39864
funcline addr: 39868
funcline addr: 39872
funcline addr: 39876
funcline addr: 39880
funcline addr: 39884
funcline addr: 39888
funcline addr: 39892
funcline addr: 39896
funcline addr: 39900
funcline addr: 39904
funcline addr: 39908
funcline addr: 39912
funcline addr: 39916
funcline addr: 39920
funcline addr: 39924
funcline addr: 39928
funcline addr: 39932
funcline addr: 39936
funcline addr: 39940
funcline addr: 39944
funcline addr: 39948
funcline addr: 39952
funcline addr: 39956
funcline addr: 39960
funcline addr: 39964
['init_dwarf_reg_size_table', 39692, 39692, 39964, []]
restartcode
['init_dwarf_reg_size_table', 39692, 39964, 39964, ['']]
code
funchead startaddr: 0000000000009c20,funcname: _Unwind_SetSpColumn
funcline addr: 39968
funcline addr: 39972
funcline addr: 39976
funcline addr: 39980
funcline addr: 39984
funcline addr: 39988
funcline addr: 39992
funcline addr: 39996
funcline addr: 40000
funcline addr: 40004
funcline addr: 40008
funcline addr: 40012
funcline addr: 40016
funcline addr: 40020
funcline addr: 40024
['_Unwind_SetSpColumn', 39968, 39968, 40024, []]
restartcode
['_Unwind_SetSpColumn', 39968, 40024, 40024, ['']]
code
funchead startaddr: 0000000000009c5c,funcname: _Unwind_GetGR
funcline addr: 40028
funcline addr: 40032
funcline addr: 40036
funcline addr: 40040
funcline addr: 40044
funcline addr: 40048
funcline addr: 40052
funcline addr: 40056
funcline addr: 40060
funcline addr: 40064
funcline addr: 40068
funcline addr: 40072
funcline addr: 40076
funcline addr: 40080
funcline addr: 40084
funcline addr: 40088
funcline addr: 40092
funcline addr: 40096
funcline addr: 40100
funcline addr: 40104
funcline addr: 40108
funcline addr: 40112
['_Unwind_GetGR', 40028, 40028, 40112, []]
restartcode
['_Unwind_GetGR', 40028, 40112, 40112, ['']]
code
funchead startaddr: 0000000000009cb4,funcname: uw_install_context_1
funcline addr: 40116
funcline addr: 40120
funcline addr: 40124
funcline addr: 40128
funcline addr: 40132
funcline addr: 40136
funcline addr: 40140
funcline addr: 40144
funcline addr: 40148
funcline addr: 40152
funcline addr: 40156
funcline addr: 40160
funcline addr: 40164
funcline addr: 40168
funcline addr: 40172
funcline addr: 40176
funcline addr: 40180
funcline addr: 40184
funcline addr: 40188
funcline addr: 40192
funcline addr: 40196
funcline addr: 40200
funcline addr: 40204
funcline addr: 40208
funcline addr: 40212
funcline addr: 40216
funcline addr: 40220
funcline addr: 40224
funcline addr: 40228
funcline addr: 40232
funcline addr: 40236
funcline addr: 40240
funcline addr: 40244
funcline addr: 40248
funcline addr: 40252
funcline addr: 40256
funcline addr: 40260
funcline addr: 40264
funcline addr: 40268
funcline addr: 40272
funcline addr: 40276
funcline addr: 40280
funcline addr: 40284
funcline addr: 40288
funcline addr: 40292
funcline addr: 40296
funcline addr: 40300
funcline addr: 40304
funcline addr: 40308
funcline addr: 40312
funcline addr: 40316
funcline addr: 40320
funcline addr: 40324
funcline addr: 40328
funcline addr: 40332
funcline addr: 40336
funcline addr: 40340
funcline addr: 40344
funcline addr: 40348
funcline addr: 40352
funcline addr: 40356
funcline addr: 40360
funcline addr: 40364
funcline addr: 40368
funcline addr: 40372
funcline addr: 40376
funcline addr: 40380
['uw_install_context_1', 40116, 40116, 40380, []]
restartcode
['uw_install_context_1', 40116, 40380, 40380, ['']]
code
funchead startaddr: 0000000000009dc0,funcname: _Unwind_GetCFA
funcline addr: 40384
funcline addr: 40388
['_Unwind_GetCFA', 40384, 40384, 40388, []]
restartcode
['_Unwind_GetCFA', 40384, 40388, 40388, ['']]
code
funchead startaddr: 0000000000009dc8,funcname: _Unwind_SetGR
funcline addr: 40392
funcline addr: 40396
funcline addr: 40400
funcline addr: 40404
funcline addr: 40408
funcline addr: 40412
funcline addr: 40416
funcline addr: 40420
funcline addr: 40424
funcline addr: 40428
funcline addr: 40432
funcline addr: 40436
funcline addr: 40440
funcline addr: 40444
funcline addr: 40448
funcline addr: 40452
funcline addr: 40456
funcline addr: 40460
funcline addr: 40464
funcline addr: 40468
funcline addr: 40472
funcline addr: 40476
['_Unwind_SetGR', 40392, 40392, 40476, []]
restartcode
['_Unwind_SetGR', 40392, 40476, 40476, ['']]
code
funchead startaddr: 0000000000009e20,funcname: _Unwind_GetIP
funcline addr: 40480
funcline addr: 40484
['_Unwind_GetIP', 40480, 40480, 40484, []]
restartcode
['_Unwind_GetIP', 40480, 40484, 40484, ['']]
code
funchead startaddr: 0000000000009e28,funcname: _Unwind_GetIPInfo
funcline addr: 40488
funcline addr: 40492
funcline addr: 40496
funcline addr: 40500
funcline addr: 40504
['_Unwind_GetIPInfo', 40488, 40488, 40504, []]
restartcode
['_Unwind_GetIPInfo', 40488, 40504, 40504, ['']]
code
funchead startaddr: 0000000000009e3c,funcname: _Unwind_SetIP
funcline addr: 40508
funcline addr: 40512
['_Unwind_SetIP', 40508, 40508, 40512, []]
restartcode
['_Unwind_SetIP', 40508, 40512, 40512, ['']]
code
funchead startaddr: 0000000000009e44,funcname: _Unwind_GetLanguageSpecificData
funcline addr: 40516
funcline addr: 40520
['_Unwind_GetLanguageSpecificData', 40516, 40516, 40520, []]
restartcode
['_Unwind_GetLanguageSpecificData', 40516, 40520, 40520, ['']]
code
funchead startaddr: 0000000000009e4c,funcname: _Unwind_GetRegionStart
funcline addr: 40524
funcline addr: 40528
['_Unwind_GetRegionStart', 40524, 40524, 40528, []]
restartcode
['_Unwind_GetRegionStart', 40524, 40528, 40528, ['']]
code
funchead startaddr: 0000000000009e54,funcname: _Unwind_FindEnclosingFunction
funcline addr: 40532
funcline addr: 40536
funcline addr: 40540
funcline addr: 40544
funcline addr: 40548
funcline addr: 40552
funcline addr: 40556
funcline addr: 40560
funcline addr: 40564
funcline addr: 40568
['_Unwind_FindEnclosingFunction', 40532, 40532, 40568, []]
restartcode
['_Unwind_FindEnclosingFunction', 40532, 40568, 40568, ['']]
code
funchead startaddr: 0000000000009e7c,funcname: _Unwind_GetDataRelBase
funcline addr: 40572
funcline addr: 40576
['_Unwind_GetDataRelBase', 40572, 40572, 40576, []]
restartcode
['_Unwind_GetDataRelBase', 40572, 40576, 40576, ['']]
code
funchead startaddr: 0000000000009e84,funcname: _Unwind_GetTextRelBase
funcline addr: 40580
funcline addr: 40584
['_Unwind_GetTextRelBase', 40580, 40580, 40584, []]
restartcode
['_Unwind_GetTextRelBase', 40580, 40584, 40584, ['']]
code
funchead startaddr: 0000000000009e8c,funcname: base_of_encoded_value
funcline addr: 40588
funcline addr: 40592
funcline addr: 40596
funcline addr: 40600
funcline addr: 40604
funcline addr: 40608
funcline addr: 40612
funcline addr: 40616
funcline addr: 40620
funcline addr: 40624
funcline addr: 40628
funcline addr: 40632
funcline addr: 40636
funcline addr: 40640
funcline addr: 40644
funcline addr: 40648
funcline addr: 40652
funcline addr: 40656
funcline addr: 40660
funcline addr: 40664
funcline addr: 40668
funcline addr: 40672
funcline addr: 40676
funcline addr: 40680
funcline addr: 40684
funcline addr: 40688
funcline addr: 40692
funcline addr: 40696
funcline addr: 40700
funcline addr: 40704
['base_of_encoded_value', 40588, 40588, 40704, []]
restartcode
['base_of_encoded_value', 40588, 40704, 40704, ['']]
code
funchead startaddr: 0000000000009f04,funcname: execute_cfa_program
funcline addr: 40708
funcline addr: 40712
funcline addr: 40716
funcline addr: 40720
funcline addr: 40724
funcline addr: 40728
funcline addr: 40732
funcline addr: 40736
funcline addr: 40740
funcline addr: 40744
funcline addr: 40748
funcline addr: 40752
funcline addr: 40756
funcline addr: 40760
funcline addr: 40764
funcline addr: 40768
funcline addr: 40772
funcline addr: 40776
funcline addr: 40780
funcline addr: 40784
funcline addr: 40788
funcline addr: 40792
funcline addr: 40796
funcline addr: 40800
funcline addr: 40804
funcline addr: 40808
funcline addr: 40812
funcline addr: 40816
funcline addr: 40820
funcline addr: 40824
funcline addr: 40828
funcline addr: 40832
funcline addr: 40836
funcline addr: 40840
funcline addr: 40844
funcline addr: 40848
funcline addr: 40852
funcline addr: 40856
funcline addr: 40860
funcline addr: 40864
funcline addr: 40868
funcline addr: 40872
funcline addr: 40876
funcline addr: 40880
funcline addr: 40884
funcline addr: 40888
funcline addr: 40892
funcline addr: 40896
funcline addr: 40900
funcline addr: 40904
funcline addr: 40908
funcline addr: 40912
funcline addr: 40916
funcline addr: 40920
funcline addr: 40924
funcline addr: 40928
funcline addr: 40932
funcline addr: 40936
funcline addr: 40940
funcline addr: 40944
funcline addr: 40948
funcline addr: 40952
funcline addr: 40956
funcline addr: 40960
funcline addr: 40964
funcline addr: 40968
funcline addr: 40972
funcline addr: 40976
funcline addr: 40980
funcline addr: 40984
funcline addr: 40988
funcline addr: 40992
funcline addr: 40996
funcline addr: 41000
funcline addr: 41004
funcline addr: 41008
funcline addr: 41012
funcline addr: 41016
funcline addr: 41020
funcline addr: 41024
funcline addr: 41028
funcline addr: 41032
funcline addr: 41036
funcline addr: 41040
funcline addr: 41044
funcline addr: 41048
funcline addr: 41052
funcline addr: 41056
funcline addr: 41060
funcline addr: 41064
funcline addr: 41068
funcline addr: 41072
funcline addr: 41076
funcline addr: 41080
funcline addr: 41084
funcline addr: 41088
funcline addr: 41092
funcline addr: 41096
funcline addr: 41100
funcline addr: 41104
funcline addr: 41108
funcline addr: 41112
funcline addr: 41116
funcline addr: 41120
funcline addr: 41124
funcline addr: 41128
funcline addr: 41132
funcline addr: 41136
funcline addr: 41140
funcline addr: 41144
funcline addr: 41148
funcline addr: 41152
funcline addr: 41156
funcline addr: 41160
funcline addr: 41164
funcline addr: 41168
funcline addr: 41172
funcline addr: 41176
funcline addr: 41180
funcline addr: 41184
funcline addr: 41188
funcline addr: 41192
funcline addr: 41196
funcline addr: 41200
funcline addr: 41204
funcline addr: 41208
funcline addr: 41212
funcline addr: 41216
funcline addr: 41220
funcline addr: 41224
funcline addr: 41228
funcline addr: 41232
funcline addr: 41236
funcline addr: 41240
funcline addr: 41244
funcline addr: 41248
funcline addr: 41252
funcline addr: 41256
funcline addr: 41260
funcline addr: 41264
funcline addr: 41268
funcline addr: 41272
funcline addr: 41276
funcline addr: 41280
funcline addr: 41284
funcline addr: 41288
funcline addr: 41292
funcline addr: 41296
funcline addr: 41300
funcline addr: 41304
funcline addr: 41308
funcline addr: 41312
funcline addr: 41316
funcline addr: 41320
funcline addr: 41324
funcline addr: 41328
funcline addr: 41332
funcline addr: 41336
funcline addr: 41340
funcline addr: 41344
funcline addr: 41348
funcline addr: 41352
funcline addr: 41356
funcline addr: 41360
funcline addr: 41364
funcline addr: 41368
funcline addr: 41372
funcline addr: 41376
funcline addr: 41380
funcline addr: 41384
funcline addr: 41388
funcline addr: 41392
funcline addr: 41396
funcline addr: 41400
funcline addr: 41404
funcline addr: 41408
funcline addr: 41412
funcline addr: 41416
funcline addr: 41420
funcline addr: 41424
funcline addr: 41428
funcline addr: 41432
funcline addr: 41436
funcline addr: 41440
funcline addr: 41444
funcline addr: 41448
funcline addr: 41452
funcline addr: 41456
funcline addr: 41460
funcline addr: 41464
funcline addr: 41468
funcline addr: 41472
funcline addr: 41476
funcline addr: 41480
funcline addr: 41484
funcline addr: 41488
funcline addr: 41492
funcline addr: 41496
funcline addr: 41500
funcline addr: 41504
funcline addr: 41508
funcline addr: 41512
funcline addr: 41516
funcline addr: 41520
funcline addr: 41524
funcline addr: 41528
funcline addr: 41532
funcline addr: 41536
funcline addr: 41540
funcline addr: 41544
funcline addr: 41548
funcline addr: 41552
funcline addr: 41556
funcline addr: 41560
funcline addr: 41564
funcline addr: 41568
funcline addr: 41572
funcline addr: 41576
funcline addr: 41580
funcline addr: 41584
funcline addr: 41588
funcline addr: 41592
funcline addr: 41596
funcline addr: 41600
funcline addr: 41604
funcline addr: 41608
funcline addr: 41612
funcline addr: 41616
funcline addr: 41620
funcline addr: 41624
funcline addr: 41628
funcline addr: 41632
funcline addr: 41636
funcline addr: 41640
funcline addr: 41644
funcline addr: 41648
funcline addr: 41652
funcline addr: 41656
funcline addr: 41660
funcline addr: 41664
funcline addr: 41668
funcline addr: 41672
funcline addr: 41676
funcline addr: 41680
funcline addr: 41684
funcline addr: 41688
funcline addr: 41692
funcline addr: 41696
funcline addr: 41700
funcline addr: 41704
funcline addr: 41708
funcline addr: 41712
funcline addr: 41716
funcline addr: 41720
funcline addr: 41724
funcline addr: 41728
funcline addr: 41732
funcline addr: 41736
funcline addr: 41740
funcline addr: 41744
funcline addr: 41748
funcline addr: 41752
funcline addr: 41756
funcline addr: 41760
funcline addr: 41764
funcline addr: 41768
funcline addr: 41772
funcline addr: 41776
funcline addr: 41780
funcline addr: 41784
funcline addr: 41788
funcline addr: 41792
funcline addr: 41796
funcline addr: 41800
funcline addr: 41804
funcline addr: 41808
funcline addr: 41812
funcline addr: 41816
funcline addr: 41820
funcline addr: 41824
funcline addr: 41828
funcline addr: 41832
funcline addr: 41836
funcline addr: 41840
funcline addr: 41844
funcline addr: 41848
funcline addr: 41852
funcline addr: 41856
funcline addr: 41860
funcline addr: 41864
funcline addr: 41868
funcline addr: 41872
funcline addr: 41876
funcline addr: 41880
funcline addr: 41884
funcline addr: 41888
funcline addr: 41892
funcline addr: 41896
funcline addr: 41900
funcline addr: 41904
funcline addr: 41908
funcline addr: 41912
funcline addr: 41916
funcline addr: 41920
funcline addr: 41924
funcline addr: 41928
funcline addr: 41932
funcline addr: 41936
funcline addr: 41940
funcline addr: 41944
funcline addr: 41948
funcline addr: 41952
funcline addr: 41956
funcline addr: 41960
funcline addr: 41964
funcline addr: 41968
funcline addr: 41972
funcline addr: 41976
['execute_cfa_program', 40708, 40708, 41976, []]
restartcode
['execute_cfa_program', 40708, 41976, 41976, ['']]
code
funchead startaddr: 000000000000a3fc,funcname: uw_frame_state_for
funcline addr: 41980
funcline addr: 41984
funcline addr: 41988
funcline addr: 41992
funcline addr: 41996
funcline addr: 42000
funcline addr: 42004
funcline addr: 42008
funcline addr: 42012
funcline addr: 42016
funcline addr: 42020
funcline addr: 42024
funcline addr: 42028
funcline addr: 42032
funcline addr: 42036
funcline addr: 42040
funcline addr: 42044
funcline addr: 42048
funcline addr: 42052
funcline addr: 42056
funcline addr: 42060
funcline addr: 42064
funcline addr: 42068
funcline addr: 42072
funcline addr: 42076
funcline addr: 42080
funcline addr: 42084
funcline addr: 42088
funcline addr: 42092
funcline addr: 42096
funcline addr: 42100
funcline addr: 42104
funcline addr: 42108
funcline addr: 42112
funcline addr: 42116
funcline addr: 42120
funcline addr: 42124
funcline addr: 42128
funcline addr: 42132
funcline addr: 42136
funcline addr: 42140
funcline addr: 42144
funcline addr: 42148
funcline addr: 42152
funcline addr: 42156
funcline addr: 42160
funcline addr: 42164
funcline addr: 42168
funcline addr: 42172
funcline addr: 42176
funcline addr: 42180
funcline addr: 42184
funcline addr: 42188
funcline addr: 42192
funcline addr: 42196
funcline addr: 42200
funcline addr: 42204
funcline addr: 42208
funcline addr: 42212
funcline addr: 42216
funcline addr: 42220
funcline addr: 42224
funcline addr: 42228
funcline addr: 42232
funcline addr: 42236
funcline addr: 42240
funcline addr: 42244
funcline addr: 42248
funcline addr: 42252
funcline addr: 42256
funcline addr: 42260
funcline addr: 42264
funcline addr: 42268
funcline addr: 42272
funcline addr: 42276
funcline addr: 42280
funcline addr: 42284
funcline addr: 42288
funcline addr: 42292
funcline addr: 42296
funcline addr: 42300
funcline addr: 42304
funcline addr: 42308
funcline addr: 42312
funcline addr: 42316
funcline addr: 42320
funcline addr: 42324
funcline addr: 42328
funcline addr: 42332
funcline addr: 42336
funcline addr: 42340
funcline addr: 42344
funcline addr: 42348
funcline addr: 42352
funcline addr: 42356
funcline addr: 42360
funcline addr: 42364
funcline addr: 42368
funcline addr: 42372
funcline addr: 42376
funcline addr: 42380
funcline addr: 42384
funcline addr: 42388
funcline addr: 42392
funcline addr: 42396
funcline addr: 42400
funcline addr: 42404
funcline addr: 42408
funcline addr: 42412
funcline addr: 42416
funcline addr: 42420
funcline addr: 42424
funcline addr: 42428
funcline addr: 42432
funcline addr: 42436
funcline addr: 42440
funcline addr: 42444
funcline addr: 42448
funcline addr: 42452
funcline addr: 42456
funcline addr: 42460
funcline addr: 42464
funcline addr: 42468
funcline addr: 42472
funcline addr: 42476
funcline addr: 42480
funcline addr: 42484
funcline addr: 42488
funcline addr: 42492
funcline addr: 42496
funcline addr: 42500
funcline addr: 42504
funcline addr: 42508
funcline addr: 42512
funcline addr: 42516
funcline addr: 42520
funcline addr: 42524
funcline addr: 42528
funcline addr: 42532
funcline addr: 42536
funcline addr: 42540
funcline addr: 42544
funcline addr: 42548
funcline addr: 42552
funcline addr: 42556
funcline addr: 42560
funcline addr: 42564
funcline addr: 42568
funcline addr: 42572
funcline addr: 42576
funcline addr: 42580
funcline addr: 42584
funcline addr: 42588
funcline addr: 42592
funcline addr: 42596
funcline addr: 42600
funcline addr: 42604
funcline addr: 42608
funcline addr: 42612
funcline addr: 42616
funcline addr: 42620
funcline addr: 42624
funcline addr: 42628
funcline addr: 42632
funcline addr: 42636
funcline addr: 42640
funcline addr: 42644
funcline addr: 42648
funcline addr: 42652
funcline addr: 42656
funcline addr: 42660
funcline addr: 42664
funcline addr: 42668
funcline addr: 42672
funcline addr: 42676
funcline addr: 42680
funcline addr: 42684
funcline addr: 42688
funcline addr: 42692
funcline addr: 42696
funcline addr: 42700
funcline addr: 42704
funcline addr: 42708
funcline addr: 42712
funcline addr: 42716
funcline addr: 42720
funcline addr: 42724
funcline addr: 42728
funcline addr: 42732
funcline addr: 42736
funcline addr: 42740
funcline addr: 42744
funcline addr: 42748
funcline addr: 42752
funcline addr: 42756
funcline addr: 42760
funcline addr: 42764
funcline addr: 42768
funcline addr: 42772
funcline addr: 42776
funcline addr: 42780
funcline addr: 42784
funcline addr: 42788
funcline addr: 42792
funcline addr: 42796
funcline addr: 42800
funcline addr: 42804
funcline addr: 42808
funcline addr: 42812
funcline addr: 42816
funcline addr: 42820
funcline addr: 42824
funcline addr: 42828
funcline addr: 42832
funcline addr: 42836
funcline addr: 42840
funcline addr: 42844
funcline addr: 42848
funcline addr: 42852
funcline addr: 42856
funcline addr: 42860
funcline addr: 42864
funcline addr: 42868
funcline addr: 42872
funcline addr: 42876
funcline addr: 42880
funcline addr: 42884
funcline addr: 42888
funcline addr: 42892
funcline addr: 42896
funcline addr: 42900
funcline addr: 42904
funcline addr: 42908
funcline addr: 42912
funcline addr: 42916
funcline addr: 42920
funcline addr: 42924
funcline addr: 42928
funcline addr: 42932
funcline addr: 42936
funcline addr: 42940
funcline addr: 42944
funcline addr: 42948
funcline addr: 42952
funcline addr: 42956
funcline addr: 42960
funcline addr: 42964
funcline addr: 42968
funcline addr: 42972
funcline addr: 42976
funcline addr: 42980
funcline addr: 42984
funcline addr: 42988
funcline addr: 42992
funcline addr: 42996
funcline addr: 43000
funcline addr: 43004
funcline addr: 43008
funcline addr: 43012
funcline addr: 43016
funcline addr: 43020
funcline addr: 43024
funcline addr: 43028
funcline addr: 43032
funcline addr: 43036
['uw_frame_state_for', 41980, 41980, 43036, []]
restartcode
['uw_frame_state_for', 41980, 43036, 43036, ['']]
code
funchead startaddr: 000000000000a820,funcname: execute_stack_op
funcline addr: 43040
funcline addr: 43044
funcline addr: 43048
funcline addr: 43052
funcline addr: 43056
funcline addr: 43060
funcline addr: 43064
funcline addr: 43068
funcline addr: 43072
funcline addr: 43076
funcline addr: 43080
funcline addr: 43084
funcline addr: 43088
funcline addr: 43092
funcline addr: 43096
funcline addr: 43100
funcline addr: 43104
funcline addr: 43108
funcline addr: 43112
funcline addr: 43116
funcline addr: 43120
funcline addr: 43124
funcline addr: 43128
funcline addr: 43132
funcline addr: 43136
funcline addr: 43140
funcline addr: 43144
funcline addr: 43148
funcline addr: 43152
funcline addr: 43156
funcline addr: 43160
funcline addr: 43164
funcline addr: 43168
funcline addr: 43172
funcline addr: 43176
funcline addr: 43180
funcline addr: 43184
funcline addr: 43188
funcline addr: 43192
funcline addr: 43196
funcline addr: 43200
funcline addr: 43204
funcline addr: 43208
funcline addr: 43212
funcline addr: 43216
funcline addr: 43220
funcline addr: 43224
funcline addr: 43228
funcline addr: 43232
funcline addr: 43236
funcline addr: 43240
funcline addr: 43244
funcline addr: 43248
funcline addr: 43252
funcline addr: 43256
funcline addr: 43260
funcline addr: 43264
funcline addr: 43268
funcline addr: 43272
funcline addr: 43276
funcline addr: 43280
funcline addr: 43284
funcline addr: 43288
funcline addr: 43292
funcline addr: 43296
funcline addr: 43300
funcline addr: 43304
funcline addr: 43308
funcline addr: 43312
funcline addr: 43316
funcline addr: 43320
funcline addr: 43324
funcline addr: 43328
funcline addr: 43332
funcline addr: 43336
funcline addr: 43340
funcline addr: 43344
funcline addr: 43348
funcline addr: 43352
funcline addr: 43356
funcline addr: 43360
funcline addr: 43364
funcline addr: 43368
funcline addr: 43372
funcline addr: 43376
funcline addr: 43380
funcline addr: 43384
funcline addr: 43388
funcline addr: 43392
funcline addr: 43396
funcline addr: 43400
funcline addr: 43404
funcline addr: 43408
funcline addr: 43412
funcline addr: 43416
funcline addr: 43420
funcline addr: 43424
funcline addr: 43428
funcline addr: 43432
funcline addr: 43436
funcline addr: 43440
funcline addr: 43444
funcline addr: 43448
funcline addr: 43452
funcline addr: 43456
funcline addr: 43460
funcline addr: 43464
funcline addr: 43468
funcline addr: 43472
funcline addr: 43476
funcline addr: 43480
funcline addr: 43484
funcline addr: 43488
funcline addr: 43492
funcline addr: 43496
funcline addr: 43500
funcline addr: 43504
funcline addr: 43508
funcline addr: 43512
funcline addr: 43516
funcline addr: 43520
funcline addr: 43524
funcline addr: 43528
funcline addr: 43532
funcline addr: 43536
funcline addr: 43540
funcline addr: 43544
funcline addr: 43548
funcline addr: 43552
funcline addr: 43556
funcline addr: 43560
funcline addr: 43564
funcline addr: 43568
funcline addr: 43572
funcline addr: 43576
funcline addr: 43580
funcline addr: 43584
funcline addr: 43588
funcline addr: 43592
funcline addr: 43596
funcline addr: 43600
funcline addr: 43604
funcline addr: 43608
funcline addr: 43612
funcline addr: 43616
funcline addr: 43620
funcline addr: 43624
funcline addr: 43628
funcline addr: 43632
funcline addr: 43636
funcline addr: 43640
funcline addr: 43644
funcline addr: 43648
funcline addr: 43652
funcline addr: 43656
funcline addr: 43660
funcline addr: 43664
funcline addr: 43668
funcline addr: 43672
funcline addr: 43676
funcline addr: 43680
funcline addr: 43684
funcline addr: 43688
funcline addr: 43692
funcline addr: 43696
funcline addr: 43700
funcline addr: 43704
funcline addr: 43708
funcline addr: 43712
funcline addr: 43716
funcline addr: 43720
funcline addr: 43724
funcline addr: 43728
funcline addr: 43732
funcline addr: 43736
funcline addr: 43740
funcline addr: 43744
funcline addr: 43748
funcline addr: 43752
funcline addr: 43756
funcline addr: 43760
funcline addr: 43764
funcline addr: 43768
funcline addr: 43772
funcline addr: 43776
funcline addr: 43780
funcline addr: 43784
funcline addr: 43788
funcline addr: 43792
funcline addr: 43796
funcline addr: 43800
funcline addr: 43804
funcline addr: 43808
funcline addr: 43812
funcline addr: 43816
funcline addr: 43820
funcline addr: 43824
funcline addr: 43828
funcline addr: 43832
funcline addr: 43836
funcline addr: 43840
funcline addr: 43844
funcline addr: 43848
funcline addr: 43852
funcline addr: 43856
funcline addr: 43860
funcline addr: 43864
funcline addr: 43868
funcline addr: 43872
funcline addr: 43876
funcline addr: 43880
funcline addr: 43884
funcline addr: 43888
funcline addr: 43892
funcline addr: 43896
funcline addr: 43900
funcline addr: 43904
funcline addr: 43908
funcline addr: 43912
funcline addr: 43916
funcline addr: 43920
funcline addr: 43924
funcline addr: 43928
funcline addr: 43932
funcline addr: 43936
funcline addr: 43940
funcline addr: 43944
funcline addr: 43948
funcline addr: 43952
funcline addr: 43956
funcline addr: 43960
funcline addr: 43964
funcline addr: 43968
funcline addr: 43972
funcline addr: 43976
funcline addr: 43980
funcline addr: 43984
funcline addr: 43988
funcline addr: 43992
funcline addr: 43996
funcline addr: 44000
funcline addr: 44004
funcline addr: 44008
funcline addr: 44012
funcline addr: 44016
funcline addr: 44020
funcline addr: 44024
funcline addr: 44028
funcline addr: 44032
funcline addr: 44036
funcline addr: 44040
funcline addr: 44044
funcline addr: 44048
funcline addr: 44052
funcline addr: 44056
funcline addr: 44060
funcline addr: 44064
funcline addr: 44068
funcline addr: 44072
funcline addr: 44076
funcline addr: 44080
funcline addr: 44084
funcline addr: 44088
funcline addr: 44092
funcline addr: 44096
funcline addr: 44100
funcline addr: 44104
funcline addr: 44108
funcline addr: 44112
funcline addr: 44116
funcline addr: 44120
funcline addr: 44124
funcline addr: 44128
funcline addr: 44132
funcline addr: 44136
funcline addr: 44140
funcline addr: 44144
funcline addr: 44148
funcline addr: 44152
funcline addr: 44156
funcline addr: 44160
funcline addr: 44164
funcline addr: 44168
funcline addr: 44172
funcline addr: 44176
funcline addr: 44180
funcline addr: 44184
funcline addr: 44188
funcline addr: 44192
funcline addr: 44196
funcline addr: 44200
funcline addr: 44204
funcline addr: 44208
funcline addr: 44212
funcline addr: 44216
funcline addr: 44220
funcline addr: 44224
funcline addr: 44228
funcline addr: 44232
funcline addr: 44236
funcline addr: 44240
funcline addr: 44244
funcline addr: 44248
funcline addr: 44252
funcline addr: 44256
funcline addr: 44260
funcline addr: 44264
funcline addr: 44268
funcline addr: 44272
funcline addr: 44276
funcline addr: 44280
funcline addr: 44284
funcline addr: 44288
funcline addr: 44292
funcline addr: 44296
funcline addr: 44300
funcline addr: 44304
funcline addr: 44308
funcline addr: 44312
funcline addr: 44316
funcline addr: 44320
funcline addr: 44324
funcline addr: 44328
funcline addr: 44332
funcline addr: 44336
funcline addr: 44340
funcline addr: 44344
funcline addr: 44348
funcline addr: 44352
funcline addr: 44356
funcline addr: 44360
funcline addr: 44364
funcline addr: 44368
funcline addr: 44372
funcline addr: 44376
funcline addr: 44380
funcline addr: 44384
funcline addr: 44388
funcline addr: 44392
funcline addr: 44396
funcline addr: 44400
funcline addr: 44404
funcline addr: 44408
funcline addr: 44412
funcline addr: 44416
funcline addr: 44420
funcline addr: 44424
funcline addr: 44428
funcline addr: 44432
funcline addr: 44436
funcline addr: 44440
funcline addr: 44444
funcline addr: 44448
funcline addr: 44452
funcline addr: 44456
funcline addr: 44460
funcline addr: 44464
funcline addr: 44468
funcline addr: 44472
funcline addr: 44476
funcline addr: 44480
funcline addr: 44484
funcline addr: 44488
funcline addr: 44492
funcline addr: 44496
['execute_stack_op', 43040, 43040, 44496, []]
restartcode
['execute_stack_op', 43040, 44496, 44496, ['']]
code
funchead startaddr: 000000000000add4,funcname: uw_update_context_1
funcline addr: 44500
funcline addr: 44504
funcline addr: 44508
funcline addr: 44512
funcline addr: 44516
funcline addr: 44520
funcline addr: 44524
funcline addr: 44528
funcline addr: 44532
funcline addr: 44536
funcline addr: 44540
funcline addr: 44544
funcline addr: 44548
funcline addr: 44552
funcline addr: 44556
funcline addr: 44560
funcline addr: 44564
funcline addr: 44568
funcline addr: 44572
funcline addr: 44576
funcline addr: 44580
funcline addr: 44584
funcline addr: 44588
funcline addr: 44592
funcline addr: 44596
funcline addr: 44600
funcline addr: 44604
funcline addr: 44608
funcline addr: 44612
funcline addr: 44616
funcline addr: 44620
funcline addr: 44624
funcline addr: 44628
funcline addr: 44632
funcline addr: 44636
funcline addr: 44640
funcline addr: 44644
funcline addr: 44648
funcline addr: 44652
funcline addr: 44656
funcline addr: 44660
funcline addr: 44664
funcline addr: 44668
funcline addr: 44672
funcline addr: 44676
funcline addr: 44680
funcline addr: 44684
funcline addr: 44688
funcline addr: 44692
funcline addr: 44696
funcline addr: 44700
funcline addr: 44704
funcline addr: 44708
funcline addr: 44712
funcline addr: 44716
funcline addr: 44720
funcline addr: 44724
funcline addr: 44728
funcline addr: 44732
funcline addr: 44736
funcline addr: 44740
funcline addr: 44744
funcline addr: 44748
funcline addr: 44752
funcline addr: 44756
funcline addr: 44760
funcline addr: 44764
funcline addr: 44768
funcline addr: 44772
funcline addr: 44776
funcline addr: 44780
funcline addr: 44784
funcline addr: 44788
funcline addr: 44792
funcline addr: 44796
funcline addr: 44800
funcline addr: 44804
funcline addr: 44808
funcline addr: 44812
funcline addr: 44816
funcline addr: 44820
funcline addr: 44824
funcline addr: 44828
funcline addr: 44832
funcline addr: 44836
funcline addr: 44840
funcline addr: 44844
funcline addr: 44848
funcline addr: 44852
funcline addr: 44856
funcline addr: 44860
funcline addr: 44864
funcline addr: 44868
funcline addr: 44872
funcline addr: 44876
funcline addr: 44880
funcline addr: 44884
funcline addr: 44888
funcline addr: 44892
funcline addr: 44896
funcline addr: 44900
funcline addr: 44904
funcline addr: 44908
funcline addr: 44912
funcline addr: 44916
funcline addr: 44920
funcline addr: 44924
funcline addr: 44928
funcline addr: 44932
funcline addr: 44936
funcline addr: 44940
funcline addr: 44944
funcline addr: 44948
funcline addr: 44952
funcline addr: 44956
funcline addr: 44960
funcline addr: 44964
funcline addr: 44968
funcline addr: 44972
funcline addr: 44976
funcline addr: 44980
funcline addr: 44984
funcline addr: 44988
funcline addr: 44992
funcline addr: 44996
funcline addr: 45000
funcline addr: 45004
funcline addr: 45008
funcline addr: 45012
funcline addr: 45016
funcline addr: 45020
['uw_update_context_1', 44500, 44500, 45020, []]
restartcode
['uw_update_context_1', 44500, 45020, 45020, ['']]
code
funchead startaddr: 000000000000afe0,funcname: uw_init_context_1
funcline addr: 45024
funcline addr: 45028
funcline addr: 45032
funcline addr: 45036
funcline addr: 45040
funcline addr: 45044
funcline addr: 45048
funcline addr: 45052
funcline addr: 45056
funcline addr: 45060
funcline addr: 45064
funcline addr: 45068
funcline addr: 45072
funcline addr: 45076
funcline addr: 45080
funcline addr: 45084
funcline addr: 45088
funcline addr: 45092
funcline addr: 45096
funcline addr: 45100
funcline addr: 45104
funcline addr: 45108
funcline addr: 45112
funcline addr: 45116
funcline addr: 45120
funcline addr: 45124
funcline addr: 45128
funcline addr: 45132
funcline addr: 45136
funcline addr: 45140
funcline addr: 45144
funcline addr: 45148
funcline addr: 45152
funcline addr: 45156
funcline addr: 45160
funcline addr: 45164
funcline addr: 45168
funcline addr: 45172
funcline addr: 45176
funcline addr: 45180
funcline addr: 45184
funcline addr: 45188
funcline addr: 45192
funcline addr: 45196
funcline addr: 45200
funcline addr: 45204
funcline addr: 45208
funcline addr: 45212
funcline addr: 45216
funcline addr: 45220
funcline addr: 45224
funcline addr: 45228
funcline addr: 45232
funcline addr: 45236
funcline addr: 45240
['uw_init_context_1', 45024, 45024, 45240, []]
restartcode
['uw_init_context_1', 45024, 45240, 45240, ['']]
code
funchead startaddr: 000000000000b0bc,funcname: uw_update_context
funcline addr: 45244
funcline addr: 45248
funcline addr: 45252
funcline addr: 45256
funcline addr: 45260
funcline addr: 45264
funcline addr: 45268
funcline addr: 45272
funcline addr: 45276
funcline addr: 45280
funcline addr: 45284
funcline addr: 45288
funcline addr: 45292
funcline addr: 45296
funcline addr: 45300
funcline addr: 45304
funcline addr: 45308
funcline addr: 45312
funcline addr: 45316
['uw_update_context', 45244, 45244, 45316, []]
restartcode
['uw_update_context', 45244, 45316, 45316, ['']]
code
funchead startaddr: 000000000000b108,funcname: _Unwind_RaiseException_Phase2
funcline addr: 45320
funcline addr: 45324
funcline addr: 45328
funcline addr: 45332
funcline addr: 45336
funcline addr: 45340
funcline addr: 45344
funcline addr: 45348
funcline addr: 45352
funcline addr: 45356
funcline addr: 45360
funcline addr: 45364
funcline addr: 45368
funcline addr: 45372
funcline addr: 45376
funcline addr: 45380
funcline addr: 45384
funcline addr: 45388
funcline addr: 45392
funcline addr: 45396
funcline addr: 45400
funcline addr: 45404
funcline addr: 45408
funcline addr: 45412
funcline addr: 45416
funcline addr: 45420
funcline addr: 45424
funcline addr: 45428
funcline addr: 45432
funcline addr: 45436
funcline addr: 45440
funcline addr: 45444
funcline addr: 45448
funcline addr: 45452
funcline addr: 45456
funcline addr: 45460
funcline addr: 45464
funcline addr: 45468
funcline addr: 45472
funcline addr: 45476
funcline addr: 45480
funcline addr: 45484
funcline addr: 45488
funcline addr: 45492
funcline addr: 45496
funcline addr: 45500
funcline addr: 45504
funcline addr: 45508
['_Unwind_RaiseException_Phase2', 45320, 45320, 45508, []]
restartcode
['_Unwind_RaiseException_Phase2', 45320, 45508, 45508, ['']]
code
funchead startaddr: 000000000000b1c8,funcname: _Unwind_ForcedUnwind_Phase2
funcline addr: 45512
funcline addr: 45516
funcline addr: 45520
funcline addr: 45524
funcline addr: 45528
funcline addr: 45532
funcline addr: 45536
funcline addr: 45540
funcline addr: 45544
funcline addr: 45548
funcline addr: 45552
funcline addr: 45556
funcline addr: 45560
funcline addr: 45564
funcline addr: 45568
funcline addr: 45572
funcline addr: 45576
funcline addr: 45580
funcline addr: 45584
funcline addr: 45588
funcline addr: 45592
funcline addr: 45596
funcline addr: 45600
funcline addr: 45604
funcline addr: 45608
funcline addr: 45612
funcline addr: 45616
funcline addr: 45620
funcline addr: 45624
funcline addr: 45628
funcline addr: 45632
funcline addr: 45636
funcline addr: 45640
funcline addr: 45644
funcline addr: 45648
funcline addr: 45652
funcline addr: 45656
funcline addr: 45660
funcline addr: 45664
funcline addr: 45668
funcline addr: 45672
funcline addr: 45676
funcline addr: 45680
funcline addr: 45684
funcline addr: 45688
funcline addr: 45692
funcline addr: 45696
funcline addr: 45700
funcline addr: 45704
funcline addr: 45708
funcline addr: 45712
funcline addr: 45716
funcline addr: 45720
funcline addr: 45724
funcline addr: 45728
funcline addr: 45732
funcline addr: 45736
funcline addr: 45740
funcline addr: 45744
['_Unwind_ForcedUnwind_Phase2', 45512, 45512, 45744, []]
restartcode
['_Unwind_ForcedUnwind_Phase2', 45512, 45744, 45744, ['']]
code
funchead startaddr: 000000000000b2b4,funcname: __frame_state_for
funcline addr: 45748
funcline addr: 45752
funcline addr: 45756
funcline addr: 45760
funcline addr: 45764
funcline addr: 45768
funcline addr: 45772
funcline addr: 45776
funcline addr: 45780
funcline addr: 45784
funcline addr: 45788
funcline addr: 45792
funcline addr: 45796
funcline addr: 45800
funcline addr: 45804
funcline addr: 45808
funcline addr: 45812
funcline addr: 45816
funcline addr: 45820
funcline addr: 45824
funcline addr: 45828
funcline addr: 45832
funcline addr: 45836
funcline addr: 45840
funcline addr: 45844
funcline addr: 45848
funcline addr: 45852
funcline addr: 45856
funcline addr: 45860
funcline addr: 45864
funcline addr: 45868
funcline addr: 45872
funcline addr: 45876
funcline addr: 45880
funcline addr: 45884
funcline addr: 45888
funcline addr: 45892
funcline addr: 45896
funcline addr: 45900
funcline addr: 45904
funcline addr: 45908
funcline addr: 45912
funcline addr: 45916
funcline addr: 45920
funcline addr: 45924
funcline addr: 45928
funcline addr: 45932
funcline addr: 45936
funcline addr: 45940
funcline addr: 45944
funcline addr: 45948
funcline addr: 45952
funcline addr: 45956
funcline addr: 45960
funcline addr: 45964
funcline addr: 45968
funcline addr: 45972
funcline addr: 45976
funcline addr: 45980
funcline addr: 45984
funcline addr: 45988
['__frame_state_for', 45748, 45748, 45988, []]
restartcode
['__frame_state_for', 45748, 45988, 45988, ['']]
code
funchead startaddr: 000000000000b3a8,funcname: _Unwind_DebugHook
funcline addr: 45992
['_Unwind_DebugHook', 45992, 45992, 45992, []]
restartcode
['_Unwind_DebugHook', 45992, 45992, 45992, ['']]
code
funchead startaddr: 000000000000b3ac,funcname: _Unwind_RaiseException
funcline addr: 45996
funcline addr: 46000
funcline addr: 46004
funcline addr: 46008
funcline addr: 46012
funcline addr: 46016
funcline addr: 46020
funcline addr: 46024
funcline addr: 46028
funcline addr: 46032
funcline addr: 46036
funcline addr: 46040
funcline addr: 46044
funcline addr: 46048
funcline addr: 46052
funcline addr: 46056
funcline addr: 46060
funcline addr: 46064
funcline addr: 46068
funcline addr: 46072
funcline addr: 46076
funcline addr: 46080
funcline addr: 46084
funcline addr: 46088
funcline addr: 46092
funcline addr: 46096
funcline addr: 46100
funcline addr: 46104
funcline addr: 46108
funcline addr: 46112
funcline addr: 46116
funcline addr: 46120
funcline addr: 46124
funcline addr: 46128
funcline addr: 46132
funcline addr: 46136
funcline addr: 46140
funcline addr: 46144
funcline addr: 46148
funcline addr: 46152
funcline addr: 46156
funcline addr: 46160
funcline addr: 46164
funcline addr: 46168
funcline addr: 46172
funcline addr: 46176
funcline addr: 46180
funcline addr: 46184
funcline addr: 46188
funcline addr: 46192
funcline addr: 46196
funcline addr: 46200
funcline addr: 46204
funcline addr: 46208
funcline addr: 46212
funcline addr: 46216
funcline addr: 46220
funcline addr: 46224
funcline addr: 46228
funcline addr: 46232
funcline addr: 46236
funcline addr: 46240
funcline addr: 46244
funcline addr: 46248
funcline addr: 46252
funcline addr: 46256
funcline addr: 46260
funcline addr: 46264
funcline addr: 46268
funcline addr: 46272
funcline addr: 46276
funcline addr: 46280
funcline addr: 46284
funcline addr: 46288
funcline addr: 46292
funcline addr: 46296
funcline addr: 46300
funcline addr: 46304
funcline addr: 46308
funcline addr: 46312
funcline addr: 46316
funcline addr: 46320
funcline addr: 46324
funcline addr: 46328
funcline addr: 46332
funcline addr: 46336
funcline addr: 46340
funcline addr: 46344
funcline addr: 46348
funcline addr: 46352
funcline addr: 46356
funcline addr: 46360
funcline addr: 46364
funcline addr: 46368
['_Unwind_RaiseException', 45996, 45996, 46368, []]
restartcode
['_Unwind_RaiseException', 45996, 46368, 46368, ['']]
code
funchead startaddr: 000000000000b524,funcname: _Unwind_ForcedUnwind
funcline addr: 46372
funcline addr: 46376
funcline addr: 46380
funcline addr: 46384
funcline addr: 46388
funcline addr: 46392
funcline addr: 46396
funcline addr: 46400
funcline addr: 46404
funcline addr: 46408
funcline addr: 46412
funcline addr: 46416
funcline addr: 46420
funcline addr: 46424
funcline addr: 46428
funcline addr: 46432
funcline addr: 46436
funcline addr: 46440
funcline addr: 46444
funcline addr: 46448
funcline addr: 46452
funcline addr: 46456
funcline addr: 46460
funcline addr: 46464
funcline addr: 46468
funcline addr: 46472
funcline addr: 46476
funcline addr: 46480
funcline addr: 46484
funcline addr: 46488
funcline addr: 46492
funcline addr: 46496
funcline addr: 46500
funcline addr: 46504
funcline addr: 46508
funcline addr: 46512
funcline addr: 46516
funcline addr: 46520
funcline addr: 46524
funcline addr: 46528
funcline addr: 46532
funcline addr: 46536
funcline addr: 46540
funcline addr: 46544
funcline addr: 46548
funcline addr: 46552
funcline addr: 46556
funcline addr: 46560
funcline addr: 46564
funcline addr: 46568
funcline addr: 46572
funcline addr: 46576
funcline addr: 46580
funcline addr: 46584
funcline addr: 46588
funcline addr: 46592
funcline addr: 46596
funcline addr: 46600
funcline addr: 46604
funcline addr: 46608
funcline addr: 46612
['_Unwind_ForcedUnwind', 46372, 46372, 46612, []]
restartcode
['_Unwind_ForcedUnwind', 46372, 46612, 46612, ['']]
code
funchead startaddr: 000000000000b618,funcname: _Unwind_Resume
funcline addr: 46616
funcline addr: 46620
funcline addr: 46624
funcline addr: 46628
funcline addr: 46632
funcline addr: 46636
funcline addr: 46640
funcline addr: 46644
funcline addr: 46648
funcline addr: 46652
funcline addr: 46656
funcline addr: 46660
funcline addr: 46664
funcline addr: 46668
funcline addr: 46672
funcline addr: 46676
funcline addr: 46680
funcline addr: 46684
funcline addr: 46688
funcline addr: 46692
funcline addr: 46696
funcline addr: 46700
funcline addr: 46704
funcline addr: 46708
funcline addr: 46712
funcline addr: 46716
funcline addr: 46720
funcline addr: 46724
funcline addr: 46728
funcline addr: 46732
funcline addr: 46736
funcline addr: 46740
funcline addr: 46744
funcline addr: 46748
funcline addr: 46752
funcline addr: 46756
funcline addr: 46760
funcline addr: 46764
funcline addr: 46768
funcline addr: 46772
funcline addr: 46776
funcline addr: 46780
funcline addr: 46784
funcline addr: 46788
funcline addr: 46792
funcline addr: 46796
funcline addr: 46800
funcline addr: 46804
funcline addr: 46808
funcline addr: 46812
funcline addr: 46816
funcline addr: 46820
funcline addr: 46824
funcline addr: 46828
funcline addr: 46832
funcline addr: 46836
funcline addr: 46840
funcline addr: 46844
funcline addr: 46848
funcline addr: 46852
funcline addr: 46856
funcline addr: 46860
funcline addr: 46864
['_Unwind_Resume', 46616, 46616, 46864, []]
restartcode
['_Unwind_Resume', 46616, 46864, 46864, ['']]
code
funchead startaddr: 000000000000b714,funcname: _Unwind_Resume_or_Rethrow
funcline addr: 46868
funcline addr: 46872
funcline addr: 46876
funcline addr: 46880
funcline addr: 46884
funcline addr: 46888
funcline addr: 46892
funcline addr: 46896
funcline addr: 46900
funcline addr: 46904
funcline addr: 46908
funcline addr: 46912
funcline addr: 46916
funcline addr: 46920
funcline addr: 46924
funcline addr: 46928
funcline addr: 46932
funcline addr: 46936
funcline addr: 46940
funcline addr: 46944
funcline addr: 46948
funcline addr: 46952
funcline addr: 46956
funcline addr: 46960
funcline addr: 46964
funcline addr: 46968
funcline addr: 46972
funcline addr: 46976
funcline addr: 46980
funcline addr: 46984
funcline addr: 46988
funcline addr: 46992
funcline addr: 46996
funcline addr: 47000
funcline addr: 47004
funcline addr: 47008
funcline addr: 47012
funcline addr: 47016
funcline addr: 47020
funcline addr: 47024
funcline addr: 47028
funcline addr: 47032
funcline addr: 47036
funcline addr: 47040
funcline addr: 47044
funcline addr: 47048
funcline addr: 47052
funcline addr: 47056
funcline addr: 47060
funcline addr: 47064
funcline addr: 47068
funcline addr: 47072
funcline addr: 47076
funcline addr: 47080
funcline addr: 47084
funcline addr: 47088
funcline addr: 47092
funcline addr: 47096
funcline addr: 47100
funcline addr: 47104
funcline addr: 47108
funcline addr: 47112
['_Unwind_Resume_or_Rethrow', 46868, 46868, 47112, []]
restartcode
['_Unwind_Resume_or_Rethrow', 46868, 47112, 47112, ['']]
code
funchead startaddr: 000000000000b80c,funcname: _Unwind_DeleteException
funcline addr: 47116
funcline addr: 47120
funcline addr: 47124
funcline addr: 47128
funcline addr: 47132
funcline addr: 47136
funcline addr: 47140
funcline addr: 47144
funcline addr: 47148
['_Unwind_DeleteException', 47116, 47116, 47148, []]
restartcode
['_Unwind_DeleteException', 47116, 47148, 47148, ['']]
code
funchead startaddr: 000000000000b830,funcname: _Unwind_Backtrace
funcline addr: 47152
funcline addr: 47156
funcline addr: 47160
funcline addr: 47164
funcline addr: 47168
funcline addr: 47172
funcline addr: 47176
funcline addr: 47180
funcline addr: 47184
funcline addr: 47188
funcline addr: 47192
funcline addr: 47196
funcline addr: 47200
funcline addr: 47204
funcline addr: 47208
funcline addr: 47212
funcline addr: 47216
funcline addr: 47220
funcline addr: 47224
funcline addr: 47228
funcline addr: 47232
funcline addr: 47236
funcline addr: 47240
funcline addr: 47244
funcline addr: 47248
funcline addr: 47252
funcline addr: 47256
funcline addr: 47260
funcline addr: 47264
funcline addr: 47268
funcline addr: 47272
funcline addr: 47276
funcline addr: 47280
funcline addr: 47284
funcline addr: 47288
funcline addr: 47292
funcline addr: 47296
funcline addr: 47300
funcline addr: 47304
funcline addr: 47308
funcline addr: 47312
funcline addr: 47316
funcline addr: 47320
funcline addr: 47324
funcline addr: 47328
funcline addr: 47332
funcline addr: 47336
funcline addr: 47340
funcline addr: 47344
funcline addr: 47348
funcline addr: 47352
funcline addr: 47356
['_Unwind_Backtrace', 47152, 47152, 47356, []]
restartcode
['_Unwind_Backtrace', 47152, 47356, 47356, ['']]
code
funchead startaddr: 000000000000b900,funcname: read_uleb128
funcline addr: 47360
funcline addr: 47364
funcline addr: 47368
funcline addr: 47372
funcline addr: 47376
funcline addr: 47380
funcline addr: 47384
funcline addr: 47388
funcline addr: 47392
funcline addr: 47396
['read_uleb128', 47360, 47360, 47396, []]
restartcode
['read_uleb128', 47360, 47396, 47396, ['']]
code
funchead startaddr: 000000000000b928,funcname: read_sleb128
funcline addr: 47400
funcline addr: 47404
funcline addr: 47408
funcline addr: 47412
funcline addr: 47416
funcline addr: 47420
funcline addr: 47424
funcline addr: 47428
funcline addr: 47432
funcline addr: 47436
funcline addr: 47440
funcline addr: 47444
funcline addr: 47448
funcline addr: 47452
funcline addr: 47456
funcline addr: 47460
['read_sleb128', 47400, 47400, 47460, []]
restartcode
['read_sleb128', 47400, 47460, 47460, ['']]
code
funchead startaddr: 000000000000b968,funcname: fde_unencoded_compare
funcline addr: 47464
funcline addr: 47468
funcline addr: 47472
funcline addr: 47476
funcline addr: 47480
funcline addr: 47484
funcline addr: 47488
['fde_unencoded_compare', 47464, 47464, 47488, []]
restartcode
['fde_unencoded_compare', 47464, 47488, 47488, ['']]
code
funchead startaddr: 000000000000b984,funcname: frame_downheap
funcline addr: 47492
funcline addr: 47496
funcline addr: 47500
funcline addr: 47504
funcline addr: 47508
funcline addr: 47512
funcline addr: 47516
funcline addr: 47520
funcline addr: 47524
funcline addr: 47528
funcline addr: 47532
funcline addr: 47536
funcline addr: 47540
funcline addr: 47544
funcline addr: 47548
funcline addr: 47552
funcline addr: 47556
funcline addr: 47560
funcline addr: 47564
funcline addr: 47568
funcline addr: 47572
funcline addr: 47576
funcline addr: 47580
funcline addr: 47584
funcline addr: 47588
funcline addr: 47592
funcline addr: 47596
funcline addr: 47600
funcline addr: 47604
funcline addr: 47608
funcline addr: 47612
funcline addr: 47616
funcline addr: 47620
funcline addr: 47624
funcline addr: 47628
funcline addr: 47632
funcline addr: 47636
funcline addr: 47640
funcline addr: 47644
funcline addr: 47648
funcline addr: 47652
funcline addr: 47656
funcline addr: 47660
funcline addr: 47664
funcline addr: 47668
funcline addr: 47672
funcline addr: 47676
funcline addr: 47680
['frame_downheap', 47492, 47492, 47680, []]
restartcode
['frame_downheap', 47492, 47680, 47680, ['']]
code
funchead startaddr: 000000000000ba44,funcname: frame_heapsort
funcline addr: 47684
funcline addr: 47688
funcline addr: 47692
funcline addr: 47696
funcline addr: 47700
funcline addr: 47704
funcline addr: 47708
funcline addr: 47712
funcline addr: 47716
funcline addr: 47720
funcline addr: 47724
funcline addr: 47728
funcline addr: 47732
funcline addr: 47736
funcline addr: 47740
funcline addr: 47744
funcline addr: 47748
funcline addr: 47752
funcline addr: 47756
funcline addr: 47760
funcline addr: 47764
funcline addr: 47768
funcline addr: 47772
funcline addr: 47776
funcline addr: 47780
funcline addr: 47784
funcline addr: 47788
funcline addr: 47792
funcline addr: 47796
funcline addr: 47800
funcline addr: 47804
funcline addr: 47808
funcline addr: 47812
funcline addr: 47816
funcline addr: 47820
funcline addr: 47824
funcline addr: 47828
funcline addr: 47832
funcline addr: 47836
funcline addr: 47840
funcline addr: 47844
funcline addr: 47848
funcline addr: 47852
funcline addr: 47856
funcline addr: 47860
['frame_heapsort', 47684, 47684, 47860, []]
restartcode
['frame_heapsort', 47684, 47860, 47860, ['']]
code
funchead startaddr: 000000000000baf8,funcname: size_of_encoded_value
funcline addr: 47864
funcline addr: 47868
funcline addr: 47872
funcline addr: 47876
funcline addr: 47880
funcline addr: 47884
funcline addr: 47888
funcline addr: 47892
funcline addr: 47896
funcline addr: 47900
funcline addr: 47904
funcline addr: 47908
funcline addr: 47912
funcline addr: 47916
funcline addr: 47920
funcline addr: 47924
funcline addr: 47928
funcline addr: 47932
funcline addr: 47936
funcline addr: 47940
funcline addr: 47944
funcline addr: 47948
funcline addr: 47952
funcline addr: 47956
['size_of_encoded_value', 47864, 47864, 47956, []]
restartcode
['size_of_encoded_value', 47864, 47956, 47956, ['']]
code
funchead startaddr: 000000000000bb58,funcname: base_from_object
funcline addr: 47960
funcline addr: 47964
funcline addr: 47968
funcline addr: 47972
funcline addr: 47976
funcline addr: 47980
funcline addr: 47984
funcline addr: 47988
funcline addr: 47992
funcline addr: 47996
funcline addr: 48000
funcline addr: 48004
funcline addr: 48008
funcline addr: 48012
funcline addr: 48016
funcline addr: 48020
funcline addr: 48024
funcline addr: 48028
funcline addr: 48032
funcline addr: 48036
funcline addr: 48040
funcline addr: 48044
funcline addr: 48048
funcline addr: 48052
['base_from_object', 47960, 47960, 48052, []]
restartcode
['base_from_object', 47960, 48052, 48052, ['']]
code
funchead startaddr: 000000000000bbb8,funcname: base_from_cb_data
funcline addr: 48056
funcline addr: 48060
funcline addr: 48064
funcline addr: 48068
funcline addr: 48072
funcline addr: 48076
funcline addr: 48080
funcline addr: 48084
funcline addr: 48088
funcline addr: 48092
funcline addr: 48096
funcline addr: 48100
funcline addr: 48104
funcline addr: 48108
funcline addr: 48112
funcline addr: 48116
funcline addr: 48120
funcline addr: 48124
funcline addr: 48128
funcline addr: 48132
funcline addr: 48136
funcline addr: 48140
funcline addr: 48144
funcline addr: 48148
['base_from_cb_data', 48056, 48056, 48148, []]
restartcode
['base_from_cb_data', 48056, 48148, 48148, ['']]
code
funchead startaddr: 000000000000bc18,funcname: read_encoded_value_with_base
funcline addr: 48152
funcline addr: 48156
funcline addr: 48160
funcline addr: 48164
funcline addr: 48168
funcline addr: 48172
funcline addr: 48176
funcline addr: 48180
funcline addr: 48184
funcline addr: 48188
funcline addr: 48192
funcline addr: 48196
funcline addr: 48200
funcline addr: 48204
funcline addr: 48208
funcline addr: 48212
funcline addr: 48216
funcline addr: 48220
funcline addr: 48224
funcline addr: 48228
funcline addr: 48232
funcline addr: 48236
funcline addr: 48240
funcline addr: 48244
funcline addr: 48248
funcline addr: 48252
funcline addr: 48256
funcline addr: 48260
funcline addr: 48264
funcline addr: 48268
funcline addr: 48272
funcline addr: 48276
funcline addr: 48280
funcline addr: 48284
funcline addr: 48288
funcline addr: 48292
funcline addr: 48296
funcline addr: 48300
funcline addr: 48304
funcline addr: 48308
funcline addr: 48312
funcline addr: 48316
funcline addr: 48320
funcline addr: 48324
funcline addr: 48328
funcline addr: 48332
funcline addr: 48336
funcline addr: 48340
funcline addr: 48344
funcline addr: 48348
funcline addr: 48352
funcline addr: 48356
funcline addr: 48360
funcline addr: 48364
funcline addr: 48368
funcline addr: 48372
funcline addr: 48376
funcline addr: 48380
funcline addr: 48384
funcline addr: 48388
['read_encoded_value_with_base', 48152, 48152, 48388, []]
restartcode
['read_encoded_value_with_base', 48152, 48388, 48388, ['']]
code
funchead startaddr: 000000000000bd08,funcname: fde_single_encoding_compare
funcline addr: 48392
funcline addr: 48396
funcline addr: 48400
funcline addr: 48404
funcline addr: 48408
funcline addr: 48412
funcline addr: 48416
funcline addr: 48420
funcline addr: 48424
funcline addr: 48428
funcline addr: 48432
funcline addr: 48436
funcline addr: 48440
funcline addr: 48444
funcline addr: 48448
funcline addr: 48452
funcline addr: 48456
funcline addr: 48460
funcline addr: 48464
funcline addr: 48468
funcline addr: 48472
funcline addr: 48476
funcline addr: 48480
funcline addr: 48484
funcline addr: 48488
funcline addr: 48492
funcline addr: 48496
funcline addr: 48500
funcline addr: 48504
funcline addr: 48508
funcline addr: 48512
funcline addr: 48516
funcline addr: 48520
funcline addr: 48524
funcline addr: 48528
funcline addr: 48532
['fde_single_encoding_compare', 48392, 48392, 48532, []]
restartcode
['fde_single_encoding_compare', 48392, 48532, 48532, ['']]
code
funchead startaddr: 000000000000bd98,funcname: get_cie_encoding
funcline addr: 48536
funcline addr: 48540
funcline addr: 48544
funcline addr: 48548
funcline addr: 48552
funcline addr: 48556
funcline addr: 48560
funcline addr: 48564
funcline addr: 48568
funcline addr: 48572
funcline addr: 48576
funcline addr: 48580
funcline addr: 48584
funcline addr: 48588
funcline addr: 48592
funcline addr: 48596
funcline addr: 48600
funcline addr: 48604
funcline addr: 48608
funcline addr: 48612
funcline addr: 48616
funcline addr: 48620
funcline addr: 48624
funcline addr: 48628
funcline addr: 48632
funcline addr: 48636
funcline addr: 48640
funcline addr: 48644
funcline addr: 48648
funcline addr: 48652
funcline addr: 48656
funcline addr: 48660
funcline addr: 48664
funcline addr: 48668
funcline addr: 48672
funcline addr: 48676
funcline addr: 48680
funcline addr: 48684
funcline addr: 48688
funcline addr: 48692
funcline addr: 48696
funcline addr: 48700
funcline addr: 48704
funcline addr: 48708
funcline addr: 48712
funcline addr: 48716
funcline addr: 48720
funcline addr: 48724
funcline addr: 48728
funcline addr: 48732
funcline addr: 48736
funcline addr: 48740
funcline addr: 48744
funcline addr: 48748
funcline addr: 48752
funcline addr: 48756
funcline addr: 48760
funcline addr: 48764
funcline addr: 48768
funcline addr: 48772
funcline addr: 48776
funcline addr: 48780
funcline addr: 48784
['get_cie_encoding', 48536, 48536, 48784, []]
restartcode
['get_cie_encoding', 48536, 48784, 48784, ['']]
code
funchead startaddr: 000000000000be94,funcname: linear_search_fdes
funcline addr: 48788
funcline addr: 48792
funcline addr: 48796
funcline addr: 48800
funcline addr: 48804
funcline addr: 48808
funcline addr: 48812
funcline addr: 48816
funcline addr: 48820
funcline addr: 48824
funcline addr: 48828
funcline addr: 48832
funcline addr: 48836
funcline addr: 48840
funcline addr: 48844
funcline addr: 48848
funcline addr: 48852
funcline addr: 48856
funcline addr: 48860
funcline addr: 48864
funcline addr: 48868
funcline addr: 48872
funcline addr: 48876
funcline addr: 48880
funcline addr: 48884
funcline addr: 48888
funcline addr: 48892
funcline addr: 48896
funcline addr: 48900
funcline addr: 48904
funcline addr: 48908
funcline addr: 48912
funcline addr: 48916
funcline addr: 48920
funcline addr: 48924
funcline addr: 48928
funcline addr: 48932
funcline addr: 48936
funcline addr: 48940
funcline addr: 48944
funcline addr: 48948
funcline addr: 48952
funcline addr: 48956
funcline addr: 48960
funcline addr: 48964
funcline addr: 48968
funcline addr: 48972
funcline addr: 48976
funcline addr: 48980
funcline addr: 48984
funcline addr: 48988
funcline addr: 48992
funcline addr: 48996
funcline addr: 49000
funcline addr: 49004
funcline addr: 49008
funcline addr: 49012
funcline addr: 49016
funcline addr: 49020
funcline addr: 49024
funcline addr: 49028
funcline addr: 49032
funcline addr: 49036
funcline addr: 49040
funcline addr: 49044
funcline addr: 49048
funcline addr: 49052
funcline addr: 49056
funcline addr: 49060
funcline addr: 49064
funcline addr: 49068
funcline addr: 49072
funcline addr: 49076
funcline addr: 49080
funcline addr: 49084
funcline addr: 49088
funcline addr: 49092
funcline addr: 49096
funcline addr: 49100
funcline addr: 49104
funcline addr: 49108
funcline addr: 49112
funcline addr: 49116
funcline addr: 49120
funcline addr: 49124
funcline addr: 49128
funcline addr: 49132
funcline addr: 49136
['linear_search_fdes', 48788, 48788, 49136, []]
restartcode
['linear_search_fdes', 48788, 49136, 49136, ['']]
code
funchead startaddr: 000000000000bff4,funcname: get_fde_encoding
funcline addr: 49140
funcline addr: 49144
funcline addr: 49148
funcline addr: 49152
['get_fde_encoding', 49140, 49140, 49152, []]
restartcode
['get_fde_encoding', 49140, 49152, 49152, ['']]
code
funchead startaddr: 000000000000c004,funcname: _Unwind_IteratePhdrCallback
funcline addr: 49156
funcline addr: 49160
funcline addr: 49164
funcline addr: 49168
funcline addr: 49172
funcline addr: 49176
funcline addr: 49180
funcline addr: 49184
funcline addr: 49188
funcline addr: 49192
funcline addr: 49196
funcline addr: 49200
funcline addr: 49204
funcline addr: 49208
funcline addr: 49212
funcline addr: 49216
funcline addr: 49220
funcline addr: 49224
funcline addr: 49228
funcline addr: 49232
funcline addr: 49236
funcline addr: 49240
funcline addr: 49244
funcline addr: 49248
funcline addr: 49252
funcline addr: 49256
funcline addr: 49260
funcline addr: 49264
funcline addr: 49268
funcline addr: 49272
funcline addr: 49276
funcline addr: 49280
funcline addr: 49284
funcline addr: 49288
funcline addr: 49292
funcline addr: 49296
funcline addr: 49300
funcline addr: 49304
funcline addr: 49308
funcline addr: 49312
funcline addr: 49316
funcline addr: 49320
funcline addr: 49324
funcline addr: 49328
funcline addr: 49332
funcline addr: 49336
funcline addr: 49340
funcline addr: 49344
funcline addr: 49348
funcline addr: 49352
funcline addr: 49356
funcline addr: 49360
funcline addr: 49364
funcline addr: 49368
funcline addr: 49372
funcline addr: 49376
funcline addr: 49380
funcline addr: 49384
funcline addr: 49388
funcline addr: 49392
funcline addr: 49396
funcline addr: 49400
funcline addr: 49404
funcline addr: 49408
funcline addr: 49412
funcline addr: 49416
funcline addr: 49420
funcline addr: 49424
funcline addr: 49428
funcline addr: 49432
funcline addr: 49436
funcline addr: 49440
funcline addr: 49444
funcline addr: 49448
funcline addr: 49452
funcline addr: 49456
funcline addr: 49460
funcline addr: 49464
funcline addr: 49468
funcline addr: 49472
funcline addr: 49476
funcline addr: 49480
funcline addr: 49484
funcline addr: 49488
funcline addr: 49492
funcline addr: 49496
funcline addr: 49500
funcline addr: 49504
funcline addr: 49508
funcline addr: 49512
funcline addr: 49516
funcline addr: 49520
funcline addr: 49524
funcline addr: 49528
funcline addr: 49532
funcline addr: 49536
funcline addr: 49540
funcline addr: 49544
funcline addr: 49548
funcline addr: 49552
funcline addr: 49556
funcline addr: 49560
funcline addr: 49564
funcline addr: 49568
funcline addr: 49572
funcline addr: 49576
funcline addr: 49580
funcline addr: 49584
funcline addr: 49588
funcline addr: 49592
funcline addr: 49596
funcline addr: 49600
funcline addr: 49604
funcline addr: 49608
funcline addr: 49612
funcline addr: 49616
funcline addr: 49620
funcline addr: 49624
funcline addr: 49628
funcline addr: 49632
funcline addr: 49636
funcline addr: 49640
funcline addr: 49644
funcline addr: 49648
funcline addr: 49652
funcline addr: 49656
funcline addr: 49660
funcline addr: 49664
funcline addr: 49668
funcline addr: 49672
funcline addr: 49676
funcline addr: 49680
funcline addr: 49684
funcline addr: 49688
funcline addr: 49692
funcline addr: 49696
funcline addr: 49700
funcline addr: 49704
funcline addr: 49708
funcline addr: 49712
funcline addr: 49716
funcline addr: 49720
funcline addr: 49724
funcline addr: 49728
funcline addr: 49732
funcline addr: 49736
funcline addr: 49740
funcline addr: 49744
funcline addr: 49748
funcline addr: 49752
funcline addr: 49756
funcline addr: 49760
funcline addr: 49764
funcline addr: 49768
funcline addr: 49772
funcline addr: 49776
funcline addr: 49780
funcline addr: 49784
funcline addr: 49788
funcline addr: 49792
funcline addr: 49796
funcline addr: 49800
funcline addr: 49804
funcline addr: 49808
funcline addr: 49812
funcline addr: 49816
funcline addr: 49820
funcline addr: 49824
funcline addr: 49828
funcline addr: 49832
funcline addr: 49836
funcline addr: 49840
funcline addr: 49844
funcline addr: 49848
funcline addr: 49852
funcline addr: 49856
funcline addr: 49860
funcline addr: 49864
funcline addr: 49868
funcline addr: 49872
funcline addr: 49876
funcline addr: 49880
funcline addr: 49884
funcline addr: 49888
funcline addr: 49892
funcline addr: 49896
funcline addr: 49900
funcline addr: 49904
funcline addr: 49908
funcline addr: 49912
funcline addr: 49916
funcline addr: 49920
funcline addr: 49924
funcline addr: 49928
funcline addr: 49932
funcline addr: 49936
funcline addr: 49940
funcline addr: 49944
funcline addr: 49948
funcline addr: 49952
funcline addr: 49956
funcline addr: 49960
funcline addr: 49964
funcline addr: 49968
funcline addr: 49972
funcline addr: 49976
funcline addr: 49980
funcline addr: 49984
funcline addr: 49988
funcline addr: 49992
funcline addr: 49996
funcline addr: 50000
funcline addr: 50004
funcline addr: 50008
funcline addr: 50012
funcline addr: 50016
funcline addr: 50020
funcline addr: 50024
funcline addr: 50028
funcline addr: 50032
funcline addr: 50036
funcline addr: 50040
funcline addr: 50044
funcline addr: 50048
funcline addr: 50052
funcline addr: 50056
funcline addr: 50060
funcline addr: 50064
funcline addr: 50068
funcline addr: 50072
funcline addr: 50076
funcline addr: 50080
funcline addr: 50084
funcline addr: 50088
funcline addr: 50092
funcline addr: 50096
funcline addr: 50100
funcline addr: 50104
funcline addr: 50108
funcline addr: 50112
funcline addr: 50116
funcline addr: 50120
funcline addr: 50124
funcline addr: 50128
funcline addr: 50132
funcline addr: 50136
funcline addr: 50140
funcline addr: 50144
funcline addr: 50148
funcline addr: 50152
funcline addr: 50156
funcline addr: 50160
funcline addr: 50164
funcline addr: 50168
funcline addr: 50172
funcline addr: 50176
funcline addr: 50180
funcline addr: 50184
funcline addr: 50188
funcline addr: 50192
funcline addr: 50196
funcline addr: 50200
funcline addr: 50204
['_Unwind_IteratePhdrCallback', 49156, 49156, 50204, []]
restartcode
['_Unwind_IteratePhdrCallback', 49156, 50204, 50204, ['']]
code
funchead startaddr: 000000000000c420,funcname: fde_mixed_encoding_compare
funcline addr: 50208
funcline addr: 50212
funcline addr: 50216
funcline addr: 50220
funcline addr: 50224
funcline addr: 50228
funcline addr: 50232
funcline addr: 50236
funcline addr: 50240
funcline addr: 50244
funcline addr: 50248
funcline addr: 50252
funcline addr: 50256
funcline addr: 50260
funcline addr: 50264
funcline addr: 50268
funcline addr: 50272
funcline addr: 50276
funcline addr: 50280
funcline addr: 50284
funcline addr: 50288
funcline addr: 50292
funcline addr: 50296
funcline addr: 50300
funcline addr: 50304
funcline addr: 50308
funcline addr: 50312
funcline addr: 50316
funcline addr: 50320
funcline addr: 50324
funcline addr: 50328
funcline addr: 50332
funcline addr: 50336
funcline addr: 50340
funcline addr: 50344
funcline addr: 50348
funcline addr: 50352
funcline addr: 50356
funcline addr: 50360
['fde_mixed_encoding_compare', 50208, 50208, 50360, []]
restartcode
['fde_mixed_encoding_compare', 50208, 50360, 50360, ['']]
code
funchead startaddr: 000000000000c4bc,funcname: classify_object_over_fdes
funcline addr: 50364
funcline addr: 50368
funcline addr: 50372
funcline addr: 50376
funcline addr: 50380
funcline addr: 50384
funcline addr: 50388
funcline addr: 50392
funcline addr: 50396
funcline addr: 50400
funcline addr: 50404
funcline addr: 50408
funcline addr: 50412
funcline addr: 50416
funcline addr: 50420
funcline addr: 50424
funcline addr: 50428
funcline addr: 50432
funcline addr: 50436
funcline addr: 50440
funcline addr: 50444
funcline addr: 50448
funcline addr: 50452
funcline addr: 50456
funcline addr: 50460
funcline addr: 50464
funcline addr: 50468
funcline addr: 50472
funcline addr: 50476
funcline addr: 50480
funcline addr: 50484
funcline addr: 50488
funcline addr: 50492
funcline addr: 50496
funcline addr: 50500
funcline addr: 50504
funcline addr: 50508
funcline addr: 50512
funcline addr: 50516
funcline addr: 50520
funcline addr: 50524
funcline addr: 50528
funcline addr: 50532
funcline addr: 50536
funcline addr: 50540
funcline addr: 50544
funcline addr: 50548
funcline addr: 50552
funcline addr: 50556
funcline addr: 50560
funcline addr: 50564
funcline addr: 50568
funcline addr: 50572
funcline addr: 50576
funcline addr: 50580
funcline addr: 50584
funcline addr: 50588
funcline addr: 50592
funcline addr: 50596
funcline addr: 50600
funcline addr: 50604
funcline addr: 50608
funcline addr: 50612
funcline addr: 50616
funcline addr: 50620
funcline addr: 50624
funcline addr: 50628
funcline addr: 50632
funcline addr: 50636
funcline addr: 50640
funcline addr: 50644
funcline addr: 50648
funcline addr: 50652
funcline addr: 50656
funcline addr: 50660
funcline addr: 50664
funcline addr: 50668
funcline addr: 50672
funcline addr: 50676
funcline addr: 50680
funcline addr: 50684
funcline addr: 50688
funcline addr: 50692
funcline addr: 50696
funcline addr: 50700
funcline addr: 50704
funcline addr: 50708
funcline addr: 50712
['classify_object_over_fdes', 50364, 50364, 50712, []]
restartcode
['classify_object_over_fdes', 50364, 50712, 50712, ['']]
code
funchead startaddr: 000000000000c61c,funcname: add_fdes
funcline addr: 50716
funcline addr: 50720
funcline addr: 50724
funcline addr: 50728
funcline addr: 50732
funcline addr: 50736
funcline addr: 50740
funcline addr: 50744
funcline addr: 50748
funcline addr: 50752
funcline addr: 50756
funcline addr: 50760
funcline addr: 50764
funcline addr: 50768
funcline addr: 50772
funcline addr: 50776
funcline addr: 50780
funcline addr: 50784
funcline addr: 50788
funcline addr: 50792
funcline addr: 50796
funcline addr: 50800
funcline addr: 50804
funcline addr: 50808
funcline addr: 50812
funcline addr: 50816
funcline addr: 50820
funcline addr: 50824
funcline addr: 50828
funcline addr: 50832
funcline addr: 50836
funcline addr: 50840
funcline addr: 50844
funcline addr: 50848
funcline addr: 50852
funcline addr: 50856
funcline addr: 50860
funcline addr: 50864
funcline addr: 50868
funcline addr: 50872
funcline addr: 50876
funcline addr: 50880
funcline addr: 50884
funcline addr: 50888
funcline addr: 50892
funcline addr: 50896
funcline addr: 50900
funcline addr: 50904
funcline addr: 50908
funcline addr: 50912
funcline addr: 50916
funcline addr: 50920
funcline addr: 50924
funcline addr: 50928
funcline addr: 50932
funcline addr: 50936
funcline addr: 50940
funcline addr: 50944
funcline addr: 50948
funcline addr: 50952
funcline addr: 50956
funcline addr: 50960
funcline addr: 50964
funcline addr: 50968
funcline addr: 50972
funcline addr: 50976
funcline addr: 50980
funcline addr: 50984
funcline addr: 50988
funcline addr: 50992
funcline addr: 50996
funcline addr: 51000
funcline addr: 51004
funcline addr: 51008
funcline addr: 51012
funcline addr: 51016
funcline addr: 51020
['add_fdes', 50716, 50716, 51020, []]
restartcode
['add_fdes', 50716, 51020, 51020, ['']]
code
funchead startaddr: 000000000000c750,funcname: search_object
funcline addr: 51024
funcline addr: 51028
funcline addr: 51032
funcline addr: 51036
funcline addr: 51040
funcline addr: 51044
funcline addr: 51048
funcline addr: 51052
funcline addr: 51056
funcline addr: 51060
funcline addr: 51064
funcline addr: 51068
funcline addr: 51072
funcline addr: 51076
funcline addr: 51080
funcline addr: 51084
funcline addr: 51088
funcline addr: 51092
funcline addr: 51096
funcline addr: 51100
funcline addr: 51104
funcline addr: 51108
funcline addr: 51112
funcline addr: 51116
funcline addr: 51120
funcline addr: 51124
funcline addr: 51128
funcline addr: 51132
funcline addr: 51136
funcline addr: 51140
funcline addr: 51144
funcline addr: 51148
funcline addr: 51152
funcline addr: 51156
funcline addr: 51160
funcline addr: 51164
funcline addr: 51168
funcline addr: 51172
funcline addr: 51176
funcline addr: 51180
funcline addr: 51184
funcline addr: 51188
funcline addr: 51192
funcline addr: 51196
funcline addr: 51200
funcline addr: 51204
funcline addr: 51208
funcline addr: 51212
funcline addr: 51216
funcline addr: 51220
funcline addr: 51224
funcline addr: 51228
funcline addr: 51232
funcline addr: 51236
funcline addr: 51240
funcline addr: 51244
funcline addr: 51248
funcline addr: 51252
funcline addr: 51256
funcline addr: 51260
funcline addr: 51264
funcline addr: 51268
funcline addr: 51272
funcline addr: 51276
funcline addr: 51280
funcline addr: 51284
funcline addr: 51288
funcline addr: 51292
funcline addr: 51296
funcline addr: 51300
funcline addr: 51304
funcline addr: 51308
funcline addr: 51312
funcline addr: 51316
funcline addr: 51320
funcline addr: 51324
funcline addr: 51328
funcline addr: 51332
funcline addr: 51336
funcline addr: 51340
funcline addr: 51344
funcline addr: 51348
funcline addr: 51352
funcline addr: 51356
funcline addr: 51360
funcline addr: 51364
funcline addr: 51368
funcline addr: 51372
funcline addr: 51376
funcline addr: 51380
funcline addr: 51384
funcline addr: 51388
funcline addr: 51392
funcline addr: 51396
funcline addr: 51400
funcline addr: 51404
funcline addr: 51408
funcline addr: 51412
funcline addr: 51416
funcline addr: 51420
funcline addr: 51424
funcline addr: 51428
funcline addr: 51432
funcline addr: 51436
funcline addr: 51440
funcline addr: 51444
funcline addr: 51448
funcline addr: 51452
funcline addr: 51456
funcline addr: 51460
funcline addr: 51464
funcline addr: 51468
funcline addr: 51472
funcline addr: 51476
funcline addr: 51480
funcline addr: 51484
funcline addr: 51488
funcline addr: 51492
funcline addr: 51496
funcline addr: 51500
funcline addr: 51504
funcline addr: 51508
funcline addr: 51512
funcline addr: 51516
funcline addr: 51520
funcline addr: 51524
funcline addr: 51528
funcline addr: 51532
funcline addr: 51536
funcline addr: 51540
funcline addr: 51544
funcline addr: 51548
funcline addr: 51552
funcline addr: 51556
funcline addr: 51560
funcline addr: 51564
funcline addr: 51568
funcline addr: 51572
funcline addr: 51576
funcline addr: 51580
funcline addr: 51584
funcline addr: 51588
funcline addr: 51592
funcline addr: 51596
funcline addr: 51600
funcline addr: 51604
funcline addr: 51608
funcline addr: 51612
funcline addr: 51616
funcline addr: 51620
funcline addr: 51624
funcline addr: 51628
funcline addr: 51632
funcline addr: 51636
funcline addr: 51640
funcline addr: 51644
funcline addr: 51648
funcline addr: 51652
funcline addr: 51656
funcline addr: 51660
funcline addr: 51664
funcline addr: 51668
funcline addr: 51672
funcline addr: 51676
funcline addr: 51680
funcline addr: 51684
funcline addr: 51688
funcline addr: 51692
funcline addr: 51696
funcline addr: 51700
funcline addr: 51704
funcline addr: 51708
funcline addr: 51712
funcline addr: 51716
funcline addr: 51720
funcline addr: 51724
funcline addr: 51728
funcline addr: 51732
funcline addr: 51736
funcline addr: 51740
funcline addr: 51744
funcline addr: 51748
funcline addr: 51752
funcline addr: 51756
funcline addr: 51760
funcline addr: 51764
funcline addr: 51768
funcline addr: 51772
funcline addr: 51776
funcline addr: 51780
funcline addr: 51784
funcline addr: 51788
funcline addr: 51792
funcline addr: 51796
funcline addr: 51800
funcline addr: 51804
funcline addr: 51808
funcline addr: 51812
funcline addr: 51816
funcline addr: 51820
funcline addr: 51824
funcline addr: 51828
funcline addr: 51832
funcline addr: 51836
funcline addr: 51840
funcline addr: 51844
funcline addr: 51848
funcline addr: 51852
funcline addr: 51856
funcline addr: 51860
funcline addr: 51864
funcline addr: 51868
funcline addr: 51872
funcline addr: 51876
funcline addr: 51880
funcline addr: 51884
funcline addr: 51888
funcline addr: 51892
funcline addr: 51896
funcline addr: 51900
funcline addr: 51904
funcline addr: 51908
funcline addr: 51912
funcline addr: 51916
funcline addr: 51920
funcline addr: 51924
funcline addr: 51928
funcline addr: 51932
funcline addr: 51936
funcline addr: 51940
funcline addr: 51944
funcline addr: 51948
funcline addr: 51952
funcline addr: 51956
funcline addr: 51960
funcline addr: 51964
funcline addr: 51968
funcline addr: 51972
funcline addr: 51976
funcline addr: 51980
funcline addr: 51984
funcline addr: 51988
funcline addr: 51992
funcline addr: 51996
funcline addr: 52000
funcline addr: 52004
funcline addr: 52008
funcline addr: 52012
funcline addr: 52016
funcline addr: 52020
funcline addr: 52024
funcline addr: 52028
funcline addr: 52032
funcline addr: 52036
funcline addr: 52040
funcline addr: 52044
funcline addr: 52048
funcline addr: 52052
funcline addr: 52056
funcline addr: 52060
funcline addr: 52064
funcline addr: 52068
funcline addr: 52072
funcline addr: 52076
funcline addr: 52080
funcline addr: 52084
funcline addr: 52088
funcline addr: 52092
funcline addr: 52096
funcline addr: 52100
funcline addr: 52104
funcline addr: 52108
funcline addr: 52112
funcline addr: 52116
funcline addr: 52120
funcline addr: 52124
funcline addr: 52128
funcline addr: 52132
funcline addr: 52136
funcline addr: 52140
funcline addr: 52144
funcline addr: 52148
funcline addr: 52152
funcline addr: 52156
funcline addr: 52160
funcline addr: 52164
funcline addr: 52168
funcline addr: 52172
funcline addr: 52176
funcline addr: 52180
funcline addr: 52184
funcline addr: 52188
funcline addr: 52192
funcline addr: 52196
funcline addr: 52200
funcline addr: 52204
funcline addr: 52208
funcline addr: 52212
funcline addr: 52216
funcline addr: 52220
funcline addr: 52224
funcline addr: 52228
funcline addr: 52232
funcline addr: 52236
funcline addr: 52240
funcline addr: 52244
funcline addr: 52248
funcline addr: 52252
funcline addr: 52256
funcline addr: 52260
funcline addr: 52264
funcline addr: 52268
funcline addr: 52272
funcline addr: 52276
funcline addr: 52280
funcline addr: 52284
funcline addr: 52288
funcline addr: 52292
funcline addr: 52296
funcline addr: 52300
funcline addr: 52304
funcline addr: 52308
funcline addr: 52312
funcline addr: 52316
funcline addr: 52320
funcline addr: 52324
funcline addr: 52328
funcline addr: 52332
funcline addr: 52336
funcline addr: 52340
funcline addr: 52344
funcline addr: 52348
funcline addr: 52352
funcline addr: 52356
funcline addr: 52360
funcline addr: 52364
funcline addr: 52368
funcline addr: 52372
funcline addr: 52376
funcline addr: 52380
funcline addr: 52384
funcline addr: 52388
funcline addr: 52392
funcline addr: 52396
funcline addr: 52400
funcline addr: 52404
funcline addr: 52408
funcline addr: 52412
['search_object', 51024, 51024, 52412, []]
restartcode
['search_object', 51024, 52412, 52412, ['']]
code
funchead startaddr: 000000000000ccc0,funcname: __register_frame_info_bases
funcline addr: 52416
funcline addr: 52420
funcline addr: 52424
funcline addr: 52428
funcline addr: 52432
funcline addr: 52436
funcline addr: 52440
funcline addr: 52444
funcline addr: 52448
funcline addr: 52452
funcline addr: 52456
funcline addr: 52460
funcline addr: 52464
funcline addr: 52468
funcline addr: 52472
funcline addr: 52476
funcline addr: 52480
funcline addr: 52484
funcline addr: 52488
funcline addr: 52492
funcline addr: 52496
funcline addr: 52500
funcline addr: 52504
funcline addr: 52508
funcline addr: 52512
funcline addr: 52516
funcline addr: 52520
funcline addr: 52524
funcline addr: 52528
funcline addr: 52532
funcline addr: 52536
funcline addr: 52540
funcline addr: 52544
funcline addr: 52548
funcline addr: 52552
funcline addr: 52556
funcline addr: 52560
funcline addr: 52564
funcline addr: 52568
['__register_frame_info_bases', 52416, 52416, 52568, []]
restartcode
['__register_frame_info_bases', 52416, 52568, 52568, ['']]
code
funchead startaddr: 000000000000cd5c,funcname: __register_frame_info
funcline addr: 52572
funcline addr: 52576
funcline addr: 52580
['__register_frame_info', 52572, 52572, 52580, []]
restartcode
['__register_frame_info', 52572, 52580, 52580, ['']]
code
funchead startaddr: 000000000000cd68,funcname: __register_frame
funcline addr: 52584
funcline addr: 52588
funcline addr: 52592
funcline addr: 52596
funcline addr: 52600
funcline addr: 52604
funcline addr: 52608
funcline addr: 52612
funcline addr: 52616
funcline addr: 52620
funcline addr: 52624
funcline addr: 52628
funcline addr: 52632
funcline addr: 52636
funcline addr: 52640
funcline addr: 52644
['__register_frame', 52584, 52584, 52644, []]
restartcode
['__register_frame', 52584, 52644, 52644, ['']]
code
funchead startaddr: 000000000000cda8,funcname: __register_frame_info_table_bases
funcline addr: 52648
funcline addr: 52652
funcline addr: 52656
funcline addr: 52660
funcline addr: 52664
funcline addr: 52668
funcline addr: 52672
funcline addr: 52676
funcline addr: 52680
funcline addr: 52684
funcline addr: 52688
funcline addr: 52692
funcline addr: 52696
funcline addr: 52700
funcline addr: 52704
funcline addr: 52708
funcline addr: 52712
funcline addr: 52716
funcline addr: 52720
funcline addr: 52724
funcline addr: 52728
funcline addr: 52732
funcline addr: 52736
funcline addr: 52740
funcline addr: 52744
funcline addr: 52748
funcline addr: 52752
funcline addr: 52756
funcline addr: 52760
funcline addr: 52764
funcline addr: 52768
funcline addr: 52772
funcline addr: 52776
funcline addr: 52780
funcline addr: 52784
funcline addr: 52788
funcline addr: 52792
['__register_frame_info_table_bases', 52648, 52648, 52792, []]
restartcode
['__register_frame_info_table_bases', 52648, 52792, 52792, ['']]
code
funchead startaddr: 000000000000ce3c,funcname: __register_frame_info_table
funcline addr: 52796
funcline addr: 52800
funcline addr: 52804
['__register_frame_info_table', 52796, 52796, 52804, []]
restartcode
['__register_frame_info_table', 52796, 52804, 52804, ['']]
code
funchead startaddr: 000000000000ce48,funcname: __register_frame_table
funcline addr: 52808
funcline addr: 52812
funcline addr: 52816
funcline addr: 52820
funcline addr: 52824
funcline addr: 52828
funcline addr: 52832
funcline addr: 52836
funcline addr: 52840
funcline addr: 52844
funcline addr: 52848
['__register_frame_table', 52808, 52808, 52848, []]
restartcode
['__register_frame_table', 52808, 52848, 52848, ['']]
code
funchead startaddr: 000000000000ce74,funcname: __deregister_frame_info_bases
funcline addr: 52852
funcline addr: 52856
funcline addr: 52860
funcline addr: 52864
funcline addr: 52868
funcline addr: 52872
funcline addr: 52876
funcline addr: 52880
funcline addr: 52884
funcline addr: 52888
funcline addr: 52892
funcline addr: 52896
funcline addr: 52900
funcline addr: 52904
funcline addr: 52908
funcline addr: 52912
funcline addr: 52916
funcline addr: 52920
funcline addr: 52924
funcline addr: 52928
funcline addr: 52932
funcline addr: 52936
funcline addr: 52940
funcline addr: 52944
funcline addr: 52948
funcline addr: 52952
funcline addr: 52956
funcline addr: 52960
funcline addr: 52964
funcline addr: 52968
funcline addr: 52972
funcline addr: 52976
funcline addr: 52980
funcline addr: 52984
funcline addr: 52988
funcline addr: 52992
funcline addr: 52996
funcline addr: 53000
funcline addr: 53004
funcline addr: 53008
funcline addr: 53012
funcline addr: 53016
funcline addr: 53020
funcline addr: 53024
funcline addr: 53028
funcline addr: 53032
funcline addr: 53036
funcline addr: 53040
funcline addr: 53044
funcline addr: 53048
funcline addr: 53052
funcline addr: 53056
funcline addr: 53060
funcline addr: 53064
funcline addr: 53068
funcline addr: 53072
funcline addr: 53076
funcline addr: 53080
funcline addr: 53084
funcline addr: 53088
funcline addr: 53092
funcline addr: 53096
funcline addr: 53100
funcline addr: 53104
['__deregister_frame_info_bases', 52852, 52852, 53104, []]
restartcode
['__deregister_frame_info_bases', 52852, 53104, 53104, ['']]
code
funchead startaddr: 000000000000cf74,funcname: __deregister_frame_info
funcline addr: 53108
['__deregister_frame_info', 53108, 53108, 53108, []]
restartcode
['__deregister_frame_info', 53108, 53108, 53108, ['']]
code
funchead startaddr: 000000000000cf78,funcname: __deregister_frame
funcline addr: 53112
funcline addr: 53116
funcline addr: 53120
funcline addr: 53124
funcline addr: 53128
funcline addr: 53132
funcline addr: 53136
funcline addr: 53140
funcline addr: 53144
['__deregister_frame', 53112, 53112, 53144, []]
restartcode
['__deregister_frame', 53112, 53144, 53144, ['']]
code
funchead startaddr: 000000000000cf9c,funcname: _Unwind_Find_FDE
funcline addr: 53148
funcline addr: 53152
funcline addr: 53156
funcline addr: 53160
funcline addr: 53164
funcline addr: 53168
funcline addr: 53172
funcline addr: 53176
funcline addr: 53180
funcline addr: 53184
funcline addr: 53188
funcline addr: 53192
funcline addr: 53196
funcline addr: 53200
funcline addr: 53204
funcline addr: 53208
funcline addr: 53212
funcline addr: 53216
funcline addr: 53220
funcline addr: 53224
funcline addr: 53228
funcline addr: 53232
funcline addr: 53236
funcline addr: 53240
funcline addr: 53244
funcline addr: 53248
funcline addr: 53252
funcline addr: 53256
funcline addr: 53260
funcline addr: 53264
funcline addr: 53268
funcline addr: 53272
funcline addr: 53276
funcline addr: 53280
funcline addr: 53284
funcline addr: 53288
funcline addr: 53292
funcline addr: 53296
funcline addr: 53300
funcline addr: 53304
funcline addr: 53308
funcline addr: 53312
funcline addr: 53316
funcline addr: 53320
funcline addr: 53324
funcline addr: 53328
funcline addr: 53332
funcline addr: 53336
funcline addr: 53340
funcline addr: 53344
funcline addr: 53348
funcline addr: 53352
funcline addr: 53356
funcline addr: 53360
funcline addr: 53364
funcline addr: 53368
funcline addr: 53372
funcline addr: 53376
funcline addr: 53380
funcline addr: 53384
funcline addr: 53388
funcline addr: 53392
funcline addr: 53396
funcline addr: 53400
funcline addr: 53404
funcline addr: 53408
funcline addr: 53412
funcline addr: 53416
funcline addr: 53420
funcline addr: 53424
funcline addr: 53428
funcline addr: 53432
funcline addr: 53436
funcline addr: 53440
funcline addr: 53444
funcline addr: 53448
funcline addr: 53452
funcline addr: 53456
funcline addr: 53460
funcline addr: 53464
funcline addr: 53468
funcline addr: 53472
funcline addr: 53476
funcline addr: 53480
funcline addr: 53484
funcline addr: 53488
funcline addr: 53492
funcline addr: 53496
funcline addr: 53500
funcline addr: 53504
funcline addr: 53508
funcline addr: 53512
funcline addr: 53516
funcline addr: 53520
funcline addr: 53524
funcline addr: 53528
funcline addr: 53532
funcline addr: 53536
funcline addr: 53540
funcline addr: 53544
funcline addr: 53548
funcline addr: 53552
funcline addr: 53556
funcline addr: 53560
funcline addr: 53564
funcline addr: 53568
funcline addr: 53572
funcline addr: 53576
funcline addr: 53580
funcline addr: 53584
funcline addr: 53588
funcline addr: 53592
funcline addr: 53596
['_Unwind_Find_FDE', 53148, 53148, 53596, []]
restartcode
['_Unwind_Find_FDE', 53148, 53596, 53596, ['']]
code
parseasm end====================
parsestack start====================
libname: libxcrash.so
[22512, 22680, 22696, 22712, 22828]
ret=======
parsestack end====================
0x000057f0:                  xc_test_call_4 + 0x000c 
    (*a)++;
0x000057f0:                  xc_test_call_4 + 0x000c 

0x00005898:                  xc_test_call_3 + 0x0008 
    int r = xc_test_call_4(v + 1);
0x00005898:                  xc_test_call_3 + 0x0008 

0x000058a8:                  xc_test_call_2 + 0x000c 
    int r = xc_test_call_3(v + 1);
0x000058a8:                  xc_test_call_2 + 0x000c 

0x000058b8:                  xc_test_call_1 + 0x000c 
    int r = xc_test_call_2(1);
0x000058b8:                  xc_test_call_1 + 0x000c 

0x0000592c:                   xc_test_crash + 0x0070 
        xc_test_call_1();
liuhangdeMacBook-Pro:~ liuhang$ 
